#pragma warning disable CS1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DataverseModel
{
	
	
	/// <summary>
	/// Status of the Application Base Funding
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	public enum CcOf_Application_BaseFunding_StateCode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Active", 0)]
		Active = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Inactive", 1)]
		Inactive = 1,
	}
	
	/// <summary>
	/// Reason for the status of the Application Base Funding
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	public enum CcOf_Application_BaseFunding_StatusCode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Action Required", 4)]
		ActionRequired = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Active", 2)]
		Active = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Cancelled", 5)]
		Cancelled = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Inactive", 3)]
		Inactive_Active = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Inactive", 1)]
		Inactive_Inactive = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Submitted", 0)]
		Submitted = 1,
	}
	
	[System.Runtime.Serialization.DataContractAttribute()]
	[Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("ccof_application_basefunding")]
	public partial class CcOf_Application_BaseFunding : Microsoft.Xrm.Sdk.Entity
	{
		
		/// <summary>
		/// Available fields, a the time of codegen, for the ccof_application_basefunding entity
		/// </summary>
		public partial class Fields
		{
			public const string Business_Unit_CcOf_Application_BaseFunding = "business_unit_ccof_application_basefunding";
			public const string CcOf_30MonthToSchoolage4HoursOfLessExtendedCc = "ccof_30monthtoschoolage4hoursoflessextendedcc";
			public const string CcOf_30MonthToSchoolageMoreThan4HourExtended = "ccof_30monthtoschoolagemorethan4hourextended";
			public const string CcOf_AfterKindergarten = "ccof_afterkindergarten";
			public const string CcOf_AfterKindergartenName = "ccof_afterkindergartenname";
			public const string CcOf_AfterSchool = "ccof_afterschool";
			public const string CcOf_AfterSchoolName = "ccof_afterschoolname";
			public const string CcOf_Application = "ccof_application";
			public const string CcOf_Application_BaseFunding_Application = "ccof_application_basefunding_Application";
			public const string CcOf_Application_BaseFunding_Facility = "ccof_application_basefunding_Facility";
			public const string CcOf_Application_BaseFundingId = "ccof_application_basefundingid";
			public const string Id = "ccof_application_basefundingid";
			public const string CcOf_ApplicationName = "ccof_applicationname";
			public const string CcOf_BeforeKindergarten = "ccof_beforekindergarten";
			public const string CcOf_BeforeKindergartenName = "ccof_beforekindergartenname";
			public const string CcOf_BeforeSchool = "ccof_beforeschool";
			public const string CcOf_BeforeSchoolName = "ccof_beforeschoolname";
			public const string CcOf_CcOf_License_Category_CcOf_Application_BaseFunding_LicenseTypes = "ccof_ccof_license_category_ccof_application_basefunding_licensetypes";
			public const string CcOf_ClosedFacilityInApr = "ccof_closedfacilityinapr";
			public const string CcOf_ClosedFacilityInAprName = "ccof_closedfacilityinaprname";
			public const string CcOf_ClosedFacilityInAug = "ccof_closedfacilityinaug";
			public const string CcOf_ClosedFacilityInAugName = "ccof_closedfacilityinaugname";
			public const string CcOf_ClosedFacilityInDec = "ccof_closedfacilityindec";
			public const string CcOf_ClosedFacilityInDecName = "ccof_closedfacilityindecname";
			public const string CcOf_ClosedFacilityInFeb = "ccof_closedfacilityinfeb";
			public const string CcOf_ClosedFacilityInFebName = "ccof_closedfacilityinfebname";
			public const string CcOf_ClosedFacilityInJan = "ccof_closedfacilityinjan";
			public const string CcOf_ClosedFacilityInJanName = "ccof_closedfacilityinjanname";
			public const string CcOf_ClosedFacilityInJul = "ccof_closedfacilityinjul";
			public const string CcOf_ClosedFacilityInJulName = "ccof_closedfacilityinjulname";
			public const string CcOf_ClosedFacilityInJun = "ccof_closedfacilityinjun";
			public const string CcOf_ClosedFacilityInJunName = "ccof_closedfacilityinjunname";
			public const string CcOf_ClosedFacilityInMar = "ccof_closedfacilityinmar";
			public const string CcOf_ClosedFacilityInMarName = "ccof_closedfacilityinmarname";
			public const string CcOf_ClosedFacilityInMay = "ccof_closedfacilityinmay";
			public const string CcOf_ClosedFacilityInMayName = "ccof_closedfacilityinmayname";
			public const string CcOf_ClosedFacilityInNov = "ccof_closedfacilityinnov";
			public const string CcOf_ClosedFacilityInNovName = "ccof_closedfacilityinnovname";
			public const string CcOf_ClosedFacilityInOct = "ccof_closedfacilityinoct";
			public const string CcOf_ClosedFacilityInOctName = "ccof_closedfacilityinoctname";
			public const string CcOf_ClosedFacilityInSep = "ccof_closedfacilityinsep";
			public const string CcOf_ClosedFacilityInSepName = "ccof_closedfacilityinsepname";
			public const string CcOf_DM_SourceId = "ccof_dm_sourceid";
			public const string CcOf_Facility = "ccof_facility";
			public const string CcOf_FacilityHoursOfOperationFrom = "ccof_facilityhoursofoperationfrom";
			public const string CcOf_FacilityHoursOfOperationTo = "ccof_facilityhoursofoperationto";
			public const string CcOf_FacilityName = "ccof_facilityname";
			public const string CcOf_FacilityYomiName = "ccof_facilityyominame";
			public const string CcOf_FamilyChildCare4HoursOrLessExtendedCc = "ccof_familychildcare4hoursorlessextendedcc";
			public const string CcOf_FamilyChildCareMaxNumber = "ccof_familychildcaremaxnumber";
			public const string CcOf_FamilyChildCareMoreThan4HoursExtendedCc = "ccof_familychildcaremorethan4hoursextendedcc";
			public const string CcOf_FormComplete = "ccof_formcomplete";
			public const string CcOf_FormCompleteName = "ccof_formcompletename";
			public const string CcOf_GroupChildCare30MonthToSchoolageMaxNumber = "ccof_groupchildcare30monthtoschoolagemaxnumber";
			public const string CcOf_GroupChildCareSchoolageCareOnSchoolGround = "ccof_groupchildcareschoolagecareonschoolground";
			public const string CcOf_GroupChildCareUnder36Months = "ccof_groupchildcareunder36months";
			public const string CcOf_Has_30MonthToSchoolage = "ccof_has_30monthtoschoolage";
			public const string CcOf_Has_30MonthToSchoolage_ExtendedCc = "ccof_has_30monthtoschoolage_extendedcc";
			public const string CcOf_Has_30MonthToSchoolage_ExtendedCcName = "ccof_has_30monthtoschoolage_extendedccname";
			public const string CcOf_Has_30MonthToSchoolageName = "ccof_has_30monthtoschoolagename";
			public const string CcOf_Has_MultiAgeChildCare = "ccof_has_multiagechildcare";
			public const string CcOf_Has_MultiAgeChildCare_ExtendedCc = "ccof_has_multiagechildcare_extendedcc";
			public const string CcOf_Has_MultiAgeChildCare_ExtendedCcName = "ccof_has_multiagechildcare_extendedccname";
			public const string CcOf_Has_MultiAgeChildCaRename = "ccof_has_multiagechildcarename";
			public const string CcOf_Has_Preschool = "ccof_has_preschool";
			public const string CcOf_Has_PreschoolName = "ccof_has_preschoolname";
			public const string CcOf_Has_SchoolageCareOnSchoolGround = "ccof_has_schoolagecareonschoolground";
			public const string CcOf_Has_SchoolageCareOnSchoolGround_ExtendedC = "ccof_has_schoolagecareonschoolground_extendedc";
			public const string CcOf_Has_SchoolageCareOnSchoolGround_ExtendedCName = "ccof_has_schoolagecareonschoolground_extendedcname";
			public const string CcOf_Has_SchoolageCareOnSchoolGroundName = "ccof_has_schoolagecareonschoolgroundname";
			public const string CcOf_Has_Under36Months = "ccof_has_under36months";
			public const string CcOf_Has_Under36Months_ExtendedCc = "ccof_has_under36months_extendedcc";
			public const string CcOf_Has_Under36Months_ExtendedCcName = "ccof_has_under36months_extendedccname";
			public const string CcOf_Has_Under36MonthsName = "ccof_has_under36monthsname";
			public const string CcOf_InHomeMultiAgeCc4HoursOrLessExtendedCc = "ccof_inhomemultiagecc4hoursorlessextendedcc";
			public const string CcOf_InHomeMultiAgeCcMaxNumber = "ccof_inhomemultiageccmaxnumber";
			public const string CcOf_InHomeMultiAgeCcMoreThan4HoursExtendedCc = "ccof_inhomemultiageccmorethan4hoursextendedcc";
			public const string CcOf_IsTheFacilityLocatedOnSchoolProperty = "ccof_isthefacilitylocatedonschoolproperty";
			public const string CcOf_IsTheFacilityLocatedOnSchoolPropertyName = "ccof_isthefacilitylocatedonschoolpropertyname";
			public const string CcOf_LicenseTypes = "ccof_licensetypes";
			public const string CcOf_LicenseTypesName = "ccof_licensetypesname";
			public const string CcOf_MaximumLicensedCapacity = "ccof_maximumlicensedcapacity";
			public const string CcOf_MaximumNumberOfChildCareSpacesYouOffer = "ccof_maximumnumberofchildcarespacesyouoffer";
			public const string CcOf_MaximumNumberOfSpacesYouOfferExtendedHours = "ccof_maximumnumberofspacesyouofferextendedhours";
			public const string CcOf_MaxNoOfDaysPerWeekExtendedHoursOffered = "ccof_maxnoofdaysperweekextendedhoursoffered";
			public const string CcOf_MaxNoOfDaysPerWeekYouProvideChildCare = "ccof_maxnoofdaysperweekyouprovidechildcare";
			public const string CcOf_MaxNoOfWeeksPerYearExtendedHoursOffered = "ccof_maxnoofweeksperyearextendedhoursoffered";
			public const string CcOf_MaxNoOfWeeksPerYearYouProvideChildCare = "ccof_maxnoofweeksperyearyouprovidechildcare";
			public const string CcOf_MonthsWhenAllOfTheProgramsClosedComplete = "ccof_monthswhenalloftheprogramsclosedcomplete";
			public const string CcOf_MonthsWhenAllOfTheProgramsClosedCompleteName = "ccof_monthswhenalloftheprogramsclosedcompletename";
			public const string CcOf_MonthWhenFacilityIsClosedForEntireMonth = "ccof_monthwhenfacilityisclosedforentiremonth";
			public const string CcOf_MonthWhenFacilityIsClosedForEntireMonthName = "ccof_monthwhenfacilityisclosedforentiremonthname";
			public const string CcOf_MultiAgeChildCare4HoursOfLessExtendedCc = "ccof_multiagechildcare4hoursoflessextendedcc";
			public const string CcOf_MultiAgeChildCareMaxNumber = "ccof_multiagechildcaremaxnumber";
			public const string CcOf_MultiAgeChildCareMoreThan4HourExtendedCc = "ccof_multiagechildcaremorethan4hourextendedcc";
			public const string CcOf_Name = "ccof_name";
			public const string CcOf_New_Facility_Application_CcOf = "CcOf_New_Facility_Application_CcOf";
			public const string CcOf_PreschoolMaxNumber = "ccof_preschoolmaxnumber";
			public const string CcOf_PreschoolSessionFri = "ccof_preschoolsessionfri";
			public const string CcOf_PreschoolSessionMon = "ccof_preschoolsessionmon";
			public const string CcOf_PreschoolSessionThurs = "ccof_preschoolsessionthurs";
			public const string CcOf_PreschoolSessionTotal = "ccof_preschoolsessiontotal";
			public const string CcOf_PreschoolSessionTueS = "ccof_preschoolsessiontues";
			public const string CcOf_PreschoolSessionWed = "ccof_preschoolsessionwed";
			public const string CcOf_ProviderType = "ccof_providertype";
			public const string CcOf_ProviderTypeName = "ccof_providertypename";
			public const string CcOf_RegularlyOfferExtendedDailyHourOfChildCa = "ccof_regularlyofferextendeddailyhourofchildca";
			public const string CcOf_RegularlyOfferExtendedDailyHourOfChildCaName = "ccof_regularlyofferextendeddailyhourofchildcaname";
			public const string CcOf_SchoolageOnGround4HoursOfLessExtendedCc = "ccof_schoolageonground4hoursoflessextendedcc";
			public const string CcOf_SchoolageOnGroundMoreThan4HrExtendedCc = "ccof_schoolageongroundmorethan4hrextendedcc";
			public const string CcOf_Under36Months4HoursOfLessExtendedCc = "ccof_under36months4hoursoflessextendedcc";
			public const string CcOf_Under36MonthsMoreThan4HourExtendedCc = "ccof_under36monthsmorethan4hourextendedcc";
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string Lk_CcOf_Application_BaseFunding_CreatedBy = "lk_ccof_application_basefunding_createdby";
			public const string Lk_CcOf_Application_BaseFunding_CreatedOnBehalfBy = "lk_ccof_application_basefunding_createdonbehalfby";
			public const string Lk_CcOf_Application_BaseFunding_ModifiedBy = "lk_ccof_application_basefunding_modifiedby";
			public const string Lk_CcOf_Application_BaseFunding_ModifiedOnBehalfBy = "lk_ccof_application_basefunding_modifiedonbehalfby";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string OwnerId = "ownerid";
			public const string OwnerIdName = "owneridname";
			public const string OwnerIdYomiName = "owneridyominame";
			public const string OwningBusinessUnit = "owningbusinessunit";
			public const string OwningBusinessUnitName = "owningbusinessunitname";
			public const string OwningTeam = "owningteam";
			public const string OwningUser = "owninguser";
			public const string StateCode = "statecode";
			public const string StateCodename = "statecodename";
			public const string StatusCode = "statuscode";
			public const string StatusCodename = "statuscodename";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string User_CcOf_Application_BaseFunding = "user_ccof_application_basefunding";
			public const string UtcConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
		}
		
		[System.Diagnostics.DebuggerNonUserCode()]
		public CcOf_Application_BaseFunding(System.Guid id) : 
				base(EntityLogicalName, id)
		{
		}
		
		[System.Diagnostics.DebuggerNonUserCode()]
		public CcOf_Application_BaseFunding(string keyName, object keyValue) : 
				base(EntityLogicalName, keyName, keyValue)
		{
		}
		
		[System.Diagnostics.DebuggerNonUserCode()]
		public CcOf_Application_BaseFunding(Microsoft.Xrm.Sdk.KeyAttributeCollection keyAttributes) : 
				base(EntityLogicalName, keyAttributes)
		{
		}
		
		public const string AlternateKeys = "ccof_application,ccof_facility|ccof_dm_sourceid";
		
		/// <summary>
		/// Default Constructor.
		/// </summary>
		[System.Diagnostics.DebuggerNonUserCode()]
		public CcOf_Application_BaseFunding() : 
				base(EntityLogicalName)
		{
		}
		
		public const string PrimaryIdAttribute = "ccof_application_basefundingid";
		
		public const string PrimaryNameAttribute = "ccof_name";
		
		public const string EntitySchemaName = "ccof_Application_BaseFunding";
		
		public const string EntityLogicalName = "ccof_application_basefunding";
		
		public const string EntityLogicalCollectionName = "ccof_application_basefundings";
		
		public const string EntitySetName = "ccof_application_basefundings";
		
		/// <summary>
		/// Group Child Care (30 Months to School Age)
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_30monthtoschoolage4hoursoflessextendedcc")]
		public System.Nullable<int> CcOf_30MonthToSchoolage4HoursOfLessExtendedCc
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("ccof_30monthtoschoolage4hoursoflessextendedcc");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ccof_30monthtoschoolage4hoursoflessextendedcc", value);
			}
		}
		
		/// <summary>
		/// Group Child Care (30 Months to School Age)
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_30monthtoschoolagemorethan4hourextended")]
		public System.Nullable<int> CcOf_30MonthToSchoolageMoreThan4HourExtended
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("ccof_30monthtoschoolagemorethan4hourextended");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ccof_30monthtoschoolagemorethan4hourextended", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_afterkindergarten")]
		public virtual CcOf_YesNo? CcOf_AfterKindergarten
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((CcOf_YesNo?)(EntityOptionSetEnum.GetEnum(this, "ccof_afterkindergarten")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ccof_afterkindergarten", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_afterkindergartenname")]
		public string CcOf_AfterKindergartenName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ccof_afterkindergarten"))
				{
					return this.FormattedValues["ccof_afterkindergarten"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_afterschool")]
		public virtual CcOf_YesNo? CcOf_AfterSchool
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((CcOf_YesNo?)(EntityOptionSetEnum.GetEnum(this, "ccof_afterschool")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ccof_afterschool", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_afterschoolname")]
		public string CcOf_AfterSchoolName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ccof_afterschool"))
				{
					return this.FormattedValues["ccof_afterschool"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Associated Application
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_application")]
		public Microsoft.Xrm.Sdk.EntityReference CcOf_Application
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ccof_application");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ccof_application", value);
			}
		}
		
		/// <summary>
		/// Unique identifier for entity instances
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_application_basefundingid")]
		public System.Nullable<System.Guid> CcOf_Application_BaseFundingId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("ccof_application_basefundingid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ccof_application_basefundingid", value);
				if (value.HasValue)
				{
					base.Id = value.Value;
				}
				else
				{
					base.Id = System.Guid.Empty;
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_application_basefundingid")]
		public override System.Guid Id
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return base.Id;
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.CcOf_Application_BaseFundingId = value;
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_applicationname")]
		public string CcOf_ApplicationName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ccof_application"))
				{
					return this.FormattedValues["ccof_application"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_beforekindergarten")]
		public virtual CcOf_YesNo? CcOf_BeforeKindergarten
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((CcOf_YesNo?)(EntityOptionSetEnum.GetEnum(this, "ccof_beforekindergarten")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ccof_beforekindergarten", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_beforekindergartenname")]
		public string CcOf_BeforeKindergartenName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ccof_beforekindergarten"))
				{
					return this.FormattedValues["ccof_beforekindergarten"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_beforeschool")]
		public virtual CcOf_YesNo? CcOf_BeforeSchool
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((CcOf_YesNo?)(EntityOptionSetEnum.GetEnum(this, "ccof_beforeschool")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ccof_beforeschool", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_beforeschoolname")]
		public string CcOf_BeforeSchoolName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ccof_beforeschool"))
				{
					return this.FormattedValues["ccof_beforeschool"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_closedfacilityinapr")]
		public virtual CcOf_YesNo? CcOf_ClosedFacilityInApr
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((CcOf_YesNo?)(EntityOptionSetEnum.GetEnum(this, "ccof_closedfacilityinapr")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ccof_closedfacilityinapr", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_closedfacilityinaprname")]
		public string CcOf_ClosedFacilityInAprName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ccof_closedfacilityinapr"))
				{
					return this.FormattedValues["ccof_closedfacilityinapr"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_closedfacilityinaug")]
		public virtual CcOf_YesNo? CcOf_ClosedFacilityInAug
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((CcOf_YesNo?)(EntityOptionSetEnum.GetEnum(this, "ccof_closedfacilityinaug")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ccof_closedfacilityinaug", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_closedfacilityinaugname")]
		public string CcOf_ClosedFacilityInAugName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ccof_closedfacilityinaug"))
				{
					return this.FormattedValues["ccof_closedfacilityinaug"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_closedfacilityindec")]
		public virtual CcOf_YesNo? CcOf_ClosedFacilityInDec
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((CcOf_YesNo?)(EntityOptionSetEnum.GetEnum(this, "ccof_closedfacilityindec")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ccof_closedfacilityindec", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_closedfacilityindecname")]
		public string CcOf_ClosedFacilityInDecName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ccof_closedfacilityindec"))
				{
					return this.FormattedValues["ccof_closedfacilityindec"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_closedfacilityinfeb")]
		public virtual CcOf_YesNo? CcOf_ClosedFacilityInFeb
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((CcOf_YesNo?)(EntityOptionSetEnum.GetEnum(this, "ccof_closedfacilityinfeb")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ccof_closedfacilityinfeb", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_closedfacilityinfebname")]
		public string CcOf_ClosedFacilityInFebName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ccof_closedfacilityinfeb"))
				{
					return this.FormattedValues["ccof_closedfacilityinfeb"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_closedfacilityinjan")]
		public virtual CcOf_YesNo? CcOf_ClosedFacilityInJan
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((CcOf_YesNo?)(EntityOptionSetEnum.GetEnum(this, "ccof_closedfacilityinjan")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ccof_closedfacilityinjan", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_closedfacilityinjanname")]
		public string CcOf_ClosedFacilityInJanName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ccof_closedfacilityinjan"))
				{
					return this.FormattedValues["ccof_closedfacilityinjan"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_closedfacilityinjul")]
		public virtual CcOf_YesNo? CcOf_ClosedFacilityInJul
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((CcOf_YesNo?)(EntityOptionSetEnum.GetEnum(this, "ccof_closedfacilityinjul")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ccof_closedfacilityinjul", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_closedfacilityinjulname")]
		public string CcOf_ClosedFacilityInJulName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ccof_closedfacilityinjul"))
				{
					return this.FormattedValues["ccof_closedfacilityinjul"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_closedfacilityinjun")]
		public virtual CcOf_YesNo? CcOf_ClosedFacilityInJun
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((CcOf_YesNo?)(EntityOptionSetEnum.GetEnum(this, "ccof_closedfacilityinjun")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ccof_closedfacilityinjun", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_closedfacilityinjunname")]
		public string CcOf_ClosedFacilityInJunName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ccof_closedfacilityinjun"))
				{
					return this.FormattedValues["ccof_closedfacilityinjun"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_closedfacilityinmar")]
		public virtual CcOf_YesNo? CcOf_ClosedFacilityInMar
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((CcOf_YesNo?)(EntityOptionSetEnum.GetEnum(this, "ccof_closedfacilityinmar")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ccof_closedfacilityinmar", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_closedfacilityinmarname")]
		public string CcOf_ClosedFacilityInMarName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ccof_closedfacilityinmar"))
				{
					return this.FormattedValues["ccof_closedfacilityinmar"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_closedfacilityinmay")]
		public virtual CcOf_YesNo? CcOf_ClosedFacilityInMay
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((CcOf_YesNo?)(EntityOptionSetEnum.GetEnum(this, "ccof_closedfacilityinmay")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ccof_closedfacilityinmay", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_closedfacilityinmayname")]
		public string CcOf_ClosedFacilityInMayName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ccof_closedfacilityinmay"))
				{
					return this.FormattedValues["ccof_closedfacilityinmay"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_closedfacilityinnov")]
		public virtual CcOf_YesNo? CcOf_ClosedFacilityInNov
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((CcOf_YesNo?)(EntityOptionSetEnum.GetEnum(this, "ccof_closedfacilityinnov")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ccof_closedfacilityinnov", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_closedfacilityinnovname")]
		public string CcOf_ClosedFacilityInNovName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ccof_closedfacilityinnov"))
				{
					return this.FormattedValues["ccof_closedfacilityinnov"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_closedfacilityinoct")]
		public virtual CcOf_YesNo? CcOf_ClosedFacilityInOct
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((CcOf_YesNo?)(EntityOptionSetEnum.GetEnum(this, "ccof_closedfacilityinoct")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ccof_closedfacilityinoct", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_closedfacilityinoctname")]
		public string CcOf_ClosedFacilityInOctName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ccof_closedfacilityinoct"))
				{
					return this.FormattedValues["ccof_closedfacilityinoct"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_closedfacilityinsep")]
		public virtual CcOf_YesNo? CcOf_ClosedFacilityInSep
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((CcOf_YesNo?)(EntityOptionSetEnum.GetEnum(this, "ccof_closedfacilityinsep")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ccof_closedfacilityinsep", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_closedfacilityinsepname")]
		public string CcOf_ClosedFacilityInSepName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ccof_closedfacilityinsep"))
				{
					return this.FormattedValues["ccof_closedfacilityinsep"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_dm_sourceid")]
		public string CcOf_DM_SourceId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("ccof_dm_sourceid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ccof_dm_sourceid", value);
			}
		}
		
		/// <summary>
		/// Associated Facility
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_facility")]
		public Microsoft.Xrm.Sdk.EntityReference CcOf_Facility
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ccof_facility");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ccof_facility", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_facilityhoursofoperationfrom")]
		public string CcOf_FacilityHoursOfOperationFrom
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("ccof_facilityhoursofoperationfrom");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ccof_facilityhoursofoperationfrom", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_facilityhoursofoperationto")]
		public string CcOf_FacilityHoursOfOperationTo
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("ccof_facilityhoursofoperationto");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ccof_facilityhoursofoperationto", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_facilityname")]
		public string CcOf_FacilityName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ccof_facility"))
				{
					return this.FormattedValues["ccof_facility"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_facilityyominame")]
		public string CcOf_FacilityYomiName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ccof_facility"))
				{
					return this.FormattedValues["ccof_facility"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_familychildcare4hoursorlessextendedcc")]
		public System.Nullable<int> CcOf_FamilyChildCare4HoursOrLessExtendedCc
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("ccof_familychildcare4hoursorlessextendedcc");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ccof_familychildcare4hoursorlessextendedcc", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_familychildcaremaxnumber")]
		public System.Nullable<int> CcOf_FamilyChildCareMaxNumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("ccof_familychildcaremaxnumber");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ccof_familychildcaremaxnumber", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_familychildcaremorethan4hoursextendedcc")]
		public System.Nullable<int> CcOf_FamilyChildCareMoreThan4HoursExtendedCc
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("ccof_familychildcaremorethan4hoursextendedcc");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ccof_familychildcaremorethan4hoursextendedcc", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_formcomplete")]
		public System.Nullable<bool> CcOf_FormComplete
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("ccof_formcomplete");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ccof_formcomplete", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_formcompletename")]
		public string CcOf_FormCompleteName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ccof_formcomplete"))
				{
					return this.FormattedValues["ccof_formcomplete"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_groupchildcare30monthtoschoolagemaxnumber")]
		public System.Nullable<int> CcOf_GroupChildCare30MonthToSchoolageMaxNumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("ccof_groupchildcare30monthtoschoolagemaxnumber");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ccof_groupchildcare30monthtoschoolagemaxnumber", value);
			}
		}
		
		/// <summary>
		/// Group Child Care (School Age/School Age Care on School Grounds)
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_groupchildcareschoolagecareonschoolground")]
		public System.Nullable<int> CcOf_GroupChildCareSchoolageCareOnSchoolGround
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("ccof_groupchildcareschoolagecareonschoolground");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ccof_groupchildcareschoolagecareonschoolground", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_groupchildcareunder36months")]
		public System.Nullable<int> CcOf_GroupChildCareUnder36Months
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("ccof_groupchildcareunder36months");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ccof_groupchildcareunder36months", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_has_30monthtoschoolage")]
		public System.Nullable<bool> CcOf_Has_30MonthToSchoolage
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("ccof_has_30monthtoschoolage");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ccof_has_30monthtoschoolage", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_has_30monthtoschoolage_extendedcc")]
		public System.Nullable<bool> CcOf_Has_30MonthToSchoolage_ExtendedCc
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("ccof_has_30monthtoschoolage_extendedcc");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ccof_has_30monthtoschoolage_extendedcc", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_has_30monthtoschoolage_extendedccname")]
		public string CcOf_Has_30MonthToSchoolage_ExtendedCcName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ccof_has_30monthtoschoolage_extendedcc"))
				{
					return this.FormattedValues["ccof_has_30monthtoschoolage_extendedcc"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_has_30monthtoschoolagename")]
		public string CcOf_Has_30MonthToSchoolageName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ccof_has_30monthtoschoolage"))
				{
					return this.FormattedValues["ccof_has_30monthtoschoolage"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_has_multiagechildcare")]
		public System.Nullable<bool> CcOf_Has_MultiAgeChildCare
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("ccof_has_multiagechildcare");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ccof_has_multiagechildcare", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_has_multiagechildcare_extendedcc")]
		public System.Nullable<bool> CcOf_Has_MultiAgeChildCare_ExtendedCc
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("ccof_has_multiagechildcare_extendedcc");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ccof_has_multiagechildcare_extendedcc", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_has_multiagechildcare_extendedccname")]
		public string CcOf_Has_MultiAgeChildCare_ExtendedCcName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ccof_has_multiagechildcare_extendedcc"))
				{
					return this.FormattedValues["ccof_has_multiagechildcare_extendedcc"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_has_multiagechildcarename")]
		public string CcOf_Has_MultiAgeChildCaRename
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ccof_has_multiagechildcare"))
				{
					return this.FormattedValues["ccof_has_multiagechildcare"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_has_preschool")]
		public System.Nullable<bool> CcOf_Has_Preschool
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("ccof_has_preschool");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ccof_has_preschool", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_has_preschoolname")]
		public string CcOf_Has_PreschoolName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ccof_has_preschool"))
				{
					return this.FormattedValues["ccof_has_preschool"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_has_schoolagecareonschoolground")]
		public System.Nullable<bool> CcOf_Has_SchoolageCareOnSchoolGround
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("ccof_has_schoolagecareonschoolground");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ccof_has_schoolagecareonschoolground", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_has_schoolagecareonschoolground_extendedc")]
		public System.Nullable<bool> CcOf_Has_SchoolageCareOnSchoolGround_ExtendedC
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("ccof_has_schoolagecareonschoolground_extendedc");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ccof_has_schoolagecareonschoolground_extendedc", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_has_schoolagecareonschoolground_extendedcname")]
		public string CcOf_Has_SchoolageCareOnSchoolGround_ExtendedCName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ccof_has_schoolagecareonschoolground_extendedc"))
				{
					return this.FormattedValues["ccof_has_schoolagecareonschoolground_extendedc"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_has_schoolagecareonschoolgroundname")]
		public string CcOf_Has_SchoolageCareOnSchoolGroundName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ccof_has_schoolagecareonschoolground"))
				{
					return this.FormattedValues["ccof_has_schoolagecareonschoolground"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_has_under36months")]
		public System.Nullable<bool> CcOf_Has_Under36Months
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("ccof_has_under36months");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ccof_has_under36months", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_has_under36months_extendedcc")]
		public System.Nullable<bool> CcOf_Has_Under36Months_ExtendedCc
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("ccof_has_under36months_extendedcc");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ccof_has_under36months_extendedcc", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_has_under36months_extendedccname")]
		public string CcOf_Has_Under36Months_ExtendedCcName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ccof_has_under36months_extendedcc"))
				{
					return this.FormattedValues["ccof_has_under36months_extendedcc"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_has_under36monthsname")]
		public string CcOf_Has_Under36MonthsName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ccof_has_under36months"))
				{
					return this.FormattedValues["ccof_has_under36months"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_inhomemultiagecc4hoursorlessextendedcc")]
		public System.Nullable<int> CcOf_InHomeMultiAgeCc4HoursOrLessExtendedCc
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("ccof_inhomemultiagecc4hoursorlessextendedcc");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ccof_inhomemultiagecc4hoursorlessextendedcc", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_inhomemultiageccmaxnumber")]
		public System.Nullable<int> CcOf_InHomeMultiAgeCcMaxNumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("ccof_inhomemultiageccmaxnumber");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ccof_inhomemultiageccmaxnumber", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_inhomemultiageccmorethan4hoursextendedcc")]
		public System.Nullable<int> CcOf_InHomeMultiAgeCcMoreThan4HoursExtendedCc
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("ccof_inhomemultiageccmorethan4hoursextendedcc");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ccof_inhomemultiageccmorethan4hoursextendedcc", value);
			}
		}
		
		/// <summary>
		/// Is the facility located on school property?
///
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_isthefacilitylocatedonschoolproperty")]
		public virtual CcOf_YesNo? CcOf_IsTheFacilityLocatedOnSchoolProperty
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((CcOf_YesNo?)(EntityOptionSetEnum.GetEnum(this, "ccof_isthefacilitylocatedonschoolproperty")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ccof_isthefacilitylocatedonschoolproperty", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_isthefacilitylocatedonschoolpropertyname")]
		public string CcOf_IsTheFacilityLocatedOnSchoolPropertyName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ccof_isthefacilitylocatedonschoolproperty"))
				{
					return this.FormattedValues["ccof_isthefacilitylocatedonschoolproperty"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_licensetypes")]
		public Microsoft.Xrm.Sdk.EntityReference CcOf_LicenseTypes
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ccof_licensetypes");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ccof_licensetypes", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_licensetypesname")]
		public string CcOf_LicenseTypesName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ccof_licensetypes"))
				{
					return this.FormattedValues["ccof_licensetypes"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Maximum licensed capacity (as indicated on your Community Care and Assisted Living Act License):
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_maximumlicensedcapacity")]
		public System.Nullable<int> CcOf_MaximumLicensedCapacity
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("ccof_maximumlicensedcapacity");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ccof_maximumlicensedcapacity", value);
			}
		}
		
		/// <summary>
		/// Maximum number of child care spaces you offer: Note: DO NOT include any children living in your home, under the age of 12.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_maximumnumberofchildcarespacesyouoffer")]
		public System.Nullable<int> CcOf_MaximumNumberOfChildCareSpacesYouOffer
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("ccof_maximumnumberofchildcarespacesyouoffer");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ccof_maximumnumberofchildcarespacesyouoffer", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_maximumnumberofspacesyouofferextendedhours")]
		public System.Nullable<int> CcOf_MaximumNumberOfSpacesYouOfferExtendedHours
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("ccof_maximumnumberofspacesyouofferextendedhours");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ccof_maximumnumberofspacesyouofferextendedhours", value);
			}
		}
		
		/// <summary>
		/// Maximum number of days per week you offer extended hours of child care?
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_maxnoofdaysperweekextendedhoursoffered")]
		public System.Nullable<int> CcOf_MaxNoOfDaysPerWeekExtendedHoursOffered
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("ccof_maxnoofdaysperweekextendedhoursoffered");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ccof_maxnoofdaysperweekextendedhoursoffered", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_maxnoofdaysperweekyouprovidechildcare")]
		public System.Nullable<int> CcOf_MaxNoOfDaysPerWeekYouProvideChildCare
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("ccof_maxnoofdaysperweekyouprovidechildcare");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ccof_maxnoofdaysperweekyouprovidechildcare", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_maxnoofweeksperyearextendedhoursoffered")]
		public System.Nullable<int> CcOf_MaxNoOfWeeksPerYearExtendedHoursOffered
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("ccof_maxnoofweeksperyearextendedhoursoffered");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ccof_maxnoofweeksperyearextendedhoursoffered", value);
			}
		}
		
		/// <summary>
		/// Max No. of weeks per year you provide child care
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_maxnoofweeksperyearyouprovidechildcare")]
		public System.Nullable<int> CcOf_MaxNoOfWeeksPerYearYouProvideChildCare
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("ccof_maxnoofweeksperyearyouprovidechildcare");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ccof_maxnoofweeksperyearyouprovidechildcare", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_monthswhenalloftheprogramsclosedcomplete")]
		public virtual CcOf_YesNo? CcOf_MonthsWhenAllOfTheProgramsClosedComplete
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((CcOf_YesNo?)(EntityOptionSetEnum.GetEnum(this, "ccof_monthswhenalloftheprogramsclosedcomplete")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ccof_monthswhenalloftheprogramsclosedcomplete", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_monthswhenalloftheprogramsclosedcompletename")]
		public string CcOf_MonthsWhenAllOfTheProgramsClosedCompleteName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ccof_monthswhenalloftheprogramsclosedcomplete"))
				{
					return this.FormattedValues["ccof_monthswhenalloftheprogramsclosedcomplete"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_monthwhenfacilityisclosedforentiremonth")]
		public virtual CcOf_YesNo? CcOf_MonthWhenFacilityIsClosedForEntireMonth
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((CcOf_YesNo?)(EntityOptionSetEnum.GetEnum(this, "ccof_monthwhenfacilityisclosedforentiremonth")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ccof_monthwhenfacilityisclosedforentiremonth", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_monthwhenfacilityisclosedforentiremonthname")]
		public string CcOf_MonthWhenFacilityIsClosedForEntireMonthName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ccof_monthwhenfacilityisclosedforentiremonth"))
				{
					return this.FormattedValues["ccof_monthwhenfacilityisclosedforentiremonth"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Multi-Age Child Care
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_multiagechildcare4hoursoflessextendedcc")]
		public System.Nullable<int> CcOf_MultiAgeChildCare4HoursOfLessExtendedCc
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("ccof_multiagechildcare4hoursoflessextendedcc");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ccof_multiagechildcare4hoursoflessextendedcc", value);
			}
		}
		
		/// <summary>
		/// Multi-Age Child Care
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_multiagechildcaremaxnumber")]
		public System.Nullable<int> CcOf_MultiAgeChildCareMaxNumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("ccof_multiagechildcaremaxnumber");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ccof_multiagechildcaremaxnumber", value);
			}
		}
		
		/// <summary>
		/// Multi-Age Child Care
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_multiagechildcaremorethan4hourextendedcc")]
		public System.Nullable<int> CcOf_MultiAgeChildCareMoreThan4HourExtendedCc
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("ccof_multiagechildcaremorethan4hourextendedcc");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ccof_multiagechildcaremorethan4hourextendedcc", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_name")]
		public string CcOf_Name
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("ccof_name");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ccof_name", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_preschoolmaxnumber")]
		public System.Nullable<int> CcOf_PreschoolMaxNumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("ccof_preschoolmaxnumber");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ccof_preschoolmaxnumber", value);
			}
		}
		
		/// <summary>
		/// Preschool Session- Fri
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_preschoolsessionfri")]
		public System.Nullable<int> CcOf_PreschoolSessionFri
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("ccof_preschoolsessionfri");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ccof_preschoolsessionfri", value);
			}
		}
		
		/// <summary>
		/// Preschool Session- Mon
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_preschoolsessionmon")]
		public System.Nullable<int> CcOf_PreschoolSessionMon
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("ccof_preschoolsessionmon");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ccof_preschoolsessionmon", value);
			}
		}
		
		/// <summary>
		/// Preschool Session- Thurs
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_preschoolsessionthurs")]
		public System.Nullable<int> CcOf_PreschoolSessionThurs
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("ccof_preschoolsessionthurs");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ccof_preschoolsessionthurs", value);
			}
		}
		
		/// <summary>
		/// Preschool Session- Total
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_preschoolsessiontotal")]
		public System.Nullable<int> CcOf_PreschoolSessionTotal
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("ccof_preschoolsessiontotal");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ccof_preschoolsessiontotal", value);
			}
		}
		
		/// <summary>
		/// Preschool Session- Tues
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_preschoolsessiontues")]
		public System.Nullable<int> CcOf_PreschoolSessionTueS
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("ccof_preschoolsessiontues");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ccof_preschoolsessiontues", value);
			}
		}
		
		/// <summary>
		/// Preschool Session- Wed
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_preschoolsessionwed")]
		public System.Nullable<int> CcOf_PreschoolSessionWed
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("ccof_preschoolsessionwed");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ccof_preschoolsessionwed", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_providertype")]
		public virtual CcOf_ProviderType? CcOf_ProviderType
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((CcOf_ProviderType?)(EntityOptionSetEnum.GetEnum(this, "ccof_providertype")));
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_providertypename")]
		public string CcOf_ProviderTypeName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ccof_providertype"))
				{
					return this.FormattedValues["ccof_providertype"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_regularlyofferextendeddailyhourofchildca")]
		public virtual CcOf_YesNo? CcOf_RegularlyOfferExtendedDailyHourOfChildCa
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((CcOf_YesNo?)(EntityOptionSetEnum.GetEnum(this, "ccof_regularlyofferextendeddailyhourofchildca")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ccof_regularlyofferextendeddailyhourofchildca", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_regularlyofferextendeddailyhourofchildcaname")]
		public string CcOf_RegularlyOfferExtendedDailyHourOfChildCaName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ccof_regularlyofferextendeddailyhourofchildca"))
				{
					return this.FormattedValues["ccof_regularlyofferextendeddailyhourofchildca"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_schoolageonground4hoursoflessextendedcc")]
		public System.Nullable<int> CcOf_SchoolageOnGround4HoursOfLessExtendedCc
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("ccof_schoolageonground4hoursoflessextendedcc");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ccof_schoolageonground4hoursoflessextendedcc", value);
			}
		}
		
		/// <summary>
		/// Group Child Care (School Age/School Age
///Care on School Grounds)
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_schoolageongroundmorethan4hrextendedcc")]
		public System.Nullable<int> CcOf_SchoolageOnGroundMoreThan4HrExtendedCc
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("ccof_schoolageongroundmorethan4hrextendedcc");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ccof_schoolageongroundmorethan4hrextendedcc", value);
			}
		}
		
		/// <summary>
		/// Group Child Care (Under 36 Months)
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_under36months4hoursoflessextendedcc")]
		public System.Nullable<int> CcOf_Under36Months4HoursOfLessExtendedCc
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("ccof_under36months4hoursoflessextendedcc");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ccof_under36months4hoursoflessextendedcc", value);
			}
		}
		
		/// <summary>
		/// Group Child Care (Under 36 Months)
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_under36monthsmorethan4hourextendedcc")]
		public System.Nullable<int> CcOf_Under36MonthsMoreThan4HourExtendedCc
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("ccof_under36monthsmorethan4hourextendedcc");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ccof_under36monthsmorethan4hourextendedcc", value);
			}
		}
		
		/// <summary>
		/// Unique identifier of the user who created the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedBy
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdby");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyname")]
		public string CreatedByName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("createdby"))
				{
					return this.FormattedValues["createdby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyyominame")]
		public string CreatedByYomiName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("createdby"))
				{
					return this.FormattedValues["createdby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Date and time when the record was created.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdon")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("createdon");
			}
		}
		
		/// <summary>
		/// Unique identifier of the delegate user who created the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedOnBehalfBy
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdonbehalfby");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("createdonbehalfby", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyname")]
		public string CreatedOnBehalfByName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("createdonbehalfby"))
				{
					return this.FormattedValues["createdonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyyominame")]
		public string CreatedOnBehalfByYomiName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("createdonbehalfby"))
				{
					return this.FormattedValues["createdonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Sequence number of the import that created this record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("importsequencenumber")]
		public System.Nullable<int> ImportSequenceNumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("importsequencenumber");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("importsequencenumber", value);
			}
		}
		
		/// <summary>
		/// Unique identifier of the user who modified the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedBy
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedby");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyname")]
		public string ModifiedByName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("modifiedby"))
				{
					return this.FormattedValues["modifiedby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyyominame")]
		public string ModifiedByYomiName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("modifiedby"))
				{
					return this.FormattedValues["modifiedby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Date and time when the record was modified.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedon")]
		public System.Nullable<System.DateTime> ModifiedOn
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("modifiedon");
			}
		}
		
		/// <summary>
		/// Unique identifier of the delegate user who modified the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedOnBehalfBy
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedonbehalfby");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("modifiedonbehalfby", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyname")]
		public string ModifiedOnBehalfByName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("modifiedonbehalfby"))
				{
					return this.FormattedValues["modifiedonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyyominame")]
		public string ModifiedOnBehalfByYomiName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("modifiedonbehalfby"))
				{
					return this.FormattedValues["modifiedonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Date and time that the record was migrated.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("overriddencreatedon")]
		public System.Nullable<System.DateTime> OverriddenCreatedOn
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("overriddencreatedon");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("overriddencreatedon", value);
			}
		}
		
		/// <summary>
		/// Owner Id
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ownerid")]
		public Microsoft.Xrm.Sdk.EntityReference OwnerId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ownerid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ownerid", value);
			}
		}
		
		/// <summary>
		/// Name of the owner
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owneridname")]
		public string OwnerIdName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ownerid"))
				{
					return this.FormattedValues["ownerid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Yomi name of the owner
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owneridyominame")]
		public string OwnerIdYomiName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ownerid"))
				{
					return this.FormattedValues["ownerid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Unique identifier for the business unit that owns the record
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
		public Microsoft.Xrm.Sdk.EntityReference OwningBusinessUnit
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningbusinessunit");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("owningbusinessunit", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunitname")]
		public string OwningBusinessUnitName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("owningbusinessunit"))
				{
					return this.FormattedValues["owningbusinessunit"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Unique identifier for the team that owns the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
		public Microsoft.Xrm.Sdk.EntityReference OwningTeam
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningteam");
			}
		}
		
		/// <summary>
		/// Unique identifier for the user that owns the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owninguser")]
		public Microsoft.Xrm.Sdk.EntityReference OwningUser
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owninguser");
			}
		}
		
		/// <summary>
		/// Status of the Application Base Funding
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecode")]
		public virtual CcOf_Application_BaseFunding_StateCode? StateCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((CcOf_Application_BaseFunding_StateCode?)(EntityOptionSetEnum.GetEnum(this, "statecode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("statecode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecodename")]
		public string StateCodename
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("statecode"))
				{
					return this.FormattedValues["statecode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Reason for the status of the Application Base Funding
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscode")]
		public virtual CcOf_Application_BaseFunding_StatusCode? StatusCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((CcOf_Application_BaseFunding_StatusCode?)(EntityOptionSetEnum.GetEnum(this, "statuscode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("statuscode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscodename")]
		public string StatusCodename
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("statuscode"))
				{
					return this.FormattedValues["statuscode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timezoneruleversionnumber")]
		public System.Nullable<int> TimeZoneRuleVersionNumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("timezoneruleversionnumber");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("timezoneruleversionnumber", value);
			}
		}
		
		/// <summary>
		/// Time zone code that was in use when the record was created.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("utcconversiontimezonecode")]
		public System.Nullable<int> UtcConversionTimeZoneCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("utcconversiontimezonecode");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("utcconversiontimezonecode", value);
			}
		}
		
		/// <summary>
		/// Version Number
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("versionnumber")]
		public System.Nullable<long> VersionNumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<long>>("versionnumber");
			}
		}
		
		/// <summary>
		/// 1:N ccof_new_facility_application_ccof
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ccof_new_facility_application_ccof")]
		public System.Collections.Generic.IEnumerable<DataverseModel.CcOf_Change_Request_New_Facility> CcOf_New_Facility_Application_CcOf
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<DataverseModel.CcOf_Change_Request_New_Facility>("ccof_new_facility_application_ccof", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntities<DataverseModel.CcOf_Change_Request_New_Facility>("ccof_new_facility_application_ccof", null, value);
			}
		}
		
		/// <summary>
		/// N:1 business_unit_ccof_application_basefunding
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("business_unit_ccof_application_basefunding")]
		public DataverseModel.BusinessUnit Business_Unit_CcOf_Application_BaseFunding
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<DataverseModel.BusinessUnit>("business_unit_ccof_application_basefunding", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntity<DataverseModel.BusinessUnit>("business_unit_ccof_application_basefunding", null, value);
			}
		}
		
		/// <summary>
		/// N:1 ccof_application_basefunding_Application
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_application")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ccof_application_basefunding_Application")]
		public DataverseModel.CcOf_Application CcOf_Application_BaseFunding_Application
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<DataverseModel.CcOf_Application>("ccof_application_basefunding_Application", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntity<DataverseModel.CcOf_Application>("ccof_application_basefunding_Application", null, value);
			}
		}
		
		/// <summary>
		/// N:1 ccof_application_basefunding_Facility
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_facility")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ccof_application_basefunding_Facility")]
		public DataverseModel.Account CcOf_Application_BaseFunding_Facility
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<DataverseModel.Account>("ccof_application_basefunding_Facility", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntity<DataverseModel.Account>("ccof_application_basefunding_Facility", null, value);
			}
		}
		
		/// <summary>
		/// N:1 ccof_ccof_license_category_ccof_application_basefunding_licensetypes
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_licensetypes")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ccof_ccof_license_category_ccof_application_basefunding_licensetypes")]
		public DataverseModel.CcOf_License_Category CcOf_CcOf_License_Category_CcOf_Application_BaseFunding_LicenseTypes
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<DataverseModel.CcOf_License_Category>("ccof_ccof_license_category_ccof_application_basefunding_licensetypes", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntity<DataverseModel.CcOf_License_Category>("ccof_ccof_license_category_ccof_application_basefunding_licensetypes", null, value);
			}
		}
		
		/// <summary>
		/// N:1 lk_ccof_application_basefunding_createdby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_ccof_application_basefunding_createdby")]
		public DataverseModel.SystemUser Lk_CcOf_Application_BaseFunding_CreatedBy
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<DataverseModel.SystemUser>("lk_ccof_application_basefunding_createdby", null);
			}
		}
		
		/// <summary>
		/// N:1 lk_ccof_application_basefunding_createdonbehalfby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_ccof_application_basefunding_createdonbehalfby")]
		public DataverseModel.SystemUser Lk_CcOf_Application_BaseFunding_CreatedOnBehalfBy
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<DataverseModel.SystemUser>("lk_ccof_application_basefunding_createdonbehalfby", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntity<DataverseModel.SystemUser>("lk_ccof_application_basefunding_createdonbehalfby", null, value);
			}
		}
		
		/// <summary>
		/// N:1 lk_ccof_application_basefunding_modifiedby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_ccof_application_basefunding_modifiedby")]
		public DataverseModel.SystemUser Lk_CcOf_Application_BaseFunding_ModifiedBy
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<DataverseModel.SystemUser>("lk_ccof_application_basefunding_modifiedby", null);
			}
		}
		
		/// <summary>
		/// N:1 lk_ccof_application_basefunding_modifiedonbehalfby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_ccof_application_basefunding_modifiedonbehalfby")]
		public DataverseModel.SystemUser Lk_CcOf_Application_BaseFunding_ModifiedOnBehalfBy
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<DataverseModel.SystemUser>("lk_ccof_application_basefunding_modifiedonbehalfby", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntity<DataverseModel.SystemUser>("lk_ccof_application_basefunding_modifiedonbehalfby", null, value);
			}
		}
		
		/// <summary>
		/// N:1 user_ccof_application_basefunding
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owninguser")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("user_ccof_application_basefunding")]
		public DataverseModel.SystemUser User_CcOf_Application_BaseFunding
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<DataverseModel.SystemUser>("user_ccof_application_basefunding", null);
			}
		}
		
		/// <summary>
		/// Constructor for populating via LINQ queries given a LINQ anonymous type
		/// <param name="anonymousType">LINQ anonymous type.</param>
		/// </summary>
		[System.Diagnostics.DebuggerNonUserCode()]
		public CcOf_Application_BaseFunding(object anonymousType) : 
				this()
		{
            foreach (var p in anonymousType.GetType().GetProperties())
            {
                var value = p.GetValue(anonymousType, null);
                var name = p.Name.ToLower();
            
                if (value != null && name.EndsWith("enum") && value.GetType().BaseType == typeof(System.Enum))
                {
                    value = new Microsoft.Xrm.Sdk.OptionSetValue((int) value);
                    name = name.Remove(name.Length - "enum".Length);
                }
            
                switch (name)
                {
                    case "id":
                        base.Id = (System.Guid)value;
                        Attributes["ccof_application_basefundingid"] = base.Id;
                        break;
                    case "ccof_application_basefundingid":
                        var id = (System.Nullable<System.Guid>) value;
                        if(id == null){ continue; }
                        base.Id = id.Value;
                        Attributes[name] = base.Id;
                        break;
                    case "formattedvalues":
                        // Add Support for FormattedValues
                        FormattedValues.AddRange((Microsoft.Xrm.Sdk.FormattedValueCollection)value);
                        break;
                    default:
                        Attributes[name] = value;
                        break;
                }
            }
		}
	}
}
#pragma warning restore CS1591
