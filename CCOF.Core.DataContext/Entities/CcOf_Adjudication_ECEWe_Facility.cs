#pragma warning disable CS1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DataverseModel
{
	
	
	/// <summary>
	/// Status of the Adjudication ECEWE Facility
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	public enum CcOf_Adjudication_ECEWe_Facility_StateCode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Active", 0)]
		Active = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Inactive", 1)]
		Inactive = 1,
	}
	
	/// <summary>
	/// Reason for the status of the Adjudication ECEWE Facility
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	public enum CcOf_Adjudication_ECEWe_Facility_StatusCode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Change Request Complete", 8)]
		ChangeRequestComplete = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("CompleteÂ - Approved", 4)]
		CompleteApproved = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Complete - Ineligible", 5)]
		CompleteIneligible = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("ECE-WE Awaiting Provider", 6)]
		EceWeAwaitingProvider = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Inactive", 2)]
		Inactive = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Opt-Out", 7)]
		OptOut = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Submitted", 0)]
		Submitted = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Temp Approved", 3)]
		TempApproved = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("With Adjudicator", 1)]
		WithAdjudicator = 3,
	}
	
	[System.Runtime.Serialization.DataContractAttribute()]
	[Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("ccof_adjudication_ecewe_facility")]
	public partial class CcOf_Adjudication_ECEWe_Facility : Microsoft.Xrm.Sdk.Entity
	{
		
		/// <summary>
		/// Available fields, a the time of codegen, for the ccof_adjudication_ecewe_facility entity
		/// </summary>
		public partial class Fields
		{
			public const string Business_Unit_CcOf_Adjudication_ECEWe_Facility = "business_unit_ccof_adjudication_ecewe_facility";
			public const string CcOf_AdJ_ECEWe_Facility_AdJ_CcFri_FAc = "ccof_adj_ecewe_facility_adj_ccfri_fac";
			public const string CcOf_AdJ_ECEWe_Facility_App_ECEWe = "ccof_adj_ecewe_facility_App_ecewe";
			public const string CcOf_Adjudication_CcFri_Facility_AdJUDICa = "CcOf_Adjudication_CcFri_Facility_AdJUDICa";
			public const string CcOf_Adjudication_ECEWe = "ccof_adjudication_ecewe";
			public const string CcOf_Adjudication_ECEWe_Facility_Adjudication = "ccof_adjudication_ecewe_facility_Adjudication";
			public const string CcOf_Adjudication_ECEWe_Facility_AreYouAPublic = "ccof_adjudication_ecewe_facility_Areyouapublic";
			public const string CcOf_Adjudication_ECEWe_Facility_ECEWeAppLiCat = "ccof_adjudication_ecewe_facility_ECEWEapplicat";
			public const string CcOf_Adjudication_ECEWe_Facility_Facility = "ccof_adjudication_ecewe_facility_Facility";
			public const string CcOf_Adjudication_ECEWe_FacilityId = "ccof_adjudication_ecewe_facilityid";
			public const string Id = "ccof_adjudication_ecewe_facilityid";
			public const string CcOf_Adjudication_ECEWeName = "ccof_adjudication_ecewename";
			public const string CcOf_AdjudicationCcFriFacility = "ccof_adjudicationccfrifacility";
			public const string CcOf_AdjudicationCcFriFacilityName = "ccof_adjudicationccfrifacilityname";
			public const string CcOf_ApplicableFundingModel = "ccof_applicablefundingmodel";
			public const string CcOf_ApplicableFundingModelName = "ccof_applicablefundingmodelname";
			public const string CcOf_ApplicableSector = "ccof_applicablesector";
			public const string CcOf_ApplicableSectorName = "ccof_applicablesectorname";
			public const string CcOf_ApplicationECEWe = "ccof_applicationecewe";
			public const string CcOf_ApplicationECEWeName = "ccof_applicationecewename";
			public const string CcOf_Approved_On_Date = "ccof_approved_on_date";
			public const string CcOf_AreYouAPublicSectorEmployer = "ccof_areyouapublicsectoremployer";
			public const string CcOf_AreYouAPublicSectorEmployerName = "ccof_areyouapublicsectoremployername";
			public const string CcOf_CcFriQcDecision = "ccof_ccfriqcdecision";
			public const string CcOf_CcFriQcDecisionName = "ccof_ccfriqcdecisionname";
			public const string CcOf_CcFriTempApprovedUntilDate = "ccof_ccfritempapproveduntildate";
			public const string CcOf_CcOf_ApplicationStatusHistory_CcOf_Adjudication_ECEWe_Facility_CcOf_StatusHistoryRegardingId = "CcOf_CcOf_ApplicationStatusHistory_CcOf_Adjudication_ECEWe_Facility_CcOf_StatusHistoryRegardingId";
			public const string CcOf_DM_SourceId = "ccof_dm_sourceid";
			public const string CcOf_ECEEmployeesAtaNyFacility = "ccof_eceemployeesatanyfacility";
			public const string CcOf_ECEEmployeesAtaNyFacilityName = "ccof_eceemployeesatanyfacilityname";
			public const string CcOf_ECEWeApplication = "ccof_eceweapplication";
			public const string CcOf_ECEWeApplicationName = "ccof_eceweapplicationname";
			public const string CcOf_ECEWeConfirmation = "ccof_eceweconfirmation";
			public const string CcOf_ECEWeConfirmationName = "ccof_eceweconfirmationname";
			public const string CcOf_ECEWeDecision = "ccof_ecewedecision";
			public const string CcOf_ECEWeDecisionName = "ccof_ecewedecisionname";
			public const string CcOf_ECEWeOptIn = "ccof_eceweoptin";
			public const string CcOf_ECEWeOpTinName = "ccof_eceweoptinname";
			public const string CcOf_Facility = "ccof_facility";
			public const string CcOf_Facility_Union_Status = "ccof_facility_union_status";
			public const string CcOf_Facility_Union_StatusName = "ccof_facility_union_statusname";
			public const string CcOf_FacilityId = "ccof_facilityid";
			public const string CcOf_FacilityName = "ccof_facilityname";
			public const string CcOf_FacilityYomiName = "ccof_facilityyominame";
			public const string CcOf_Name = "ccof_name";
			public const string CcOf_Notification_Link = "ccof_notification_link";
			public const string CcOf_OptInstarTdAte = "ccof_optinstartdate";
			public const string CcOf_OpTinStartMonth = "ccof_optinstartmonth";
			public const string CcOf_OpTinStartMonthName = "ccof_optinstartmonthname";
			public const string CcOf_OpTinToeCEWe = "ccof_optintoecewe";
			public const string CcOf_OpTinToeCEWeName = "ccof_optintoecewename";
			public const string CcOf_Public_Sector_Employer = "ccof_public_sector_employer";
			public const string CcOf_Public_Sector_EmployerName = "ccof_public_sector_employername";
			public const string CcOf_ReportingToolEntry = "ccof_reportingtoolentry";
			public const string CcOf_SelectTheApplicableFundingModel = "ccof_selecttheapplicablefundingmodel";
			public const string CcOf_SelectTheApplicableFundingModelName = "ccof_selecttheapplicablefundingmodelname";
			public const string CcOf_UnLockeCEWe = "ccof_unlockecewe";
			public const string CcOf_UnLockeCEWeName = "ccof_unlockecewename";
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string Lk_CcOf_Adjudication_ECEWe_Facility_CreatedBy = "lk_ccof_adjudication_ecewe_facility_createdby";
			public const string Lk_CcOf_Adjudication_ECEWe_Facility_CreatedOnBehalfBy = "lk_ccof_adjudication_ecewe_facility_createdonbehalfby";
			public const string Lk_CcOf_Adjudication_ECEWe_Facility_ModifiedBy = "lk_ccof_adjudication_ecewe_facility_modifiedby";
			public const string Lk_CcOf_Adjudication_ECEWe_Facility_ModifiedOnBehalfBy = "lk_ccof_adjudication_ecewe_facility_modifiedonbehalfby";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string OwnerId = "ownerid";
			public const string OwnerIdName = "owneridname";
			public const string OwnerIdYomiName = "owneridyominame";
			public const string OwningBusinessUnit = "owningbusinessunit";
			public const string OwningBusinessUnitName = "owningbusinessunitname";
			public const string OwningTeam = "owningteam";
			public const string OwningUser = "owninguser";
			public const string StateCode = "statecode";
			public const string StateCodename = "statecodename";
			public const string StatusCode = "statuscode";
			public const string StatusCodename = "statuscodename";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string User_CcOf_Adjudication_ECEWe_Facility = "user_ccof_adjudication_ecewe_facility";
			public const string UtcConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
		}
		
		[System.Diagnostics.DebuggerNonUserCode()]
		public CcOf_Adjudication_ECEWe_Facility(System.Guid id) : 
				base(EntityLogicalName, id)
		{
		}
		
		[System.Diagnostics.DebuggerNonUserCode()]
		public CcOf_Adjudication_ECEWe_Facility(string keyName, object keyValue) : 
				base(EntityLogicalName, keyName, keyValue)
		{
		}
		
		[System.Diagnostics.DebuggerNonUserCode()]
		public CcOf_Adjudication_ECEWe_Facility(Microsoft.Xrm.Sdk.KeyAttributeCollection keyAttributes) : 
				base(EntityLogicalName, keyAttributes)
		{
		}
		
		public const string AlternateKeys = "ccof_dm_sourceid";
		
		/// <summary>
		/// Default Constructor.
		/// </summary>
		[System.Diagnostics.DebuggerNonUserCode()]
		public CcOf_Adjudication_ECEWe_Facility() : 
				base(EntityLogicalName)
		{
		}
		
		public const string PrimaryIdAttribute = "ccof_adjudication_ecewe_facilityid";
		
		public const string PrimaryNameAttribute = "ccof_name";
		
		public const string EntitySchemaName = "ccof_Adjudication_ECEWE_Facility";
		
		public const string EntityLogicalName = "ccof_adjudication_ecewe_facility";
		
		public const string EntityLogicalCollectionName = "ccof_adjudication_ecewe_facilities";
		
		public const string EntitySetName = "ccof_adjudication_ecewe_facilities";
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_adjudication_ecewe")]
		public Microsoft.Xrm.Sdk.EntityReference CcOf_Adjudication_ECEWe
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ccof_adjudication_ecewe");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ccof_adjudication_ecewe", value);
			}
		}
		
		/// <summary>
		/// Unique identifier for entity instances
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_adjudication_ecewe_facilityid")]
		public System.Nullable<System.Guid> CcOf_Adjudication_ECEWe_FacilityId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("ccof_adjudication_ecewe_facilityid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ccof_adjudication_ecewe_facilityid", value);
				if (value.HasValue)
				{
					base.Id = value.Value;
				}
				else
				{
					base.Id = System.Guid.Empty;
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_adjudication_ecewe_facilityid")]
		public override System.Guid Id
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return base.Id;
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.CcOf_Adjudication_ECEWe_FacilityId = value;
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_adjudication_ecewename")]
		public string CcOf_Adjudication_ECEWeName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ccof_adjudication_ecewe"))
				{
					return this.FormattedValues["ccof_adjudication_ecewe"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_adjudicationccfrifacility")]
		public Microsoft.Xrm.Sdk.EntityReference CcOf_AdjudicationCcFriFacility
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ccof_adjudicationccfrifacility");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ccof_adjudicationccfrifacility", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_adjudicationccfrifacilityname")]
		public string CcOf_AdjudicationCcFriFacilityName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ccof_adjudicationccfrifacility"))
				{
					return this.FormattedValues["ccof_adjudicationccfrifacility"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_applicablefundingmodel")]
		public virtual CcOf_FundingModel? CcOf_ApplicableFundingModel
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((CcOf_FundingModel?)(EntityOptionSetEnum.GetEnum(this, "ccof_applicablefundingmodel")));
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_applicablefundingmodelname")]
		public string CcOf_ApplicableFundingModelName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ccof_applicablefundingmodel"))
				{
					return this.FormattedValues["ccof_applicablefundingmodel"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_applicablesector")]
		public virtual CcOf_SelectTheApplicableSector? CcOf_ApplicableSector
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((CcOf_SelectTheApplicableSector?)(EntityOptionSetEnum.GetEnum(this, "ccof_applicablesector")));
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_applicablesectorname")]
		public string CcOf_ApplicableSectorName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ccof_applicablesector"))
				{
					return this.FormattedValues["ccof_applicablesector"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_applicationecewe")]
		public Microsoft.Xrm.Sdk.EntityReference CcOf_ApplicationECEWe
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ccof_applicationecewe");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ccof_applicationecewe", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_applicationecewename")]
		public string CcOf_ApplicationECEWeName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ccof_applicationecewe"))
				{
					return this.FormattedValues["ccof_applicationecewe"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_approved_on_date")]
		public System.Nullable<System.DateTime> CcOf_Approved_On_Date
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("ccof_approved_on_date");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ccof_approved_on_date", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_areyouapublicsectoremployer")]
		public Microsoft.Xrm.Sdk.EntityReference CcOf_AreYouAPublicSectorEmployer
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ccof_areyouapublicsectoremployer");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ccof_areyouapublicsectoremployer", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_areyouapublicsectoremployername")]
		public string CcOf_AreYouAPublicSectorEmployerName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ccof_areyouapublicsectoremployer"))
				{
					return this.FormattedValues["ccof_areyouapublicsectoremployer"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_ccfriqcdecision")]
		public virtual CcOf_CcFriQcDecision? CcOf_CcFriQcDecision
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((CcOf_CcFriQcDecision?)(EntityOptionSetEnum.GetEnum(this, "ccof_ccfriqcdecision")));
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_ccfriqcdecisionname")]
		public string CcOf_CcFriQcDecisionName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ccof_ccfriqcdecision"))
				{
					return this.FormattedValues["ccof_ccfriqcdecision"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_ccfritempapproveduntildate")]
		public System.Nullable<System.DateTime> CcOf_CcFriTempApprovedUntilDate
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("ccof_ccfritempapproveduntildate");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_dm_sourceid")]
		public string CcOf_DM_SourceId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("ccof_dm_sourceid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ccof_dm_sourceid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_eceemployeesatanyfacility")]
		public virtual CcOf_YesNo? CcOf_ECEEmployeesAtaNyFacility
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((CcOf_YesNo?)(EntityOptionSetEnum.GetEnum(this, "ccof_eceemployeesatanyfacility")));
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_eceemployeesatanyfacilityname")]
		public string CcOf_ECEEmployeesAtaNyFacilityName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ccof_eceemployeesatanyfacility"))
				{
					return this.FormattedValues["ccof_eceemployeesatanyfacility"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_eceweapplication")]
		public Microsoft.Xrm.Sdk.EntityReference CcOf_ECEWeApplication
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ccof_eceweapplication");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ccof_eceweapplication", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_eceweapplicationname")]
		public string CcOf_ECEWeApplicationName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ccof_eceweapplication"))
				{
					return this.FormattedValues["ccof_eceweapplication"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_eceweconfirmation")]
		public virtual CcOf_YesNo? CcOf_ECEWeConfirmation
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((CcOf_YesNo?)(EntityOptionSetEnum.GetEnum(this, "ccof_eceweconfirmation")));
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_eceweconfirmationname")]
		public string CcOf_ECEWeConfirmationName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ccof_eceweconfirmation"))
				{
					return this.FormattedValues["ccof_eceweconfirmation"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_ecewedecision")]
		public virtual CcOf_ECEWeDecision? CcOf_ECEWeDecision
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((CcOf_ECEWeDecision?)(EntityOptionSetEnum.GetEnum(this, "ccof_ecewedecision")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ccof_ecewedecision", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_ecewedecisionname")]
		public string CcOf_ECEWeDecisionName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ccof_ecewedecision"))
				{
					return this.FormattedValues["ccof_ecewedecision"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_eceweoptin")]
		public virtual CcOf_YesNo? CcOf_ECEWeOptIn
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((CcOf_YesNo?)(EntityOptionSetEnum.GetEnum(this, "ccof_eceweoptin")));
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_eceweoptinname")]
		public string CcOf_ECEWeOpTinName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ccof_eceweoptin"))
				{
					return this.FormattedValues["ccof_eceweoptin"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_facility")]
		public Microsoft.Xrm.Sdk.EntityReference CcOf_Facility
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ccof_facility");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ccof_facility", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_facility_union_status")]
		public virtual CcOf_FacilityUnionStatus? CcOf_Facility_Union_Status
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((CcOf_FacilityUnionStatus?)(EntityOptionSetEnum.GetEnum(this, "ccof_facility_union_status")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ccof_facility_union_status", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_facility_union_statusname")]
		public string CcOf_Facility_Union_StatusName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ccof_facility_union_status"))
				{
					return this.FormattedValues["ccof_facility_union_status"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_facilityid")]
		public string CcOf_FacilityId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("ccof_facilityid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ccof_facilityid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_facilityname")]
		public string CcOf_FacilityName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ccof_facility"))
				{
					return this.FormattedValues["ccof_facility"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_facilityyominame")]
		public string CcOf_FacilityYomiName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ccof_facility"))
				{
					return this.FormattedValues["ccof_facility"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_name")]
		public string CcOf_Name
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("ccof_name");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ccof_name", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_notification_link")]
		public string CcOf_Notification_Link
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("ccof_notification_link");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ccof_notification_link", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_optinstartdate")]
		public System.Nullable<System.DateTime> CcOf_OptInstarTdAte
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("ccof_optinstartdate");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_optinstartmonth")]
		public virtual CcOf_Month? CcOf_OpTinStartMonth
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((CcOf_Month?)(EntityOptionSetEnum.GetEnum(this, "ccof_optinstartmonth")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ccof_optinstartmonth", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_optinstartmonthname")]
		public string CcOf_OpTinStartMonthName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ccof_optinstartmonth"))
				{
					return this.FormattedValues["ccof_optinstartmonth"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_optintoecewe")]
		public virtual CcOf_YesNo? CcOf_OpTinToeCEWe
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((CcOf_YesNo?)(EntityOptionSetEnum.GetEnum(this, "ccof_optintoecewe")));
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_optintoecewename")]
		public string CcOf_OpTinToeCEWeName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ccof_optintoecewe"))
				{
					return this.FormattedValues["ccof_optintoecewe"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_public_sector_employer")]
		public virtual CcOf_YesNo? CcOf_Public_Sector_Employer
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((CcOf_YesNo?)(EntityOptionSetEnum.GetEnum(this, "ccof_public_sector_employer")));
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_public_sector_employername")]
		public string CcOf_Public_Sector_EmployerName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ccof_public_sector_employer"))
				{
					return this.FormattedValues["ccof_public_sector_employer"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_reportingtoolentry")]
		public System.Nullable<System.DateTime> CcOf_ReportingToolEntry
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("ccof_reportingtoolentry");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ccof_reportingtoolentry", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_selecttheapplicablefundingmodel")]
		public virtual CcOf_FundingModel? CcOf_SelectTheApplicableFundingModel
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((CcOf_FundingModel?)(EntityOptionSetEnum.GetEnum(this, "ccof_selecttheapplicablefundingmodel")));
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_selecttheapplicablefundingmodelname")]
		public string CcOf_SelectTheApplicableFundingModelName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ccof_selecttheapplicablefundingmodel"))
				{
					return this.FormattedValues["ccof_selecttheapplicablefundingmodel"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_unlockecewe")]
		public virtual CcOf_YesNo? CcOf_UnLockeCEWe
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((CcOf_YesNo?)(EntityOptionSetEnum.GetEnum(this, "ccof_unlockecewe")));
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_unlockecewename")]
		public string CcOf_UnLockeCEWeName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ccof_unlockecewe"))
				{
					return this.FormattedValues["ccof_unlockecewe"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Unique identifier of the user who created the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedBy
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdby");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyname")]
		public string CreatedByName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("createdby"))
				{
					return this.FormattedValues["createdby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyyominame")]
		public string CreatedByYomiName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("createdby"))
				{
					return this.FormattedValues["createdby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Date and time when the record was created.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdon")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("createdon");
			}
		}
		
		/// <summary>
		/// Unique identifier of the delegate user who created the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedOnBehalfBy
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdonbehalfby");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("createdonbehalfby", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyname")]
		public string CreatedOnBehalfByName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("createdonbehalfby"))
				{
					return this.FormattedValues["createdonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyyominame")]
		public string CreatedOnBehalfByYomiName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("createdonbehalfby"))
				{
					return this.FormattedValues["createdonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Sequence number of the import that created this record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("importsequencenumber")]
		public System.Nullable<int> ImportSequenceNumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("importsequencenumber");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("importsequencenumber", value);
			}
		}
		
		/// <summary>
		/// Unique identifier of the user who modified the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedBy
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedby");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyname")]
		public string ModifiedByName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("modifiedby"))
				{
					return this.FormattedValues["modifiedby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyyominame")]
		public string ModifiedByYomiName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("modifiedby"))
				{
					return this.FormattedValues["modifiedby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Date and time when the record was modified.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedon")]
		public System.Nullable<System.DateTime> ModifiedOn
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("modifiedon");
			}
		}
		
		/// <summary>
		/// Unique identifier of the delegate user who modified the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedOnBehalfBy
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedonbehalfby");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("modifiedonbehalfby", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyname")]
		public string ModifiedOnBehalfByName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("modifiedonbehalfby"))
				{
					return this.FormattedValues["modifiedonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyyominame")]
		public string ModifiedOnBehalfByYomiName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("modifiedonbehalfby"))
				{
					return this.FormattedValues["modifiedonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Date and time that the record was migrated.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("overriddencreatedon")]
		public System.Nullable<System.DateTime> OverriddenCreatedOn
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("overriddencreatedon");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("overriddencreatedon", value);
			}
		}
		
		/// <summary>
		/// Owner Id
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ownerid")]
		public Microsoft.Xrm.Sdk.EntityReference OwnerId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ownerid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ownerid", value);
			}
		}
		
		/// <summary>
		/// Name of the owner
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owneridname")]
		public string OwnerIdName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ownerid"))
				{
					return this.FormattedValues["ownerid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Yomi name of the owner
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owneridyominame")]
		public string OwnerIdYomiName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ownerid"))
				{
					return this.FormattedValues["ownerid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Unique identifier for the business unit that owns the record
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
		public Microsoft.Xrm.Sdk.EntityReference OwningBusinessUnit
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningbusinessunit");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("owningbusinessunit", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunitname")]
		public string OwningBusinessUnitName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("owningbusinessunit"))
				{
					return this.FormattedValues["owningbusinessunit"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Unique identifier for the team that owns the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
		public Microsoft.Xrm.Sdk.EntityReference OwningTeam
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningteam");
			}
		}
		
		/// <summary>
		/// Unique identifier for the user that owns the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owninguser")]
		public Microsoft.Xrm.Sdk.EntityReference OwningUser
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owninguser");
			}
		}
		
		/// <summary>
		/// Status of the Adjudication ECEWE Facility
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecode")]
		public virtual CcOf_Adjudication_ECEWe_Facility_StateCode? StateCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((CcOf_Adjudication_ECEWe_Facility_StateCode?)(EntityOptionSetEnum.GetEnum(this, "statecode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("statecode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecodename")]
		public string StateCodename
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("statecode"))
				{
					return this.FormattedValues["statecode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Reason for the status of the Adjudication ECEWE Facility
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscode")]
		public virtual CcOf_Adjudication_ECEWe_Facility_StatusCode? StatusCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((CcOf_Adjudication_ECEWe_Facility_StatusCode?)(EntityOptionSetEnum.GetEnum(this, "statuscode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("statuscode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscodename")]
		public string StatusCodename
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("statuscode"))
				{
					return this.FormattedValues["statuscode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timezoneruleversionnumber")]
		public System.Nullable<int> TimeZoneRuleVersionNumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("timezoneruleversionnumber");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("timezoneruleversionnumber", value);
			}
		}
		
		/// <summary>
		/// Time zone code that was in use when the record was created.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("utcconversiontimezonecode")]
		public System.Nullable<int> UtcConversionTimeZoneCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("utcconversiontimezonecode");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("utcconversiontimezonecode", value);
			}
		}
		
		/// <summary>
		/// Version Number
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("versionnumber")]
		public System.Nullable<long> VersionNumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<long>>("versionnumber");
			}
		}
		
		/// <summary>
		/// 1:N ccof_adjudication_ccfri_facility_Adjudica
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ccof_adjudication_ccfri_facility_Adjudica")]
		public System.Collections.Generic.IEnumerable<DataverseModel.CcOf_Adjudication_CcFri_Facility> CcOf_Adjudication_CcFri_Facility_AdJUDICa
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<DataverseModel.CcOf_Adjudication_CcFri_Facility>("ccof_adjudication_ccfri_facility_Adjudica", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntities<DataverseModel.CcOf_Adjudication_CcFri_Facility>("ccof_adjudication_ccfri_facility_Adjudica", null, value);
			}
		}
		
		/// <summary>
		/// 1:N ccof_ccof_applicationstatushistory_ccof_adjudication_ecewe_facility_ccof_StatusHistoryRegardingId
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ccof_ccof_applicationstatushistory_ccof_adjudication_ecewe_facility_ccof_StatusHi" +
			"storyRegardingId")]
		public System.Collections.Generic.IEnumerable<DataverseModel.CcOf_ApplicationStatusHistory> CcOf_CcOf_ApplicationStatusHistory_CcOf_Adjudication_ECEWe_Facility_CcOf_StatusHistoryRegardingId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<DataverseModel.CcOf_ApplicationStatusHistory>("ccof_ccof_applicationstatushistory_ccof_adjudication_ecewe_facility_ccof_StatusHi" +
						"storyRegardingId", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntities<DataverseModel.CcOf_ApplicationStatusHistory>("ccof_ccof_applicationstatushistory_ccof_adjudication_ecewe_facility_ccof_StatusHi" +
						"storyRegardingId", null, value);
			}
		}
		
		/// <summary>
		/// N:1 business_unit_ccof_adjudication_ecewe_facility
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("business_unit_ccof_adjudication_ecewe_facility")]
		public DataverseModel.BusinessUnit Business_Unit_CcOf_Adjudication_ECEWe_Facility
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<DataverseModel.BusinessUnit>("business_unit_ccof_adjudication_ecewe_facility", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntity<DataverseModel.BusinessUnit>("business_unit_ccof_adjudication_ecewe_facility", null, value);
			}
		}
		
		/// <summary>
		/// N:1 ccof_adj_ecewe_facility_adj_ccfri_fac
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_adjudicationccfrifacility")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ccof_adj_ecewe_facility_adj_ccfri_fac")]
		public DataverseModel.CcOf_Adjudication_CcFri_Facility CcOf_AdJ_ECEWe_Facility_AdJ_CcFri_FAc
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<DataverseModel.CcOf_Adjudication_CcFri_Facility>("ccof_adj_ecewe_facility_adj_ccfri_fac", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntity<DataverseModel.CcOf_Adjudication_CcFri_Facility>("ccof_adj_ecewe_facility_adj_ccfri_fac", null, value);
			}
		}
		
		/// <summary>
		/// N:1 ccof_adj_ecewe_facility_App_ecewe
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_applicationecewe")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ccof_adj_ecewe_facility_App_ecewe")]
		public DataverseModel.CcOf_ApplicationECEWe CcOf_AdJ_ECEWe_Facility_App_ECEWe
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<DataverseModel.CcOf_ApplicationECEWe>("ccof_adj_ecewe_facility_App_ecewe", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntity<DataverseModel.CcOf_ApplicationECEWe>("ccof_adj_ecewe_facility_App_ecewe", null, value);
			}
		}
		
		/// <summary>
		/// N:1 ccof_adjudication_ecewe_facility_Adjudication
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_adjudication_ecewe")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ccof_adjudication_ecewe_facility_Adjudication")]
		public DataverseModel.CcOf_Adjudication_ECEWe CcOf_Adjudication_ECEWe_Facility_Adjudication
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<DataverseModel.CcOf_Adjudication_ECEWe>("ccof_adjudication_ecewe_facility_Adjudication", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntity<DataverseModel.CcOf_Adjudication_ECEWe>("ccof_adjudication_ecewe_facility_Adjudication", null, value);
			}
		}
		
		/// <summary>
		/// N:1 ccof_adjudication_ecewe_facility_Areyouapublic
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_areyouapublicsectoremployer")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ccof_adjudication_ecewe_facility_Areyouapublic")]
		public DataverseModel.CcOf_Application CcOf_Adjudication_ECEWe_Facility_AreYouAPublic
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<DataverseModel.CcOf_Application>("ccof_adjudication_ecewe_facility_Areyouapublic", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntity<DataverseModel.CcOf_Application>("ccof_adjudication_ecewe_facility_Areyouapublic", null, value);
			}
		}
		
		/// <summary>
		/// N:1 ccof_adjudication_ecewe_facility_ECEWEapplicat
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_eceweapplication")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ccof_adjudication_ecewe_facility_ECEWEapplicat")]
		public DataverseModel.CcOf_Application CcOf_Adjudication_ECEWe_Facility_ECEWeAppLiCat
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<DataverseModel.CcOf_Application>("ccof_adjudication_ecewe_facility_ECEWEapplicat", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntity<DataverseModel.CcOf_Application>("ccof_adjudication_ecewe_facility_ECEWEapplicat", null, value);
			}
		}
		
		/// <summary>
		/// N:1 ccof_adjudication_ecewe_facility_Facility
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_facility")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ccof_adjudication_ecewe_facility_Facility")]
		public DataverseModel.Account CcOf_Adjudication_ECEWe_Facility_Facility
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<DataverseModel.Account>("ccof_adjudication_ecewe_facility_Facility", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntity<DataverseModel.Account>("ccof_adjudication_ecewe_facility_Facility", null, value);
			}
		}
		
		/// <summary>
		/// N:1 lk_ccof_adjudication_ecewe_facility_createdby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_ccof_adjudication_ecewe_facility_createdby")]
		public DataverseModel.SystemUser Lk_CcOf_Adjudication_ECEWe_Facility_CreatedBy
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<DataverseModel.SystemUser>("lk_ccof_adjudication_ecewe_facility_createdby", null);
			}
		}
		
		/// <summary>
		/// N:1 lk_ccof_adjudication_ecewe_facility_createdonbehalfby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_ccof_adjudication_ecewe_facility_createdonbehalfby")]
		public DataverseModel.SystemUser Lk_CcOf_Adjudication_ECEWe_Facility_CreatedOnBehalfBy
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<DataverseModel.SystemUser>("lk_ccof_adjudication_ecewe_facility_createdonbehalfby", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntity<DataverseModel.SystemUser>("lk_ccof_adjudication_ecewe_facility_createdonbehalfby", null, value);
			}
		}
		
		/// <summary>
		/// N:1 lk_ccof_adjudication_ecewe_facility_modifiedby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_ccof_adjudication_ecewe_facility_modifiedby")]
		public DataverseModel.SystemUser Lk_CcOf_Adjudication_ECEWe_Facility_ModifiedBy
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<DataverseModel.SystemUser>("lk_ccof_adjudication_ecewe_facility_modifiedby", null);
			}
		}
		
		/// <summary>
		/// N:1 lk_ccof_adjudication_ecewe_facility_modifiedonbehalfby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_ccof_adjudication_ecewe_facility_modifiedonbehalfby")]
		public DataverseModel.SystemUser Lk_CcOf_Adjudication_ECEWe_Facility_ModifiedOnBehalfBy
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<DataverseModel.SystemUser>("lk_ccof_adjudication_ecewe_facility_modifiedonbehalfby", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntity<DataverseModel.SystemUser>("lk_ccof_adjudication_ecewe_facility_modifiedonbehalfby", null, value);
			}
		}
		
		/// <summary>
		/// N:1 user_ccof_adjudication_ecewe_facility
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owninguser")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("user_ccof_adjudication_ecewe_facility")]
		public DataverseModel.SystemUser User_CcOf_Adjudication_ECEWe_Facility
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<DataverseModel.SystemUser>("user_ccof_adjudication_ecewe_facility", null);
			}
		}
		
		/// <summary>
		/// Constructor for populating via LINQ queries given a LINQ anonymous type
		/// <param name="anonymousType">LINQ anonymous type.</param>
		/// </summary>
		[System.Diagnostics.DebuggerNonUserCode()]
		public CcOf_Adjudication_ECEWe_Facility(object anonymousType) : 
				this()
		{
            foreach (var p in anonymousType.GetType().GetProperties())
            {
                var value = p.GetValue(anonymousType, null);
                var name = p.Name.ToLower();
            
                if (value != null && name.EndsWith("enum") && value.GetType().BaseType == typeof(System.Enum))
                {
                    value = new Microsoft.Xrm.Sdk.OptionSetValue((int) value);
                    name = name.Remove(name.Length - "enum".Length);
                }
            
                switch (name)
                {
                    case "id":
                        base.Id = (System.Guid)value;
                        Attributes["ccof_adjudication_ecewe_facilityid"] = base.Id;
                        break;
                    case "ccof_adjudication_ecewe_facilityid":
                        var id = (System.Nullable<System.Guid>) value;
                        if(id == null){ continue; }
                        base.Id = id.Value;
                        Attributes[name] = base.Id;
                        break;
                    case "formattedvalues":
                        // Add Support for FormattedValues
                        FormattedValues.AddRange((Microsoft.Xrm.Sdk.FormattedValueCollection)value);
                        break;
                    default:
                        Attributes[name] = value;
                        break;
                }
            }
		}
	}
}
#pragma warning restore CS1591
