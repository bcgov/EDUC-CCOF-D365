#pragma warning disable CS1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DataverseModel
{
	
	
	[System.Runtime.Serialization.DataContractAttribute()]
	public enum CcOf_Change_Request_CcOf_Union_Agreement_Reached
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("No", 1)]
		No = 100000001,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Yes", 0)]
		Yes = 100000000,
	}
	
	/// <summary>
	/// Status of the Change Request
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	public enum CcOf_Change_Request_StateCode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Active", 0)]
		Active = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Inactive", 1)]
		Inactive = 1,
	}
	
	/// <summary>
	/// Reason for the status of the Change Request
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	public enum CcOf_Change_Request_StatusCode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Cancelled", 10)]
		Cancelled = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Complete", 9)]
		Complete = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Eligible", 7)]
		Eligible = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Inactive", 3)]
		Inactive = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Incomplete", 0)]
		Incomplete = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Ineligible", 8)]
		Ineligible = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Ready for QC", 4)]
		ReadyForQc = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Submitted", 1)]
		Submitted = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("With Adjudicator", 2)]
		WithAdjudicator = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("With Provider", 6)]
		WithProvider = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("With QC", 5)]
		WithQc = 11,
	}
	
	[System.Runtime.Serialization.DataContractAttribute()]
	[Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("ccof_change_request")]
	public partial class CcOf_Change_Request : Microsoft.Xrm.Sdk.Entity
	{
		
		/// <summary>
		/// Available fields, a the time of codegen, for the ccof_change_request entity
		/// </summary>
		public partial class Fields
		{
			public const string Business_Unit_CcOf_Change_Request = "business_unit_ccof_change_request";
			public const string CcOf_AllSupportingDocumentsReceived = "ccof_allsupportingdocumentsreceived";
			public const string CcOf_AllSupportingDocumentsReceivedName = "ccof_allsupportingdocumentsreceivedname";
			public const string CcOf_Application = "ccof_application";
			public const string CcOf_Application_CcFri_Closure_Change_Request_CcOf_Change_Request = "CcOf_Application_CcFri_Closure_Change_Request_CcOf_Change_Request";
			public const string CcOf_ApplicationName = "ccof_applicationname";
			public const string CcOf_ApplicationStatusHistory_Change_Request = "CcOf_ApplicationStatusHistory_Change_Request";
			public const string CcOf_Assigned_Date = "ccof_assigned_date";
			public const string CcOf_CcOf_ApplicationStatusHistory_CcOf_Change_Request_CcOf_StatusHistoryRegardingId = "CcOf_CcOf_ApplicationStatusHistory_CcOf_Change_Request_CcOf_StatusHistoryRegardingId";
			public const string CcOf_CcOf_ApProvable_Fee_Schedule_History_CcOf_Change_Request_CcOf_RegardingId = "CcOf_CcOf_ApProvable_Fee_Schedule_History_CcOf_Change_Request_CcOf_RegardingId";
			public const string CcOf_CcOf_Change_Request_Application_CcOf_AppL = "ccof_ccof_change_request_Application_ccof_appl";
			public const string CcOf_CcOf_Change_Request_Organization = "ccof_ccof_change_request_Organization";
			public const string CcOf_CcOf_Change_Request_Program_Year_CcOf_Pro = "ccof_ccof_change_request_program_year_ccof_pro";
			public const string CcOf_CcOf_Change_Request_Summary_ChangeRequest = "CcOf_CcOf_Change_Request_Summary_ChangeRequest";
			public const string CcOf_CcOf_Change_Request_System_Recommendation = "ccof_ccof_change_request_system_recommendation";
			public const string CcOf_CcOf_Unlock_History_CcOf_Change_Request_CcOf_Application_ChangeRequest_Id = "CcOf_CcOf_Unlock_History_CcOf_Change_Request_CcOf_Application_ChangeRequest_Id";
			public const string CcOf_CcOf_Unlock_History_CcOf_Change_Request_CcOf_RegardingId = "CcOf_CcOf_Unlock_History_CcOf_Change_Request_CcOf_RegardingId";
			public const string CcOf_CcOfDBUpdated = "ccof_ccofdbupdated";
			public const string CcOf_CcOfDBUpdatedName = "ccof_ccofdbupdatedname";
			public const string CcOf_Change_Action_Change_Request = "CcOf_Change_Action_Change_Request";
			public const string CcOf_Change_RequestId = "ccof_change_requestid";
			public const string Id = "ccof_change_requestid";
			public const string CcOf_ChangeTypes = "ccof_changetypes";
			public const string CcOf_ChangeTypesName = "ccof_changetypesname";
			public const string CcOf_Consent = "ccof_consent";
			public const string CcOf_ConsentName = "ccof_consentname";
			public const string CcOf_Declaration = "ccof_declaration";
			public const string CcOf_DeclarationName = "ccof_declarationname";
			public const string CcOf_Describe_Your_Org = "ccof_describe_your_org";
			public const string CcOf_Describe_Your_OrgName = "ccof_describe_your_orgname";
			public const string CcOf_ECEWe_Confirmation = "ccof_ecewe_confirmation";
			public const string CcOf_ECEWe_ConfirmationName = "ccof_ecewe_confirmationname";
			public const string CcOf_ECEWe_Eligibility_Complete = "ccof_ecewe_eligibility_complete";
			public const string CcOf_ECEWe_Eligibility_CompleteName = "ccof_ecewe_eligibility_completename";
			public const string CcOf_ECEWe_EmployeesUnion = "ccof_ecewe_employeesunion";
			public const string CcOf_ECEWe_EmployeesUnionName = "ccof_ecewe_employeesunionname";
			public const string CcOf_ECEWe_OptIn = "ccof_ecewe_optin";
			public const string CcOf_ECEWe_OpTinName = "ccof_ecewe_optinname";
			public const string CcOf_ECEWe_SelectTheApplicableFundingMode = "ccof_ecewe_selecttheapplicablefundingmode";
			public const string CcOf_ECEWe_SelectTheApplicableFundingModeName = "ccof_ecewe_selecttheapplicablefundingmodename";
			public const string CcOf_ECEWe_SelectTheApplicableSector = "ccof_ecewe_selecttheapplicablesector";
			public const string CcOf_ECEWe_SelectTheApplicableSectorName = "ccof_ecewe_selecttheapplicablesectorname";
			public const string CcOf_EffectiveMonth = "ccof_effectivemonth";
			public const string CcOf_Email_Change_Request = "CcOf_Email_Change_Request";
			public const string CcOf_ExternalStatus = "ccof_externalstatus";
			public const string CcOf_ExternalStatusName = "ccof_externalstatusname";
			public const string CcOf_Facility_Union_Status = "ccof_facility_union_status";
			public const string CcOf_Facility_Union_StatusName = "ccof_facility_union_statusname";
			public const string CcOf_FirstSubmissionDate = "ccof_firstsubmissiondate";
			public const string CcOf_Indicator_Unlock = "ccof_indicator_unlock";
			public const string CcOf_Indicator_Unlock_Duration = "ccof_indicator_unlock_duration";
			public const string CcOf_Indicator_Unlocked_At = "ccof_indicator_unlocked_at";
			public const string CcOf_Indicator_UnlockName = "ccof_indicator_unlockname";
			public const string CcOf_LatestSubmissionDate = "ccof_latestsubmissiondate";
			public const string CcOf_LatestSubmissionDatePst = "ccof_latestsubmissiondatepst";
			public const string CcOf_LicenceValidInHealthsPace = "ccof_licencevalidinhealthspace";
			public const string CcOf_LicenceValidInHealthsPaceName = "ccof_licencevalidinhealthspacename";
			public const string CcOf_LicenseComplete = "ccof_licensecomplete";
			public const string CcOf_LicenseCompleteName = "ccof_licensecompletename";
			public const string CcOf_ModificationAgreementActivated = "ccof_modificationagreementactivated";
			public const string CcOf_ModificationAgreementActivatedName = "ccof_modificationagreementactivatedname";
			public const string CcOf_Name = "ccof_name";
			public const string CcOf_Organization = "ccof_organization";
			public const string CcOf_Organization_Contact_Name = "ccof_organization_contact_name";
			public const string CcOf_Organization_Id = "ccof_organization_id";
			public const string CcOf_OrganizationName = "ccof_organizationname";
			public const string CcOf_OrganizationYomiName = "ccof_organizationyominame";
			public const string CcOf_Previous_Internal_Status = "ccof_previous_internal_status";
			public const string CcOf_Program_Year = "ccof_program_year";
			public const string CcOf_Program_Year_Name = "ccof_program_year_name";
			public const string CcOf_Program_YearName = "ccof_program_yearname";
			public const string CcOf_Provider_Type = "ccof_provider_type";
			public const string CcOf_Provider_TypeName = "ccof_provider_typename";
			public const string CcOf_Public_Sector_Employer = "ccof_public_sector_employer";
			public const string CcOf_Public_Sector_EmployerName = "ccof_public_sector_employername";
			public const string CcOf_QcCheckComplete = "ccof_qccheckcomplete";
			public const string CcOf_QcCheckCompleteName = "ccof_qccheckcompletename";
			public const string CcOf_Ready_To_Be_Cancelled_Flag = "ccof_ready_to_be_cancelled_flag";
			public const string CcOf_Ready_To_Be_Cancelled_FlagName = "ccof_ready_to_be_cancelled_flagname";
			public const string CcOf_ShowDeclarationOnReport = "ccof_showdeclarationonreport";
			public const string CcOf_ShowDeclarationOnReportName = "ccof_showdeclarationonreportname";
			public const string CcOf_Submitted_By = "ccof_submitted_by";
			public const string CcOf_System_Recommendation = "ccof_system_recommendation";
			public const string CcOf_System_RecommendationName = "ccof_system_recommendationname";
			public const string CcOf_Trigger_Complete = "ccof_trigger_complete";
			public const string CcOf_Trigger_CompleteName = "ccof_trigger_completename";
			public const string CcOf_Union_Agreement_Reached = "ccof_union_agreement_reached";
			public const string CcOf_Union_Agreement_ReachedName = "ccof_union_agreement_reachedname";
			public const string CcOf_Unlock_Declaration = "ccof_unlock_declaration";
			public const string CcOf_Unlock_DeclarationName = "ccof_unlock_declarationname";
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string Lk_CcOf_Change_Request_CreatedBy = "lk_ccof_change_request_createdby";
			public const string Lk_CcOf_Change_Request_CreatedOnBehalfBy = "lk_ccof_change_request_createdonbehalfby";
			public const string Lk_CcOf_Change_Request_ModifiedBy = "lk_ccof_change_request_modifiedby";
			public const string Lk_CcOf_Change_Request_ModifiedOnBehalfBy = "lk_ccof_change_request_modifiedonbehalfby";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string OwnerId = "ownerid";
			public const string OwnerIdName = "owneridname";
			public const string OwnerIdYomiName = "owneridyominame";
			public const string OwningBusinessUnit = "owningbusinessunit";
			public const string OwningBusinessUnitName = "owningbusinessunitname";
			public const string OwningTeam = "owningteam";
			public const string OwningUser = "owninguser";
			public const string StateCode = "statecode";
			public const string StateCodename = "statecodename";
			public const string StatusCode = "statuscode";
			public const string StatusCodename = "statuscodename";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string User_CcOf_Change_Request = "user_ccof_change_request";
			public const string UtcConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
		}
		
		[System.Diagnostics.DebuggerNonUserCode()]
		public CcOf_Change_Request(System.Guid id) : 
				base(EntityLogicalName, id)
		{
		}
		
		[System.Diagnostics.DebuggerNonUserCode()]
		public CcOf_Change_Request(string keyName, object keyValue) : 
				base(EntityLogicalName, keyName, keyValue)
		{
		}
		
		[System.Diagnostics.DebuggerNonUserCode()]
		public CcOf_Change_Request(Microsoft.Xrm.Sdk.KeyAttributeCollection keyAttributes) : 
				base(EntityLogicalName, keyAttributes)
		{
		}
		
		/// <summary>
		/// Default Constructor.
		/// </summary>
		[System.Diagnostics.DebuggerNonUserCode()]
		public CcOf_Change_Request() : 
				base(EntityLogicalName)
		{
		}
		
		public const string PrimaryIdAttribute = "ccof_change_requestid";
		
		public const string PrimaryNameAttribute = "ccof_name";
		
		public const string EntitySchemaName = "ccof_change_request";
		
		public const string EntityLogicalName = "ccof_change_request";
		
		public const string EntityLogicalCollectionName = "ccof_change_requests";
		
		public const string EntitySetName = "ccof_change_requests";
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_allsupportingdocumentsreceived")]
		public virtual CcOf_ChangeRequestAdjudication? CcOf_AllSupportingDocumentsReceived
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((CcOf_ChangeRequestAdjudication?)(EntityOptionSetEnum.GetEnum(this, "ccof_allsupportingdocumentsreceived")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ccof_allsupportingdocumentsreceived", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_allsupportingdocumentsreceivedname")]
		public string CcOf_AllSupportingDocumentsReceivedName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ccof_allsupportingdocumentsreceived"))
				{
					return this.FormattedValues["ccof_allsupportingdocumentsreceived"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_application")]
		public Microsoft.Xrm.Sdk.EntityReference CcOf_Application
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ccof_application");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ccof_application", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_applicationname")]
		public string CcOf_ApplicationName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ccof_application"))
				{
					return this.FormattedValues["ccof_application"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_assigned_date")]
		public System.Nullable<System.DateTime> CcOf_Assigned_Date
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("ccof_assigned_date");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ccof_assigned_date", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_ccofdbupdated")]
		public virtual CcOf_ChangeRequestAdjudication? CcOf_CcOfDBUpdated
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((CcOf_ChangeRequestAdjudication?)(EntityOptionSetEnum.GetEnum(this, "ccof_ccofdbupdated")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ccof_ccofdbupdated", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_ccofdbupdatedname")]
		public string CcOf_CcOfDBUpdatedName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ccof_ccofdbupdated"))
				{
					return this.FormattedValues["ccof_ccofdbupdated"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Unique identifier for entity instances
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_change_requestid")]
		public System.Nullable<System.Guid> CcOf_Change_RequestId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("ccof_change_requestid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ccof_change_requestid", value);
				if (value.HasValue)
				{
					base.Id = value.Value;
				}
				else
				{
					base.Id = System.Guid.Empty;
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_change_requestid")]
		public override System.Guid Id
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return base.Id;
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.CcOf_Change_RequestId = value;
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_changetypes")]
		public virtual System.Collections.Generic.IEnumerable<CcOf_ChangeType> CcOf_ChangeTypes
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return EntityOptionSetEnum.GetMultiEnum<CcOf_ChangeType>(this, "ccof_changetypes");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ccof_changetypes", EntityOptionSetEnum.GetMultiEnum(this, "ccof_changetypes", value));
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_changetypesname")]
		public string CcOf_ChangeTypesName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ccof_changetypes"))
				{
					return this.FormattedValues["ccof_changetypes"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_consent")]
		public virtual CcOf_YesNo? CcOf_Consent
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((CcOf_YesNo?)(EntityOptionSetEnum.GetEnum(this, "ccof_consent")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ccof_consent", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_consentname")]
		public string CcOf_ConsentName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ccof_consent"))
				{
					return this.FormattedValues["ccof_consent"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_declaration")]
		public System.Nullable<bool> CcOf_Declaration
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("ccof_declaration");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ccof_declaration", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_declarationname")]
		public string CcOf_DeclarationName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ccof_declaration"))
				{
					return this.FormattedValues["ccof_declaration"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_describe_your_org")]
		public virtual CcOf_Describe_Your_Org? CcOf_Describe_Your_Org
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((CcOf_Describe_Your_Org?)(EntityOptionSetEnum.GetEnum(this, "ccof_describe_your_org")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ccof_describe_your_org", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_describe_your_orgname")]
		public string CcOf_Describe_Your_OrgName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ccof_describe_your_org"))
				{
					return this.FormattedValues["ccof_describe_your_org"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// I confirm that my organization/facilities pay the Joint Job Evaluation Plan (JJEP) wage rates or, if a lesser amount, a side agreement is being concluded to implement the ECE Wage Enhancement.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_ecewe_confirmation")]
		public virtual CcOf_YesNo? CcOf_ECEWe_Confirmation
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((CcOf_YesNo?)(EntityOptionSetEnum.GetEnum(this, "ccof_ecewe_confirmation")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ccof_ecewe_confirmation", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_ecewe_confirmationname")]
		public string CcOf_ECEWe_ConfirmationName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ccof_ecewe_confirmation"))
				{
					return this.FormattedValues["ccof_ecewe_confirmation"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_ecewe_eligibility_complete")]
		public System.Nullable<bool> CcOf_ECEWe_Eligibility_Complete
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("ccof_ecewe_eligibility_complete");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ccof_ecewe_eligibility_complete", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_ecewe_eligibility_completename")]
		public string CcOf_ECEWe_Eligibility_CompleteName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ccof_ecewe_eligibility_complete"))
				{
					return this.FormattedValues["ccof_ecewe_eligibility_complete"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Do any of the ECE Employees at any facility in your organization belong to a union?
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_ecewe_employeesunion")]
		public virtual CcOf_YesNo? CcOf_ECEWe_EmployeesUnion
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((CcOf_YesNo?)(EntityOptionSetEnum.GetEnum(this, "ccof_ecewe_employeesunion")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ccof_ecewe_employeesunion", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_ecewe_employeesunionname")]
		public string CcOf_ECEWe_EmployeesUnionName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ccof_ecewe_employeesunion"))
				{
					return this.FormattedValues["ccof_ecewe_employeesunion"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_ecewe_optin")]
		public virtual CcOf_YesNo? CcOf_ECEWe_OptIn
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((CcOf_YesNo?)(EntityOptionSetEnum.GetEnum(this, "ccof_ecewe_optin")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ccof_ecewe_optin", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_ecewe_optinname")]
		public string CcOf_ECEWe_OpTinName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ccof_ecewe_optin"))
				{
					return this.FormattedValues["ccof_ecewe_optin"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_ecewe_selecttheapplicablefundingmode")]
		public virtual CcOf_FundingModel? CcOf_ECEWe_SelectTheApplicableFundingMode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((CcOf_FundingModel?)(EntityOptionSetEnum.GetEnum(this, "ccof_ecewe_selecttheapplicablefundingmode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ccof_ecewe_selecttheapplicablefundingmode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_ecewe_selecttheapplicablefundingmodename")]
		public string CcOf_ECEWe_SelectTheApplicableFundingModeName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ccof_ecewe_selecttheapplicablefundingmode"))
				{
					return this.FormattedValues["ccof_ecewe_selecttheapplicablefundingmode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_ecewe_selecttheapplicablesector")]
		public virtual CcOf_SelectTheApplicableSector? CcOf_ECEWe_SelectTheApplicableSector
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((CcOf_SelectTheApplicableSector?)(EntityOptionSetEnum.GetEnum(this, "ccof_ecewe_selecttheapplicablesector")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ccof_ecewe_selecttheapplicablesector", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_ecewe_selecttheapplicablesectorname")]
		public string CcOf_ECEWe_SelectTheApplicableSectorName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ccof_ecewe_selecttheapplicablesector"))
				{
					return this.FormattedValues["ccof_ecewe_selecttheapplicablesector"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_effectivemonth")]
		public System.Nullable<System.DateTime> CcOf_EffectiveMonth
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("ccof_effectivemonth");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ccof_effectivemonth", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_externalstatus")]
		public virtual CcOf_ChangeRequestExternalStatus? CcOf_ExternalStatus
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((CcOf_ChangeRequestExternalStatus?)(EntityOptionSetEnum.GetEnum(this, "ccof_externalstatus")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ccof_externalstatus", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_externalstatusname")]
		public string CcOf_ExternalStatusName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ccof_externalstatus"))
				{
					return this.FormattedValues["ccof_externalstatus"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_facility_union_status")]
		public virtual CcOf_FacilityUnionStatus? CcOf_Facility_Union_Status
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((CcOf_FacilityUnionStatus?)(EntityOptionSetEnum.GetEnum(this, "ccof_facility_union_status")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ccof_facility_union_status", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_facility_union_statusname")]
		public string CcOf_Facility_Union_StatusName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ccof_facility_union_status"))
				{
					return this.FormattedValues["ccof_facility_union_status"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_firstsubmissiondate")]
		public System.Nullable<System.DateTime> CcOf_FirstSubmissionDate
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("ccof_firstsubmissiondate");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ccof_firstsubmissiondate", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_indicator_unlock")]
		public System.Nullable<bool> CcOf_Indicator_Unlock
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("ccof_indicator_unlock");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_indicator_unlock_duration")]
		public string CcOf_Indicator_Unlock_Duration
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("ccof_indicator_unlock_duration");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_indicator_unlocked_at")]
		public System.Nullable<System.DateTime> CcOf_Indicator_Unlocked_At
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("ccof_indicator_unlocked_at");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ccof_indicator_unlocked_at", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_indicator_unlockname")]
		public string CcOf_Indicator_UnlockName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ccof_indicator_unlock"))
				{
					return this.FormattedValues["ccof_indicator_unlock"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_latestsubmissiondate")]
		public System.Nullable<System.DateTime> CcOf_LatestSubmissionDate
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("ccof_latestsubmissiondate");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ccof_latestsubmissiondate", value);
			}
		}
		
		/// <summary>
		/// for summary pdf file only
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_latestsubmissiondatepst")]
		public System.Nullable<System.DateTime> CcOf_LatestSubmissionDatePst
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("ccof_latestsubmissiondatepst");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ccof_latestsubmissiondatepst", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_licencevalidinhealthspace")]
		public virtual CcOf_ChangeRequestAdjudication? CcOf_LicenceValidInHealthsPace
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((CcOf_ChangeRequestAdjudication?)(EntityOptionSetEnum.GetEnum(this, "ccof_licencevalidinhealthspace")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ccof_licencevalidinhealthspace", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_licencevalidinhealthspacename")]
		public string CcOf_LicenceValidInHealthsPaceName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ccof_licencevalidinhealthspace"))
				{
					return this.FormattedValues["ccof_licencevalidinhealthspace"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_licensecomplete")]
		public System.Nullable<bool> CcOf_LicenseComplete
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("ccof_licensecomplete");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ccof_licensecomplete", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_licensecompletename")]
		public string CcOf_LicenseCompleteName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ccof_licensecomplete"))
				{
					return this.FormattedValues["ccof_licensecomplete"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_modificationagreementactivated")]
		public virtual CcOf_ChangeRequestAdjudication? CcOf_ModificationAgreementActivated
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((CcOf_ChangeRequestAdjudication?)(EntityOptionSetEnum.GetEnum(this, "ccof_modificationagreementactivated")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ccof_modificationagreementactivated", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_modificationagreementactivatedname")]
		public string CcOf_ModificationAgreementActivatedName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ccof_modificationagreementactivated"))
				{
					return this.FormattedValues["ccof_modificationagreementactivated"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_name")]
		public string CcOf_Name
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("ccof_name");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ccof_name", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_organization")]
		public Microsoft.Xrm.Sdk.EntityReference CcOf_Organization
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ccof_organization");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ccof_organization", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_organization_contact_name")]
		public string CcOf_Organization_Contact_Name
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("ccof_organization_contact_name");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ccof_organization_contact_name", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_organization_id")]
		public string CcOf_Organization_Id
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("ccof_organization_id");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_organizationname")]
		public string CcOf_OrganizationName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ccof_organization"))
				{
					return this.FormattedValues["ccof_organization"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_organizationyominame")]
		public string CcOf_OrganizationYomiName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ccof_organization"))
				{
					return this.FormattedValues["ccof_organization"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_previous_internal_status")]
		public string CcOf_Previous_Internal_Status
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("ccof_previous_internal_status");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ccof_previous_internal_status", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_program_year")]
		public Microsoft.Xrm.Sdk.EntityReference CcOf_Program_Year
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ccof_program_year");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ccof_program_year", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_program_year_name")]
		public string CcOf_Program_Year_Name
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("ccof_program_year_name");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_program_yearname")]
		public string CcOf_Program_YearName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ccof_program_year"))
				{
					return this.FormattedValues["ccof_program_year"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_provider_type")]
		public virtual CcOf_ProviderType? CcOf_Provider_Type
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((CcOf_ProviderType?)(EntityOptionSetEnum.GetEnum(this, "ccof_provider_type")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ccof_provider_type", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_provider_typename")]
		public string CcOf_Provider_TypeName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ccof_provider_type"))
				{
					return this.FormattedValues["ccof_provider_type"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_public_sector_employer")]
		public virtual CcOf_YesNo? CcOf_Public_Sector_Employer
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((CcOf_YesNo?)(EntityOptionSetEnum.GetEnum(this, "ccof_public_sector_employer")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ccof_public_sector_employer", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_public_sector_employername")]
		public string CcOf_Public_Sector_EmployerName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ccof_public_sector_employer"))
				{
					return this.FormattedValues["ccof_public_sector_employer"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_qccheckcomplete")]
		public virtual CcOf_ChangeRequestAdjudication? CcOf_QcCheckComplete
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((CcOf_ChangeRequestAdjudication?)(EntityOptionSetEnum.GetEnum(this, "ccof_qccheckcomplete")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ccof_qccheckcomplete", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_qccheckcompletename")]
		public string CcOf_QcCheckCompleteName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ccof_qccheckcomplete"))
				{
					return this.FormattedValues["ccof_qccheckcomplete"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_ready_to_be_cancelled_flag")]
		public System.Nullable<bool> CcOf_Ready_To_Be_Cancelled_Flag
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("ccof_ready_to_be_cancelled_flag");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ccof_ready_to_be_cancelled_flag", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_ready_to_be_cancelled_flagname")]
		public string CcOf_Ready_To_Be_Cancelled_FlagName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ccof_ready_to_be_cancelled_flag"))
				{
					return this.FormattedValues["ccof_ready_to_be_cancelled_flag"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_showdeclarationonreport")]
		public virtual CcOf_ShowDeclarationOnReport? CcOf_ShowDeclarationOnReport
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((CcOf_ShowDeclarationOnReport?)(EntityOptionSetEnum.GetEnum(this, "ccof_showdeclarationonreport")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ccof_showdeclarationonreport", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_showdeclarationonreportname")]
		public string CcOf_ShowDeclarationOnReportName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ccof_showdeclarationonreport"))
				{
					return this.FormattedValues["ccof_showdeclarationonreport"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_submitted_by")]
		public string CcOf_Submitted_By
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("ccof_submitted_by");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ccof_submitted_by", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_system_recommendation")]
		public Microsoft.Xrm.Sdk.EntityReference CcOf_System_Recommendation
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ccof_system_recommendation");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ccof_system_recommendation", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_system_recommendationname")]
		public string CcOf_System_RecommendationName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ccof_system_recommendation"))
				{
					return this.FormattedValues["ccof_system_recommendation"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_trigger_complete")]
		public System.Nullable<bool> CcOf_Trigger_Complete
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("ccof_trigger_complete");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ccof_trigger_complete", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_trigger_completename")]
		public string CcOf_Trigger_CompleteName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ccof_trigger_complete"))
				{
					return this.FormattedValues["ccof_trigger_complete"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_union_agreement_reached")]
		public virtual CcOf_Change_Request_CcOf_Union_Agreement_Reached? CcOf_Union_Agreement_Reached
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((CcOf_Change_Request_CcOf_Union_Agreement_Reached?)(EntityOptionSetEnum.GetEnum(this, "ccof_union_agreement_reached")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ccof_union_agreement_reached", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_union_agreement_reachedname")]
		public string CcOf_Union_Agreement_ReachedName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ccof_union_agreement_reached"))
				{
					return this.FormattedValues["ccof_union_agreement_reached"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_unlock_declaration")]
		public System.Nullable<bool> CcOf_Unlock_Declaration
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("ccof_unlock_declaration");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ccof_unlock_declaration", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_unlock_declarationname")]
		public string CcOf_Unlock_DeclarationName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ccof_unlock_declaration"))
				{
					return this.FormattedValues["ccof_unlock_declaration"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Unique identifier of the user who created the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedBy
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdby");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyname")]
		public string CreatedByName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("createdby"))
				{
					return this.FormattedValues["createdby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyyominame")]
		public string CreatedByYomiName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("createdby"))
				{
					return this.FormattedValues["createdby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Date and time when the record was created.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdon")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("createdon");
			}
		}
		
		/// <summary>
		/// Unique identifier of the delegate user who created the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedOnBehalfBy
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdonbehalfby");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("createdonbehalfby", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyname")]
		public string CreatedOnBehalfByName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("createdonbehalfby"))
				{
					return this.FormattedValues["createdonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyyominame")]
		public string CreatedOnBehalfByYomiName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("createdonbehalfby"))
				{
					return this.FormattedValues["createdonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Sequence number of the import that created this record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("importsequencenumber")]
		public System.Nullable<int> ImportSequenceNumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("importsequencenumber");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("importsequencenumber", value);
			}
		}
		
		/// <summary>
		/// Unique identifier of the user who modified the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedBy
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedby");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyname")]
		public string ModifiedByName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("modifiedby"))
				{
					return this.FormattedValues["modifiedby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyyominame")]
		public string ModifiedByYomiName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("modifiedby"))
				{
					return this.FormattedValues["modifiedby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Date and time when the record was modified.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedon")]
		public System.Nullable<System.DateTime> ModifiedOn
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("modifiedon");
			}
		}
		
		/// <summary>
		/// Unique identifier of the delegate user who modified the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedOnBehalfBy
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedonbehalfby");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("modifiedonbehalfby", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyname")]
		public string ModifiedOnBehalfByName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("modifiedonbehalfby"))
				{
					return this.FormattedValues["modifiedonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyyominame")]
		public string ModifiedOnBehalfByYomiName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("modifiedonbehalfby"))
				{
					return this.FormattedValues["modifiedonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Date and time that the record was migrated.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("overriddencreatedon")]
		public System.Nullable<System.DateTime> OverriddenCreatedOn
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("overriddencreatedon");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("overriddencreatedon", value);
			}
		}
		
		/// <summary>
		/// Owner Id
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ownerid")]
		public Microsoft.Xrm.Sdk.EntityReference OwnerId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ownerid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ownerid", value);
			}
		}
		
		/// <summary>
		/// Name of the owner
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owneridname")]
		public string OwnerIdName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ownerid"))
				{
					return this.FormattedValues["ownerid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Yomi name of the owner
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owneridyominame")]
		public string OwnerIdYomiName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ownerid"))
				{
					return this.FormattedValues["ownerid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Unique identifier for the business unit that owns the record
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
		public Microsoft.Xrm.Sdk.EntityReference OwningBusinessUnit
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningbusinessunit");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("owningbusinessunit", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunitname")]
		public string OwningBusinessUnitName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("owningbusinessunit"))
				{
					return this.FormattedValues["owningbusinessunit"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Unique identifier for the team that owns the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
		public Microsoft.Xrm.Sdk.EntityReference OwningTeam
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningteam");
			}
		}
		
		/// <summary>
		/// Unique identifier for the user that owns the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owninguser")]
		public Microsoft.Xrm.Sdk.EntityReference OwningUser
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owninguser");
			}
		}
		
		/// <summary>
		/// Status of the Change Request
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecode")]
		public virtual CcOf_Change_Request_StateCode? StateCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((CcOf_Change_Request_StateCode?)(EntityOptionSetEnum.GetEnum(this, "statecode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("statecode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecodename")]
		public string StateCodename
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("statecode"))
				{
					return this.FormattedValues["statecode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Reason for the status of the Change Request
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscode")]
		public virtual CcOf_Change_Request_StatusCode? StatusCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((CcOf_Change_Request_StatusCode?)(EntityOptionSetEnum.GetEnum(this, "statuscode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("statuscode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscodename")]
		public string StatusCodename
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("statuscode"))
				{
					return this.FormattedValues["statuscode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timezoneruleversionnumber")]
		public System.Nullable<int> TimeZoneRuleVersionNumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("timezoneruleversionnumber");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("timezoneruleversionnumber", value);
			}
		}
		
		/// <summary>
		/// Time zone code that was in use when the record was created.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("utcconversiontimezonecode")]
		public System.Nullable<int> UtcConversionTimeZoneCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("utcconversiontimezonecode");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("utcconversiontimezonecode", value);
			}
		}
		
		/// <summary>
		/// Version Number
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("versionnumber")]
		public System.Nullable<long> VersionNumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<long>>("versionnumber");
			}
		}
		
		/// <summary>
		/// 1:N ccof_application_ccfri_closure_change_request_ccof_change_request
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ccof_application_ccfri_closure_change_request_ccof_change_request")]
		public System.Collections.Generic.IEnumerable<DataverseModel.CcOf_Application_CcFri_Closure> CcOf_Application_CcFri_Closure_Change_Request_CcOf_Change_Request
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<DataverseModel.CcOf_Application_CcFri_Closure>("ccof_application_ccfri_closure_change_request_ccof_change_request", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntities<DataverseModel.CcOf_Application_CcFri_Closure>("ccof_application_ccfri_closure_change_request_ccof_change_request", null, value);
			}
		}
		
		/// <summary>
		/// 1:N ccof_applicationstatushistory_change_request
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ccof_applicationstatushistory_change_request")]
		public System.Collections.Generic.IEnumerable<DataverseModel.CcOf_ApplicationStatusHistory> CcOf_ApplicationStatusHistory_Change_Request
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<DataverseModel.CcOf_ApplicationStatusHistory>("ccof_applicationstatushistory_change_request", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntities<DataverseModel.CcOf_ApplicationStatusHistory>("ccof_applicationstatushistory_change_request", null, value);
			}
		}
		
		/// <summary>
		/// 1:N ccof_ccof_applicationstatushistory_ccof_change_request_ccof_StatusHistoryRegardingId
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ccof_ccof_applicationstatushistory_ccof_change_request_ccof_StatusHistoryRegardin" +
			"gId")]
		public System.Collections.Generic.IEnumerable<DataverseModel.CcOf_ApplicationStatusHistory> CcOf_CcOf_ApplicationStatusHistory_CcOf_Change_Request_CcOf_StatusHistoryRegardingId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<DataverseModel.CcOf_ApplicationStatusHistory>("ccof_ccof_applicationstatushistory_ccof_change_request_ccof_StatusHistoryRegardin" +
						"gId", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntities<DataverseModel.CcOf_ApplicationStatusHistory>("ccof_ccof_applicationstatushistory_ccof_change_request_ccof_StatusHistoryRegardin" +
						"gId", null, value);
			}
		}
		
		/// <summary>
		/// 1:N ccof_ccof_approvable_fee_schedule_history_ccof_change_request_ccof_RegardingId
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ccof_ccof_approvable_fee_schedule_history_ccof_change_request_ccof_RegardingId")]
		public System.Collections.Generic.IEnumerable<DataverseModel.CcOf_ApProvable_Fee_Schedule_History> CcOf_CcOf_ApProvable_Fee_Schedule_History_CcOf_Change_Request_CcOf_RegardingId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<DataverseModel.CcOf_ApProvable_Fee_Schedule_History>("ccof_ccof_approvable_fee_schedule_history_ccof_change_request_ccof_RegardingId", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntities<DataverseModel.CcOf_ApProvable_Fee_Schedule_History>("ccof_ccof_approvable_fee_schedule_history_ccof_change_request_ccof_RegardingId", null, value);
			}
		}
		
		/// <summary>
		/// 1:N ccof_ccof_change_request_summary_changerequest
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ccof_ccof_change_request_summary_changerequest")]
		public System.Collections.Generic.IEnumerable<DataverseModel.CcOf_Change_Request_Summary> CcOf_CcOf_Change_Request_Summary_ChangeRequest
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<DataverseModel.CcOf_Change_Request_Summary>("ccof_ccof_change_request_summary_changerequest", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntities<DataverseModel.CcOf_Change_Request_Summary>("ccof_ccof_change_request_summary_changerequest", null, value);
			}
		}
		
		/// <summary>
		/// 1:N ccof_ccof_unlock_history_ccof_change_request_ccof_application_changerequest_id
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ccof_ccof_unlock_history_ccof_change_request_ccof_application_changerequest_id")]
		public System.Collections.Generic.IEnumerable<DataverseModel.CcOf_Unlock_History> CcOf_CcOf_Unlock_History_CcOf_Change_Request_CcOf_Application_ChangeRequest_Id
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<DataverseModel.CcOf_Unlock_History>("ccof_ccof_unlock_history_ccof_change_request_ccof_application_changerequest_id", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntities<DataverseModel.CcOf_Unlock_History>("ccof_ccof_unlock_history_ccof_change_request_ccof_application_changerequest_id", null, value);
			}
		}
		
		/// <summary>
		/// 1:N ccof_ccof_unlock_history_ccof_change_request_ccof_RegardingId
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ccof_ccof_unlock_history_ccof_change_request_ccof_RegardingId")]
		public System.Collections.Generic.IEnumerable<DataverseModel.CcOf_Unlock_History> CcOf_CcOf_Unlock_History_CcOf_Change_Request_CcOf_RegardingId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<DataverseModel.CcOf_Unlock_History>("ccof_ccof_unlock_history_ccof_change_request_ccof_RegardingId", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntities<DataverseModel.CcOf_Unlock_History>("ccof_ccof_unlock_history_ccof_change_request_ccof_RegardingId", null, value);
			}
		}
		
		/// <summary>
		/// 1:N ccof_change_action_change_request
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ccof_change_action_change_request")]
		public System.Collections.Generic.IEnumerable<DataverseModel.CcOf_Change_Action> CcOf_Change_Action_Change_Request
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<DataverseModel.CcOf_Change_Action>("ccof_change_action_change_request", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntities<DataverseModel.CcOf_Change_Action>("ccof_change_action_change_request", null, value);
			}
		}
		
		/// <summary>
		/// 1:N ccof_Email_change_request
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ccof_Email_change_request")]
		public System.Collections.Generic.IEnumerable<DataverseModel.Email> CcOf_Email_Change_Request
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<DataverseModel.Email>("ccof_Email_change_request", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntities<DataverseModel.Email>("ccof_Email_change_request", null, value);
			}
		}
		
		/// <summary>
		/// N:1 business_unit_ccof_change_request
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("business_unit_ccof_change_request")]
		public DataverseModel.BusinessUnit Business_Unit_CcOf_Change_Request
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<DataverseModel.BusinessUnit>("business_unit_ccof_change_request", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntity<DataverseModel.BusinessUnit>("business_unit_ccof_change_request", null, value);
			}
		}
		
		/// <summary>
		/// N:1 ccof_ccof_change_request_Application_ccof_appl
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_application")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ccof_ccof_change_request_Application_ccof_appl")]
		public DataverseModel.CcOf_Application CcOf_CcOf_Change_Request_Application_CcOf_AppL
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<DataverseModel.CcOf_Application>("ccof_ccof_change_request_Application_ccof_appl", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntity<DataverseModel.CcOf_Application>("ccof_ccof_change_request_Application_ccof_appl", null, value);
			}
		}
		
		/// <summary>
		/// N:1 ccof_ccof_change_request_Organization
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_organization")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ccof_ccof_change_request_Organization")]
		public DataverseModel.Account CcOf_CcOf_Change_Request_Organization
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<DataverseModel.Account>("ccof_ccof_change_request_Organization", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntity<DataverseModel.Account>("ccof_ccof_change_request_Organization", null, value);
			}
		}
		
		/// <summary>
		/// N:1 ccof_ccof_change_request_program_year_ccof_pro
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_program_year")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ccof_ccof_change_request_program_year_ccof_pro")]
		public DataverseModel.CcOf_Program_Year CcOf_CcOf_Change_Request_Program_Year_CcOf_Pro
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<DataverseModel.CcOf_Program_Year>("ccof_ccof_change_request_program_year_ccof_pro", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntity<DataverseModel.CcOf_Program_Year>("ccof_ccof_change_request_program_year_ccof_pro", null, value);
			}
		}
		
		/// <summary>
		/// N:1 ccof_ccof_change_request_system_recommendation
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_system_recommendation")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ccof_ccof_change_request_system_recommendation")]
		public DataverseModel.CcOf_System_Recommendation CcOf_CcOf_Change_Request_System_Recommendation
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<DataverseModel.CcOf_System_Recommendation>("ccof_ccof_change_request_system_recommendation", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntity<DataverseModel.CcOf_System_Recommendation>("ccof_ccof_change_request_system_recommendation", null, value);
			}
		}
		
		/// <summary>
		/// N:1 lk_ccof_change_request_createdby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_ccof_change_request_createdby")]
		public DataverseModel.SystemUser Lk_CcOf_Change_Request_CreatedBy
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<DataverseModel.SystemUser>("lk_ccof_change_request_createdby", null);
			}
		}
		
		/// <summary>
		/// N:1 lk_ccof_change_request_createdonbehalfby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_ccof_change_request_createdonbehalfby")]
		public DataverseModel.SystemUser Lk_CcOf_Change_Request_CreatedOnBehalfBy
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<DataverseModel.SystemUser>("lk_ccof_change_request_createdonbehalfby", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntity<DataverseModel.SystemUser>("lk_ccof_change_request_createdonbehalfby", null, value);
			}
		}
		
		/// <summary>
		/// N:1 lk_ccof_change_request_modifiedby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_ccof_change_request_modifiedby")]
		public DataverseModel.SystemUser Lk_CcOf_Change_Request_ModifiedBy
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<DataverseModel.SystemUser>("lk_ccof_change_request_modifiedby", null);
			}
		}
		
		/// <summary>
		/// N:1 lk_ccof_change_request_modifiedonbehalfby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_ccof_change_request_modifiedonbehalfby")]
		public DataverseModel.SystemUser Lk_CcOf_Change_Request_ModifiedOnBehalfBy
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<DataverseModel.SystemUser>("lk_ccof_change_request_modifiedonbehalfby", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntity<DataverseModel.SystemUser>("lk_ccof_change_request_modifiedonbehalfby", null, value);
			}
		}
		
		/// <summary>
		/// N:1 user_ccof_change_request
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owninguser")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("user_ccof_change_request")]
		public DataverseModel.SystemUser User_CcOf_Change_Request
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<DataverseModel.SystemUser>("user_ccof_change_request", null);
			}
		}
		
		/// <summary>
		/// Constructor for populating via LINQ queries given a LINQ anonymous type
		/// <param name="anonymousType">LINQ anonymous type.</param>
		/// </summary>
		[System.Diagnostics.DebuggerNonUserCode()]
		public CcOf_Change_Request(object anonymousType) : 
				this()
		{
            foreach (var p in anonymousType.GetType().GetProperties())
            {
                var value = p.GetValue(anonymousType, null);
                var name = p.Name.ToLower();
            
                if (value != null && name.EndsWith("enum") && value.GetType().BaseType == typeof(System.Enum))
                {
                    value = new Microsoft.Xrm.Sdk.OptionSetValue((int) value);
                    name = name.Remove(name.Length - "enum".Length);
                }
            
                switch (name)
                {
                    case "id":
                        base.Id = (System.Guid)value;
                        Attributes["ccof_change_requestid"] = base.Id;
                        break;
                    case "ccof_change_requestid":
                        var id = (System.Nullable<System.Guid>) value;
                        if(id == null){ continue; }
                        base.Id = id.Value;
                        Attributes[name] = base.Id;
                        break;
                    case "formattedvalues":
                        // Add Support for FormattedValues
                        FormattedValues.AddRange((Microsoft.Xrm.Sdk.FormattedValueCollection)value);
                        break;
                    default:
                        Attributes[name] = value;
                        break;
                }
            }
		}
	}
}
#pragma warning restore CS1591
