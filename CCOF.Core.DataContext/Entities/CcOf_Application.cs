#pragma warning disable CS1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DataverseModel
{
	
	
	[System.Runtime.Serialization.DataContractAttribute()]
	public enum CcOf_Application_CcOf_Union_Agreement_Reached
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("No", 1)]
		No = 100000001,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Yes", 0)]
		Yes = 100000000,
	}
	
	/// <summary>
	/// Status of the Application
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	public enum CcOf_Application_StateCode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Active", 0)]
		Active = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Inactive", 1)]
		Inactive = 1,
	}
	
	/// <summary>
	/// Reason for the status of the Application
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	public enum CcOf_Application_StatusCode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Inactive", 3, "#0000ff")]
		Inactive = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Incomplete", 0, "#0000ff")]
		Incomplete = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Submitted", 1, "#0000ff")]
		Submitted = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Withdrawn", 2, "#0000ff")]
		Withdrawn = 4,
	}
	
	/// <summary>
	/// CCOF Application and PCF
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("ccof_application")]
	public partial class CcOf_Application : Microsoft.Xrm.Sdk.Entity
	{
		
		/// <summary>
		/// Available fields, a the time of codegen, for the ccof_application entity
		/// </summary>
		public partial class Fields
		{
			public const string Business_Unit_CcOf_Application = "business_unit_ccof_application";
			public const string CcOf_Adjudication_CcFri_Application = "CcOf_Adjudication_CcFri_Application";
			public const string CcOf_Adjudication_ECEWe_Application = "CcOf_Adjudication_ECEWe_Application";
			public const string CcOf_Adjudication_ECEWe_Facility_AreYouAPublic = "CcOf_Adjudication_ECEWe_Facility_AreYouAPublic";
			public const string CcOf_Adjudication_ECEWe_Facility_ECEWeAppLiCat = "CcOf_Adjudication_ECEWe_Facility_ECEWeAppLiCat";
			public const string CcOf_Application_BaseFunding_Application = "CcOf_Application_BaseFunding_Application";
			public const string CcOf_Application_ProgramYear = "ccof_application_ProgramYear";
			public const string CcOf_Application_Template_Version = "ccof_application_template_version";
			public const string CcOf_ApplicationCcFri_Application_CcOf_Ap = "CcOf_ApplicationCcFri_Application_CcOf_Ap";
			public const string CcOf_ApplicationId = "ccof_applicationid";
			public const string Id = "ccof_applicationid";
			public const string CcOf_ApplicationStatusHistory_Application_CcOf_Application = "CcOf_ApplicationStatusHistory_Application_CcOf_Application";
			public const string CcOf_ApplicationType = "ccof_applicationtype";
			public const string CcOf_ApplicationTypeName = "ccof_applicationtypename";
			public const string CcOf_CcOf_Adjudication_CcFri_Facility_App = "CcOf_CcOf_Adjudication_CcFri_Facility_App";
			public const string CcOf_CcOf_Application_CcOf_Application_Facility_Document_Application = "CcOf_CcOf_Application_CcOf_Application_Facility_Document_Application";
			public const string CcOf_CcOf_Application_CcOf_ApplicationECEWe_Application = "CcOf_CcOf_Application_CcOf_ApplicationECEWe_Application";
			public const string CcOf_CcOf_Application_CcOf_AuditLog_ApplicationId = "CcOf_CcOf_Application_CcOf_AuditLog_ApplicationId";
			public const string CcOf_CcOf_Application_Organization_Account = "ccof_ccof_application_Organization_account";
			public const string CcOf_CcOf_ApplicationSummary_Application_CcOf_ = "CcOf_CcOf_ApplicationSummary_Application_CcOf_";
			public const string CcOf_CcOf_Change_Request_Application_CcOf_AppL = "CcOf_CcOf_Change_Request_Application_CcOf_AppL";
			public const string CcOf_CcOf_Unlock_History_CcOf_Application_CcOf_Application_ChangeRequest_Id = "CcOf_CcOf_Unlock_History_CcOf_Application_CcOf_Application_ChangeRequest_Id";
			public const string CcOf_CcOfStatus = "ccof_ccofstatus";
			public const string CcOf_CcOfStatusName = "ccof_ccofstatusname";
			public const string CcOf_Consent = "ccof_consent";
			public const string CcOf_ConsentName = "ccof_consentname";
			public const string CcOf_DecLaRatioNaStatus = "ccof_declarationastatus";
			public const string CcOf_DecLaRatioNaStatusName = "ccof_declarationastatusname";
			public const string CcOf_DecLaRatioNbStatus = "ccof_declarationbstatus";
			public const string CcOf_DecLaRatioNbStatusName = "ccof_declarationbstatusname";
			public const string CcOf_Describe_Your_Org = "ccof_describe_your_org";
			public const string CcOf_Describe_Your_OrgName = "ccof_describe_your_orgname";
			public const string CcOf_DM_SourceId = "ccof_dm_sourceid";
			public const string CcOf_ECEWe_Confirmation = "ccof_ecewe_confirmation";
			public const string CcOf_ECEWe_ConfirmationName = "ccof_ecewe_confirmationname";
			public const string CcOf_ECEWe_Eligibility_Complete = "ccof_ecewe_eligibility_complete";
			public const string CcOf_ECEWe_Eligibility_CompleteName = "ccof_ecewe_eligibility_completename";
			public const string CcOf_ECEWe_EmployeeUnion = "ccof_ecewe_employeeunion";
			public const string CcOf_ECEWe_EmployeeUnionName = "ccof_ecewe_employeeunionname";
			public const string CcOf_ECEWe_OptIn = "ccof_ecewe_optin";
			public const string CcOf_ECEWe_OpTinName = "ccof_ecewe_optinname";
			public const string CcOf_ECEWe_SelectTheApplicableFundingModel = "ccof_ecewe_selecttheapplicablefundingmodel";
			public const string CcOf_ECEWe_SelectTheApplicableFundingModelName = "ccof_ecewe_selecttheapplicablefundingmodelname";
			public const string CcOf_ECEWe_SelectTheApplicableSector = "ccof_ecewe_selecttheapplicablesector";
			public const string CcOf_ECEWe_SelectTheApplicableSectorName = "ccof_ecewe_selecttheapplicablesectorname";
			public const string CcOf_FamilyChildCare = "ccof_familychildcare";
			public const string CcOf_FamilyChildCaRename = "ccof_familychildcarename";
			public const string CcOf_FirstSubmissionDate = "ccof_firstsubmissiondate";
			public const string CcOf_Funding_Agreement_Application_CcOf_Application = "CcOf_Funding_Agreement_Application_CcOf_Application";
			public const string CcOf_InHomeMultiAgeChildCare = "ccof_inhomemultiagechildcare";
			public const string CcOf_InHomeMultiAgeChildCaRename = "ccof_inhomemultiagechildcarename";
			public const string CcOf_LatestSubmissionDate = "ccof_latestsubmissiondate";
			public const string CcOf_LatestSubmissionDatePst = "ccof_latestsubmissiondatepst";
			public const string CcOf_LicenseComplete = "ccof_licensecomplete";
			public const string CcOf_LicenseCompleteName = "ccof_licensecompletename";
			public const string CcOf_MultiAgeChildCare = "ccof_multiagechildcare";
			public const string CcOf_MultiAgeChildCaRename = "ccof_multiagechildcarename";
			public const string CcOf_Name = "ccof_name";
			public const string CcOf_Organization = "ccof_organization";
			public const string CcOf_OrganizationName = "ccof_organizationname";
			public const string CcOf_OrganizationYomiName = "ccof_organizationyominame";
			public const string CcOf_ProgramYear = "ccof_programyear";
			public const string CcOf_ProgramYearName = "ccof_programyearname";
			public const string CcOf_ProviderType = "ccof_providertype";
			public const string CcOf_ProviderTypeName = "ccof_providertypename";
			public const string CcOf_Public_Sector_Employer = "ccof_public_sector_employer";
			public const string CcOf_Public_Sector_EmployerName = "ccof_public_sector_employername";
			public const string CcOf_ShowDeclarationOnReport = "ccof_showdeclarationonreport";
			public const string CcOf_ShowDeclarationOnReportName = "ccof_showdeclarationonreportname";
			public const string CcOf_SubmittedBy = "ccof_submittedby";
			public const string CcOf_Trigger_Complete = "ccof_trigger_complete";
			public const string CcOf_Trigger_CompleteName = "ccof_trigger_completename";
			public const string CcOf_Union_Agreement_Reached = "ccof_union_agreement_reached";
			public const string CcOf_Union_Agreement_ReachedName = "ccof_union_agreement_reachedname";
			public const string CcOf_Unlock_CcOf = "ccof_unlock_ccof";
			public const string CcOf_Unlock_CcOfName = "ccof_unlock_ccofname";
			public const string CcOf_Unlock_Declaration = "ccof_unlock_declaration";
			public const string CcOf_Unlock_DeclarationName = "ccof_unlock_declarationname";
			public const string CcOf_Unlock_ECEWe = "ccof_unlock_ecewe";
			public const string CcOf_Unlock_ECEWeName = "ccof_unlock_ecewename";
			public const string CcOf_Unlock_LicenseUpload = "ccof_unlock_licenseupload";
			public const string CcOf_Unlock_LicenseUploadName = "ccof_unlock_licenseuploadname";
			public const string CcOf_Unlock_SupportingDocument = "ccof_unlock_supportingdocument";
			public const string CcOf_Unlock_SupportingDocumentName = "ccof_unlock_supportingdocumentname";
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string ExchangerAte = "exchangerate";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string Lk_CcOf_Application_CreatedBy = "lk_ccof_application_createdby";
			public const string Lk_CcOf_Application_CreatedOnBehalfBy = "lk_ccof_application_createdonbehalfby";
			public const string Lk_CcOf_Application_ModifiedBy = "lk_ccof_application_modifiedby";
			public const string Lk_CcOf_Application_ModifiedOnBehalfBy = "lk_ccof_application_modifiedonbehalfby";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string OwnerId = "ownerid";
			public const string OwnerIdName = "owneridname";
			public const string OwnerIdYomiName = "owneridyominame";
			public const string OwningBusinessUnit = "owningbusinessunit";
			public const string OwningBusinessUnitName = "owningbusinessunitname";
			public const string OwningTeam = "owningteam";
			public const string OwningUser = "owninguser";
			public const string StateCode = "statecode";
			public const string StateCodename = "statecodename";
			public const string StatusCode = "statuscode";
			public const string StatusCodename = "statuscodename";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string TransactionCurrency_CcOf_Application = "TransactionCurrency_ccof_Application";
			public const string TransactionCurrencyId = "transactioncurrencyid";
			public const string TransactionCurrencyIdName = "transactioncurrencyidname";
			public const string User_CcOf_Application = "user_ccof_application";
			public const string UtcConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
		}
		
		[System.Diagnostics.DebuggerNonUserCode()]
		public CcOf_Application(System.Guid id) : 
				base(EntityLogicalName, id)
		{
		}
		
		[System.Diagnostics.DebuggerNonUserCode()]
		public CcOf_Application(string keyName, object keyValue) : 
				base(EntityLogicalName, keyName, keyValue)
		{
		}
		
		[System.Diagnostics.DebuggerNonUserCode()]
		public CcOf_Application(Microsoft.Xrm.Sdk.KeyAttributeCollection keyAttributes) : 
				base(EntityLogicalName, keyAttributes)
		{
		}
		
		public const string AlternateKeys = "ccof_dm_sourceid";
		
		/// <summary>
		/// Default Constructor.
		/// </summary>
		[System.Diagnostics.DebuggerNonUserCode()]
		public CcOf_Application() : 
				base(EntityLogicalName)
		{
		}
		
		public const string PrimaryIdAttribute = "ccof_applicationid";
		
		public const string PrimaryNameAttribute = "ccof_name";
		
		public const string EntitySchemaName = "ccof_Application";
		
		public const string EntityLogicalName = "ccof_application";
		
		public const string EntityLogicalCollectionName = "ccof_applications";
		
		public const string EntitySetName = "ccof_applications";
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_application_template_version")]
		public string CcOf_Application_Template_Version
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("ccof_application_template_version");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ccof_application_template_version", value);
			}
		}
		
		/// <summary>
		/// Unique identifier for entity instances
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_applicationid")]
		public System.Nullable<System.Guid> CcOf_ApplicationId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("ccof_applicationid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ccof_applicationid", value);
				if (value.HasValue)
				{
					base.Id = value.Value;
				}
				else
				{
					base.Id = System.Guid.Empty;
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_applicationid")]
		public override System.Guid Id
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return base.Id;
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.CcOf_ApplicationId = value;
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_applicationtype")]
		public virtual CcOf_TypeOfApplications? CcOf_ApplicationType
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((CcOf_TypeOfApplications?)(EntityOptionSetEnum.GetEnum(this, "ccof_applicationtype")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ccof_applicationtype", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_applicationtypename")]
		public string CcOf_ApplicationTypeName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ccof_applicationtype"))
				{
					return this.FormattedValues["ccof_applicationtype"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_ccofstatus")]
		public virtual CcOf_CcOfStatus? CcOf_CcOfStatus
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((CcOf_CcOfStatus?)(EntityOptionSetEnum.GetEnum(this, "ccof_ccofstatus")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ccof_ccofstatus", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_ccofstatusname")]
		public string CcOf_CcOfStatusName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ccof_ccofstatus"))
				{
					return this.FormattedValues["ccof_ccofstatus"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Application Consent
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_consent")]
		public virtual CcOf_YesNo? CcOf_Consent
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((CcOf_YesNo?)(EntityOptionSetEnum.GetEnum(this, "ccof_consent")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ccof_consent", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_consentname")]
		public string CcOf_ConsentName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ccof_consent"))
				{
					return this.FormattedValues["ccof_consent"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_declarationastatus")]
		public virtual CcOf_YesNo? CcOf_DecLaRatioNaStatus
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((CcOf_YesNo?)(EntityOptionSetEnum.GetEnum(this, "ccof_declarationastatus")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ccof_declarationastatus", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_declarationastatusname")]
		public string CcOf_DecLaRatioNaStatusName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ccof_declarationastatus"))
				{
					return this.FormattedValues["ccof_declarationastatus"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_declarationbstatus")]
		public virtual CcOf_YesNo? CcOf_DecLaRatioNbStatus
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((CcOf_YesNo?)(EntityOptionSetEnum.GetEnum(this, "ccof_declarationbstatus")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ccof_declarationbstatus", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_declarationbstatusname")]
		public string CcOf_DecLaRatioNbStatusName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ccof_declarationbstatus"))
				{
					return this.FormattedValues["ccof_declarationbstatus"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_describe_your_org")]
		public virtual CcOf_Describe_Your_Org? CcOf_Describe_Your_Org
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((CcOf_Describe_Your_Org?)(EntityOptionSetEnum.GetEnum(this, "ccof_describe_your_org")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ccof_describe_your_org", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_describe_your_orgname")]
		public string CcOf_Describe_Your_OrgName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ccof_describe_your_org"))
				{
					return this.FormattedValues["ccof_describe_your_org"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_dm_sourceid")]
		public string CcOf_DM_SourceId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("ccof_dm_sourceid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ccof_dm_sourceid", value);
			}
		}
		
		/// <summary>
		/// I confirm that my organization/facilities pay the Joint Job Evaluation Plan (JJEP) wage rates or, if a lesser amount, a side agreement is being concluded to implement the ECE Wage Enhancement.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_ecewe_confirmation")]
		public virtual CcOf_YesNo? CcOf_ECEWe_Confirmation
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((CcOf_YesNo?)(EntityOptionSetEnum.GetEnum(this, "ccof_ecewe_confirmation")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ccof_ecewe_confirmation", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_ecewe_confirmationname")]
		public string CcOf_ECEWe_ConfirmationName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ccof_ecewe_confirmation"))
				{
					return this.FormattedValues["ccof_ecewe_confirmation"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_ecewe_eligibility_complete")]
		public System.Nullable<bool> CcOf_ECEWe_Eligibility_Complete
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("ccof_ecewe_eligibility_complete");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ccof_ecewe_eligibility_complete", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_ecewe_eligibility_completename")]
		public string CcOf_ECEWe_Eligibility_CompleteName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ccof_ecewe_eligibility_complete"))
				{
					return this.FormattedValues["ccof_ecewe_eligibility_complete"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Do any of the ECE Employees at any facility in your organization belong to a union?
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_ecewe_employeeunion")]
		public virtual CcOf_YesNo? CcOf_ECEWe_EmployeeUnion
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((CcOf_YesNo?)(EntityOptionSetEnum.GetEnum(this, "ccof_ecewe_employeeunion")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ccof_ecewe_employeeunion", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_ecewe_employeeunionname")]
		public string CcOf_ECEWe_EmployeeUnionName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ccof_ecewe_employeeunion"))
				{
					return this.FormattedValues["ccof_ecewe_employeeunion"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// For the 2022/23 funding term, would you like to opt-in to ECE-WE for any facility in your organization?
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_ecewe_optin")]
		public virtual CcOf_YesNo? CcOf_ECEWe_OptIn
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((CcOf_YesNo?)(EntityOptionSetEnum.GetEnum(this, "ccof_ecewe_optin")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ccof_ecewe_optin", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_ecewe_optinname")]
		public string CcOf_ECEWe_OpTinName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ccof_ecewe_optin"))
				{
					return this.FormattedValues["ccof_ecewe_optin"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_ecewe_selecttheapplicablefundingmodel")]
		public virtual CcOf_FundingModel? CcOf_ECEWe_SelectTheApplicableFundingModel
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((CcOf_FundingModel?)(EntityOptionSetEnum.GetEnum(this, "ccof_ecewe_selecttheapplicablefundingmodel")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ccof_ecewe_selecttheapplicablefundingmodel", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_ecewe_selecttheapplicablefundingmodelname")]
		public string CcOf_ECEWe_SelectTheApplicableFundingModelName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ccof_ecewe_selecttheapplicablefundingmodel"))
				{
					return this.FormattedValues["ccof_ecewe_selecttheapplicablefundingmodel"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_ecewe_selecttheapplicablesector")]
		public virtual CcOf_SelectTheApplicableSector? CcOf_ECEWe_SelectTheApplicableSector
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((CcOf_SelectTheApplicableSector?)(EntityOptionSetEnum.GetEnum(this, "ccof_ecewe_selecttheapplicablesector")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ccof_ecewe_selecttheapplicablesector", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_ecewe_selecttheapplicablesectorname")]
		public string CcOf_ECEWe_SelectTheApplicableSectorName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ccof_ecewe_selecttheapplicablesector"))
				{
					return this.FormattedValues["ccof_ecewe_selecttheapplicablesector"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_familychildcare")]
		public System.Nullable<bool> CcOf_FamilyChildCare
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("ccof_familychildcare");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ccof_familychildcare", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_familychildcarename")]
		public string CcOf_FamilyChildCaRename
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ccof_familychildcare"))
				{
					return this.FormattedValues["ccof_familychildcare"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_firstsubmissiondate")]
		public System.Nullable<System.DateTime> CcOf_FirstSubmissionDate
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("ccof_firstsubmissiondate");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ccof_firstsubmissiondate", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_inhomemultiagechildcare")]
		public System.Nullable<bool> CcOf_InHomeMultiAgeChildCare
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("ccof_inhomemultiagechildcare");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ccof_inhomemultiagechildcare", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_inhomemultiagechildcarename")]
		public string CcOf_InHomeMultiAgeChildCaRename
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ccof_inhomemultiagechildcare"))
				{
					return this.FormattedValues["ccof_inhomemultiagechildcare"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_latestsubmissiondate")]
		public System.Nullable<System.DateTime> CcOf_LatestSubmissionDate
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("ccof_latestsubmissiondate");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ccof_latestsubmissiondate", value);
			}
		}
		
		/// <summary>
		/// for Summary PDF file only
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_latestsubmissiondatepst")]
		public System.Nullable<System.DateTime> CcOf_LatestSubmissionDatePst
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("ccof_latestsubmissiondatepst");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ccof_latestsubmissiondatepst", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_licensecomplete")]
		public System.Nullable<bool> CcOf_LicenseComplete
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("ccof_licensecomplete");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ccof_licensecomplete", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_licensecompletename")]
		public string CcOf_LicenseCompleteName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ccof_licensecomplete"))
				{
					return this.FormattedValues["ccof_licensecomplete"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_multiagechildcare")]
		public System.Nullable<bool> CcOf_MultiAgeChildCare
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("ccof_multiagechildcare");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ccof_multiagechildcare", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_multiagechildcarename")]
		public string CcOf_MultiAgeChildCaRename
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ccof_multiagechildcare"))
				{
					return this.FormattedValues["ccof_multiagechildcare"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_name")]
		public string CcOf_Name
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("ccof_name");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ccof_name", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_organization")]
		public Microsoft.Xrm.Sdk.EntityReference CcOf_Organization
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ccof_organization");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ccof_organization", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_organizationname")]
		public string CcOf_OrganizationName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ccof_organization"))
				{
					return this.FormattedValues["ccof_organization"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_organizationyominame")]
		public string CcOf_OrganizationYomiName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ccof_organization"))
				{
					return this.FormattedValues["ccof_organization"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_programyear")]
		public Microsoft.Xrm.Sdk.EntityReference CcOf_ProgramYear
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ccof_programyear");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ccof_programyear", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_programyearname")]
		public string CcOf_ProgramYearName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ccof_programyear"))
				{
					return this.FormattedValues["ccof_programyear"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_providertype")]
		public virtual CcOf_ProviderType? CcOf_ProviderType
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((CcOf_ProviderType?)(EntityOptionSetEnum.GetEnum(this, "ccof_providertype")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ccof_providertype", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_providertypename")]
		public string CcOf_ProviderTypeName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ccof_providertype"))
				{
					return this.FormattedValues["ccof_providertype"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_public_sector_employer")]
		public virtual CcOf_YesNo? CcOf_Public_Sector_Employer
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((CcOf_YesNo?)(EntityOptionSetEnum.GetEnum(this, "ccof_public_sector_employer")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ccof_public_sector_employer", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_public_sector_employername")]
		public string CcOf_Public_Sector_EmployerName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ccof_public_sector_employer"))
				{
					return this.FormattedValues["ccof_public_sector_employer"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// for report
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_showdeclarationonreport")]
		public virtual CcOf_ShowDeclarationOnReport? CcOf_ShowDeclarationOnReport
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((CcOf_ShowDeclarationOnReport?)(EntityOptionSetEnum.GetEnum(this, "ccof_showdeclarationonreport")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ccof_showdeclarationonreport", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_showdeclarationonreportname")]
		public string CcOf_ShowDeclarationOnReportName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ccof_showdeclarationonreport"))
				{
					return this.FormattedValues["ccof_showdeclarationonreport"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// The Organization's authorized signing authority
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_submittedby")]
		public string CcOf_SubmittedBy
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("ccof_submittedby");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ccof_submittedby", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_trigger_complete")]
		public System.Nullable<bool> CcOf_Trigger_Complete
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("ccof_trigger_complete");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ccof_trigger_complete", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_trigger_completename")]
		public string CcOf_Trigger_CompleteName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ccof_trigger_complete"))
				{
					return this.FormattedValues["ccof_trigger_complete"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_union_agreement_reached")]
		public virtual CcOf_Application_CcOf_Union_Agreement_Reached? CcOf_Union_Agreement_Reached
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((CcOf_Application_CcOf_Union_Agreement_Reached?)(EntityOptionSetEnum.GetEnum(this, "ccof_union_agreement_reached")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ccof_union_agreement_reached", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_union_agreement_reachedname")]
		public string CcOf_Union_Agreement_ReachedName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ccof_union_agreement_reached"))
				{
					return this.FormattedValues["ccof_union_agreement_reached"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_unlock_ccof")]
		public virtual CcOf_YesNo? CcOf_Unlock_CcOf
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((CcOf_YesNo?)(EntityOptionSetEnum.GetEnum(this, "ccof_unlock_ccof")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ccof_unlock_ccof", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_unlock_ccofname")]
		public string CcOf_Unlock_CcOfName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ccof_unlock_ccof"))
				{
					return this.FormattedValues["ccof_unlock_ccof"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_unlock_declaration")]
		public virtual CcOf_YesNo? CcOf_Unlock_Declaration
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((CcOf_YesNo?)(EntityOptionSetEnum.GetEnum(this, "ccof_unlock_declaration")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ccof_unlock_declaration", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_unlock_declarationname")]
		public string CcOf_Unlock_DeclarationName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ccof_unlock_declaration"))
				{
					return this.FormattedValues["ccof_unlock_declaration"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_unlock_ecewe")]
		public virtual CcOf_YesNo? CcOf_Unlock_ECEWe
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((CcOf_YesNo?)(EntityOptionSetEnum.GetEnum(this, "ccof_unlock_ecewe")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ccof_unlock_ecewe", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_unlock_ecewename")]
		public string CcOf_Unlock_ECEWeName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ccof_unlock_ecewe"))
				{
					return this.FormattedValues["ccof_unlock_ecewe"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_unlock_licenseupload")]
		public virtual CcOf_YesNo? CcOf_Unlock_LicenseUpload
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((CcOf_YesNo?)(EntityOptionSetEnum.GetEnum(this, "ccof_unlock_licenseupload")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ccof_unlock_licenseupload", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_unlock_licenseuploadname")]
		public string CcOf_Unlock_LicenseUploadName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ccof_unlock_licenseupload"))
				{
					return this.FormattedValues["ccof_unlock_licenseupload"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_unlock_supportingdocument")]
		public virtual CcOf_YesNo? CcOf_Unlock_SupportingDocument
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((CcOf_YesNo?)(EntityOptionSetEnum.GetEnum(this, "ccof_unlock_supportingdocument")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ccof_unlock_supportingdocument", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_unlock_supportingdocumentname")]
		public string CcOf_Unlock_SupportingDocumentName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ccof_unlock_supportingdocument"))
				{
					return this.FormattedValues["ccof_unlock_supportingdocument"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Unique identifier of the user who created the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedBy
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdby");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyname")]
		public string CreatedByName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("createdby"))
				{
					return this.FormattedValues["createdby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyyominame")]
		public string CreatedByYomiName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("createdby"))
				{
					return this.FormattedValues["createdby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Date and time when the record was created.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdon")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("createdon");
			}
		}
		
		/// <summary>
		/// Unique identifier of the delegate user who created the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedOnBehalfBy
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdonbehalfby");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("createdonbehalfby", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyname")]
		public string CreatedOnBehalfByName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("createdonbehalfby"))
				{
					return this.FormattedValues["createdonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyyominame")]
		public string CreatedOnBehalfByYomiName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("createdonbehalfby"))
				{
					return this.FormattedValues["createdonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Exchange rate for the currency associated with the entity with respect to the base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("exchangerate")]
		public System.Nullable<decimal> ExchangerAte
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<decimal>>("exchangerate");
			}
		}
		
		/// <summary>
		/// Sequence number of the import that created this record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("importsequencenumber")]
		public System.Nullable<int> ImportSequenceNumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("importsequencenumber");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("importsequencenumber", value);
			}
		}
		
		/// <summary>
		/// Unique identifier of the user who modified the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedBy
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedby");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyname")]
		public string ModifiedByName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("modifiedby"))
				{
					return this.FormattedValues["modifiedby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyyominame")]
		public string ModifiedByYomiName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("modifiedby"))
				{
					return this.FormattedValues["modifiedby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Date and time when the record was modified.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedon")]
		public System.Nullable<System.DateTime> ModifiedOn
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("modifiedon");
			}
		}
		
		/// <summary>
		/// Unique identifier of the delegate user who modified the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedOnBehalfBy
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedonbehalfby");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("modifiedonbehalfby", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyname")]
		public string ModifiedOnBehalfByName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("modifiedonbehalfby"))
				{
					return this.FormattedValues["modifiedonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyyominame")]
		public string ModifiedOnBehalfByYomiName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("modifiedonbehalfby"))
				{
					return this.FormattedValues["modifiedonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Date and time that the record was migrated.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("overriddencreatedon")]
		public System.Nullable<System.DateTime> OverriddenCreatedOn
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("overriddencreatedon");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("overriddencreatedon", value);
			}
		}
		
		/// <summary>
		/// Owner Id
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ownerid")]
		public Microsoft.Xrm.Sdk.EntityReference OwnerId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ownerid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ownerid", value);
			}
		}
		
		/// <summary>
		/// Name of the owner
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owneridname")]
		public string OwnerIdName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ownerid"))
				{
					return this.FormattedValues["ownerid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Yomi name of the owner
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owneridyominame")]
		public string OwnerIdYomiName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ownerid"))
				{
					return this.FormattedValues["ownerid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Unique identifier for the business unit that owns the record
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
		public Microsoft.Xrm.Sdk.EntityReference OwningBusinessUnit
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningbusinessunit");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("owningbusinessunit", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunitname")]
		public string OwningBusinessUnitName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("owningbusinessunit"))
				{
					return this.FormattedValues["owningbusinessunit"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Unique identifier for the team that owns the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
		public Microsoft.Xrm.Sdk.EntityReference OwningTeam
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningteam");
			}
		}
		
		/// <summary>
		/// Unique identifier for the user that owns the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owninguser")]
		public Microsoft.Xrm.Sdk.EntityReference OwningUser
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owninguser");
			}
		}
		
		/// <summary>
		/// Status of the Application
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecode")]
		public virtual CcOf_Application_StateCode? StateCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((CcOf_Application_StateCode?)(EntityOptionSetEnum.GetEnum(this, "statecode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("statecode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecodename")]
		public string StateCodename
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("statecode"))
				{
					return this.FormattedValues["statecode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Reason for the status of the Application
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscode")]
		public virtual CcOf_Application_StatusCode? StatusCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((CcOf_Application_StatusCode?)(EntityOptionSetEnum.GetEnum(this, "statuscode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("statuscode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscodename")]
		public string StatusCodename
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("statuscode"))
				{
					return this.FormattedValues["statuscode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timezoneruleversionnumber")]
		public System.Nullable<int> TimeZoneRuleVersionNumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("timezoneruleversionnumber");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("timezoneruleversionnumber", value);
			}
		}
		
		/// <summary>
		/// Unique identifier of the currency associated with the entity.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("transactioncurrencyid")]
		public Microsoft.Xrm.Sdk.EntityReference TransactionCurrencyId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("transactioncurrencyid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("transactioncurrencyid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("transactioncurrencyidname")]
		public string TransactionCurrencyIdName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("transactioncurrencyid"))
				{
					return this.FormattedValues["transactioncurrencyid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Time zone code that was in use when the record was created.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("utcconversiontimezonecode")]
		public System.Nullable<int> UtcConversionTimeZoneCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("utcconversiontimezonecode");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("utcconversiontimezonecode", value);
			}
		}
		
		/// <summary>
		/// Version Number
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("versionnumber")]
		public System.Nullable<long> VersionNumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<long>>("versionnumber");
			}
		}
		
		/// <summary>
		/// 1:N ccof_adjudication_ccfri_Application
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ccof_adjudication_ccfri_Application")]
		public System.Collections.Generic.IEnumerable<DataverseModel.CcOf_Adjudication_CcFri> CcOf_Adjudication_CcFri_Application
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<DataverseModel.CcOf_Adjudication_CcFri>("ccof_adjudication_ccfri_Application", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntities<DataverseModel.CcOf_Adjudication_CcFri>("ccof_adjudication_ccfri_Application", null, value);
			}
		}
		
		/// <summary>
		/// 1:N ccof_adjudication_ecewe_Application
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ccof_adjudication_ecewe_Application")]
		public System.Collections.Generic.IEnumerable<DataverseModel.CcOf_Adjudication_ECEWe> CcOf_Adjudication_ECEWe_Application
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<DataverseModel.CcOf_Adjudication_ECEWe>("ccof_adjudication_ecewe_Application", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntities<DataverseModel.CcOf_Adjudication_ECEWe>("ccof_adjudication_ecewe_Application", null, value);
			}
		}
		
		/// <summary>
		/// 1:N ccof_adjudication_ecewe_facility_Areyouapublic
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ccof_adjudication_ecewe_facility_Areyouapublic")]
		public System.Collections.Generic.IEnumerable<DataverseModel.CcOf_Adjudication_ECEWe_Facility> CcOf_Adjudication_ECEWe_Facility_AreYouAPublic
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<DataverseModel.CcOf_Adjudication_ECEWe_Facility>("ccof_adjudication_ecewe_facility_Areyouapublic", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntities<DataverseModel.CcOf_Adjudication_ECEWe_Facility>("ccof_adjudication_ecewe_facility_Areyouapublic", null, value);
			}
		}
		
		/// <summary>
		/// 1:N ccof_adjudication_ecewe_facility_ECEWEapplicat
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ccof_adjudication_ecewe_facility_ECEWEapplicat")]
		public System.Collections.Generic.IEnumerable<DataverseModel.CcOf_Adjudication_ECEWe_Facility> CcOf_Adjudication_ECEWe_Facility_ECEWeAppLiCat
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<DataverseModel.CcOf_Adjudication_ECEWe_Facility>("ccof_adjudication_ecewe_facility_ECEWEapplicat", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntities<DataverseModel.CcOf_Adjudication_ECEWe_Facility>("ccof_adjudication_ecewe_facility_ECEWEapplicat", null, value);
			}
		}
		
		/// <summary>
		/// 1:N ccof_application_basefunding_Application
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ccof_application_basefunding_Application")]
		public System.Collections.Generic.IEnumerable<DataverseModel.CcOf_Application_BaseFunding> CcOf_Application_BaseFunding_Application
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<DataverseModel.CcOf_Application_BaseFunding>("ccof_application_basefunding_Application", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntities<DataverseModel.CcOf_Application_BaseFunding>("ccof_application_basefunding_Application", null, value);
			}
		}
		
		/// <summary>
		/// 1:N ccof_applicationccfri_Application_ccof_ap
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ccof_applicationccfri_Application_ccof_ap")]
		public System.Collections.Generic.IEnumerable<DataverseModel.CcOf_ApplicationCcFri> CcOf_ApplicationCcFri_Application_CcOf_Ap
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<DataverseModel.CcOf_ApplicationCcFri>("ccof_applicationccfri_Application_ccof_ap", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntities<DataverseModel.CcOf_ApplicationCcFri>("ccof_applicationccfri_Application_ccof_ap", null, value);
			}
		}
		
		/// <summary>
		/// 1:N ccof_applicationstatushistory_application_ccof_application
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ccof_applicationstatushistory_application_ccof_application")]
		public System.Collections.Generic.IEnumerable<DataverseModel.CcOf_ApplicationStatusHistory> CcOf_ApplicationStatusHistory_Application_CcOf_Application
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<DataverseModel.CcOf_ApplicationStatusHistory>("ccof_applicationstatushistory_application_ccof_application", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntities<DataverseModel.CcOf_ApplicationStatusHistory>("ccof_applicationstatushistory_application_ccof_application", null, value);
			}
		}
		
		/// <summary>
		/// 1:N ccof_ccof_adjudication_ccfri_facility_App
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ccof_ccof_adjudication_ccfri_facility_App")]
		public System.Collections.Generic.IEnumerable<DataverseModel.CcOf_Adjudication_CcFri_Facility> CcOf_CcOf_Adjudication_CcFri_Facility_App
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<DataverseModel.CcOf_Adjudication_CcFri_Facility>("ccof_ccof_adjudication_ccfri_facility_App", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntities<DataverseModel.CcOf_Adjudication_CcFri_Facility>("ccof_ccof_adjudication_ccfri_facility_App", null, value);
			}
		}
		
		/// <summary>
		/// 1:N ccof_ccof_application_ccof_application_facility_document_application
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ccof_ccof_application_ccof_application_facility_document_application")]
		public System.Collections.Generic.IEnumerable<DataverseModel.CcOf_Application_Facility_Document> CcOf_CcOf_Application_CcOf_Application_Facility_Document_Application
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<DataverseModel.CcOf_Application_Facility_Document>("ccof_ccof_application_ccof_application_facility_document_application", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntities<DataverseModel.CcOf_Application_Facility_Document>("ccof_ccof_application_ccof_application_facility_document_application", null, value);
			}
		}
		
		/// <summary>
		/// 1:N ccof_ccof_application_ccof_applicationecewe_application
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ccof_ccof_application_ccof_applicationecewe_application")]
		public System.Collections.Generic.IEnumerable<DataverseModel.CcOf_ApplicationECEWe> CcOf_CcOf_Application_CcOf_ApplicationECEWe_Application
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<DataverseModel.CcOf_ApplicationECEWe>("ccof_ccof_application_ccof_applicationecewe_application", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntities<DataverseModel.CcOf_ApplicationECEWe>("ccof_ccof_application_ccof_applicationecewe_application", null, value);
			}
		}
		
		/// <summary>
		/// 1:N ccof_ccof_application_ccof_auditlog_ApplicationID
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ccof_ccof_application_ccof_auditlog_ApplicationID")]
		public System.Collections.Generic.IEnumerable<DataverseModel.CcOf_AuditLog> CcOf_CcOf_Application_CcOf_AuditLog_ApplicationId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<DataverseModel.CcOf_AuditLog>("ccof_ccof_application_ccof_auditlog_ApplicationID", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntities<DataverseModel.CcOf_AuditLog>("ccof_ccof_application_ccof_auditlog_ApplicationID", null, value);
			}
		}
		
		/// <summary>
		/// 1:N ccof_ccof_applicationsummary_Application_ccof_
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ccof_ccof_applicationsummary_Application_ccof_")]
		public System.Collections.Generic.IEnumerable<DataverseModel.CcOf_ApplicationSummary> CcOf_CcOf_ApplicationSummary_Application_CcOf_
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<DataverseModel.CcOf_ApplicationSummary>("ccof_ccof_applicationsummary_Application_ccof_", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntities<DataverseModel.CcOf_ApplicationSummary>("ccof_ccof_applicationsummary_Application_ccof_", null, value);
			}
		}
		
		/// <summary>
		/// 1:N ccof_ccof_change_request_Application_ccof_appl
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ccof_ccof_change_request_Application_ccof_appl")]
		public System.Collections.Generic.IEnumerable<DataverseModel.CcOf_Change_Request> CcOf_CcOf_Change_Request_Application_CcOf_AppL
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<DataverseModel.CcOf_Change_Request>("ccof_ccof_change_request_Application_ccof_appl", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntities<DataverseModel.CcOf_Change_Request>("ccof_ccof_change_request_Application_ccof_appl", null, value);
			}
		}
		
		/// <summary>
		/// 1:N ccof_ccof_unlock_history_ccof_application_ccof_application_changerequest_id
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ccof_ccof_unlock_history_ccof_application_ccof_application_changerequest_id")]
		public System.Collections.Generic.IEnumerable<DataverseModel.CcOf_Unlock_History> CcOf_CcOf_Unlock_History_CcOf_Application_CcOf_Application_ChangeRequest_Id
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<DataverseModel.CcOf_Unlock_History>("ccof_ccof_unlock_history_ccof_application_ccof_application_changerequest_id", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntities<DataverseModel.CcOf_Unlock_History>("ccof_ccof_unlock_history_ccof_application_ccof_application_changerequest_id", null, value);
			}
		}
		
		/// <summary>
		/// 1:N ccof_funding_agreement_application_ccof_application
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ccof_funding_agreement_application_ccof_application")]
		public System.Collections.Generic.IEnumerable<DataverseModel.CcOf_Funding_Agreement> CcOf_Funding_Agreement_Application_CcOf_Application
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<DataverseModel.CcOf_Funding_Agreement>("ccof_funding_agreement_application_ccof_application", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntities<DataverseModel.CcOf_Funding_Agreement>("ccof_funding_agreement_application_ccof_application", null, value);
			}
		}
		
		/// <summary>
		/// N:1 business_unit_ccof_application
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("business_unit_ccof_application")]
		public DataverseModel.BusinessUnit Business_Unit_CcOf_Application
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<DataverseModel.BusinessUnit>("business_unit_ccof_application", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntity<DataverseModel.BusinessUnit>("business_unit_ccof_application", null, value);
			}
		}
		
		/// <summary>
		/// N:1 ccof_application_ProgramYear
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_programyear")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ccof_application_ProgramYear")]
		public DataverseModel.CcOf_Program_Year CcOf_Application_ProgramYear
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<DataverseModel.CcOf_Program_Year>("ccof_application_ProgramYear", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntity<DataverseModel.CcOf_Program_Year>("ccof_application_ProgramYear", null, value);
			}
		}
		
		/// <summary>
		/// N:1 ccof_ccof_application_Organization_account
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_organization")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ccof_ccof_application_Organization_account")]
		public DataverseModel.Account CcOf_CcOf_Application_Organization_Account
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<DataverseModel.Account>("ccof_ccof_application_Organization_account", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntity<DataverseModel.Account>("ccof_ccof_application_Organization_account", null, value);
			}
		}
		
		/// <summary>
		/// N:1 lk_ccof_application_createdby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_ccof_application_createdby")]
		public DataverseModel.SystemUser Lk_CcOf_Application_CreatedBy
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<DataverseModel.SystemUser>("lk_ccof_application_createdby", null);
			}
		}
		
		/// <summary>
		/// N:1 lk_ccof_application_createdonbehalfby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_ccof_application_createdonbehalfby")]
		public DataverseModel.SystemUser Lk_CcOf_Application_CreatedOnBehalfBy
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<DataverseModel.SystemUser>("lk_ccof_application_createdonbehalfby", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntity<DataverseModel.SystemUser>("lk_ccof_application_createdonbehalfby", null, value);
			}
		}
		
		/// <summary>
		/// N:1 lk_ccof_application_modifiedby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_ccof_application_modifiedby")]
		public DataverseModel.SystemUser Lk_CcOf_Application_ModifiedBy
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<DataverseModel.SystemUser>("lk_ccof_application_modifiedby", null);
			}
		}
		
		/// <summary>
		/// N:1 lk_ccof_application_modifiedonbehalfby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_ccof_application_modifiedonbehalfby")]
		public DataverseModel.SystemUser Lk_CcOf_Application_ModifiedOnBehalfBy
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<DataverseModel.SystemUser>("lk_ccof_application_modifiedonbehalfby", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntity<DataverseModel.SystemUser>("lk_ccof_application_modifiedonbehalfby", null, value);
			}
		}
		
		/// <summary>
		/// N:1 TransactionCurrency_ccof_Application
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("transactioncurrencyid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("TransactionCurrency_ccof_Application")]
		public DataverseModel.TransactionCurrency TransactionCurrency_CcOf_Application
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<DataverseModel.TransactionCurrency>("TransactionCurrency_ccof_Application", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntity<DataverseModel.TransactionCurrency>("TransactionCurrency_ccof_Application", null, value);
			}
		}
		
		/// <summary>
		/// N:1 user_ccof_application
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owninguser")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("user_ccof_application")]
		public DataverseModel.SystemUser User_CcOf_Application
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<DataverseModel.SystemUser>("user_ccof_application", null);
			}
		}
		
		/// <summary>
		/// Constructor for populating via LINQ queries given a LINQ anonymous type
		/// <param name="anonymousType">LINQ anonymous type.</param>
		/// </summary>
		[System.Diagnostics.DebuggerNonUserCode()]
		public CcOf_Application(object anonymousType) : 
				this()
		{
            foreach (var p in anonymousType.GetType().GetProperties())
            {
                var value = p.GetValue(anonymousType, null);
                var name = p.Name.ToLower();
            
                if (value != null && name.EndsWith("enum") && value.GetType().BaseType == typeof(System.Enum))
                {
                    value = new Microsoft.Xrm.Sdk.OptionSetValue((int) value);
                    name = name.Remove(name.Length - "enum".Length);
                }
            
                switch (name)
                {
                    case "id":
                        base.Id = (System.Guid)value;
                        Attributes["ccof_applicationid"] = base.Id;
                        break;
                    case "ccof_applicationid":
                        var id = (System.Nullable<System.Guid>) value;
                        if(id == null){ continue; }
                        base.Id = id.Value;
                        Attributes[name] = base.Id;
                        break;
                    case "formattedvalues":
                        // Add Support for FormattedValues
                        FormattedValues.AddRange((Microsoft.Xrm.Sdk.FormattedValueCollection)value);
                        break;
                    default:
                        Attributes[name] = value;
                        break;
                }
            }
		}
	}
}
#pragma warning restore CS1591
