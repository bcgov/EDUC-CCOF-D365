#pragma warning disable CS1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DataverseModel
{
	
	
	/// <summary>
	/// Used Transaction Currency entity
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	public enum TransactionCurrency_CurrencyType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Custom", 1)]
		Custom = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("System", 0)]
		System = 0,
	}
	
	/// <summary>
	/// Status of the transaction currency.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	public enum TransactionCurrency_StateCode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Active", 0)]
		Active = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Inactive", 1)]
		Inactive = 1,
	}
	
	/// <summary>
	/// Reason for the status of the transaction currency.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	public enum TransactionCurrency_StatusCode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Active", 0)]
		Active = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Inactive", 1)]
		Inactive = 2,
	}
	
	/// <summary>
	/// Currency in which a financial transaction is carried out.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("transactioncurrency")]
	public partial class TransactionCurrency : Microsoft.Xrm.Sdk.Entity
	{
		
		/// <summary>
		/// Available fields, a the time of codegen, for the transactioncurrency entity
		/// </summary>
		public partial class Fields
		{
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string CurrencyName = "currencyname";
			public const string CurrencyPrecision = "currencyprecision";
			public const string CurrencySymbol = "currencysymbol";
			public const string CurrencyType = "currencytype";
			public const string CurrencyTypeName = "currencytypename";
			public const string EntityImage = "entityimage";
			public const string EntityImage_Timestamp = "entityimage_timestamp";
			public const string EntityImage_Url = "entityimage_url";
			public const string EntityImageId = "entityimageid";
			public const string ExchangerAte = "exchangerate";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string IsoCurrencyCode = "isocurrencycode";
			public const string Lk_TransactionCurrency_CreatedOnBehalfBy = "lk_transactioncurrency_createdonbehalfby";
			public const string Lk_TransactionCurrency_ModifiedOnBehalfBy = "lk_transactioncurrency_modifiedonbehalfby";
			public const string Lk_TransactionCurrencyBase_CreatedBy = "lk_transactioncurrencybase_createdby";
			public const string Lk_TransactionCurrencyBase_ModifiedBy = "lk_transactioncurrencybase_modifiedby";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string OrganizationId = "organizationid";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string StateCode = "statecode";
			public const string StateCodename = "statecodename";
			public const string StatusCode = "statuscode";
			public const string StatusCodename = "statuscodename";
			public const string TransactionCurrency_Account = "TransactionCurrency_Account";
			public const string TransactionCurrency_ActivityPointer = "TransactionCurrency_ActivityPointer";
			public const string TransactionCurrency_BusinessUnit = "TransactionCurrency_BusinessUnit";
			public const string TransactionCurrency_CcOf_Adjudication_CcFri_Facility = "TransactionCurrency_CcOf_Adjudication_CcFri_Facility";
			public const string TransactionCurrency_CcOf_Application = "TransactionCurrency_CcOf_Application";
			public const string TransactionCurrency_CcOf_Application_CcFri_ChildCareCategory = "TransactionCurrency_CcOf_Application_CcFri_ChildCareCategory";
			public const string TransactionCurrency_CcOf_ApplicationCcFri = "TransactionCurrency_CcOf_ApplicationCcFri";
			public const string TransactionCurrency_CcOf_ApProvable_Fee_Schedule = "TransactionCurrency_CcOf_ApProvable_Fee_Schedule";
			public const string TransactionCurrency_CcOf_CcFri_Facility_Allowable_Amount = "TransactionCurrency_CcOf_CcFri_Facility_Allowable_Amount";
			public const string TransactionCurrency_CcOf_CcFri_Facility_Allowable_Amount_MTfI = "TransactionCurrency_CcOf_CcFri_Facility_Allowable_Amount_MTfI";
			public const string TransactionCurrency_CcOf_CcFri_Facility_DCSw = "TransactionCurrency_CcOf_CcFri_Facility_DCSw";
			public const string TransactionCurrency_CcOf_CcFri_Facility_DCSw_24_Month = "TransactionCurrency_CcOf_CcFri_Facility_DCSw_24_Month";
			public const string TransactionCurrency_CcOf_CcFri_Facility_DCSw_MTfI = "TransactionCurrency_CcOf_CcFri_Facility_DCSw_MTfI";
			public const string TransactionCurrency_CcOf_CcFri_Facility_EC_24Month = "TransactionCurrency_CcOf_CcFri_Facility_EC_24Month";
			public const string TransactionCurrency_CcOf_CcFri_Facility_EX_Circumstance_MTfI = "TransactionCurrency_CcOf_CcFri_Facility_EX_Circumstance_MTfI";
			public const string TransactionCurrency_CcOf_CcFri_Facility_Exceptional_Circumstance = "TransactionCurrency_CcOf_CcFri_Facility_Exceptional_Circumstance";
			public const string TransactionCurrency_CcOf_CcFri_Facility_Fee_Increase_MTfI = "TransactionCurrency_CcOf_CcFri_Facility_Fee_Increase_MTfI";
			public const string TransactionCurrency_CcOf_CcFri_Facility_Parent_Fee = "TransactionCurrency_CcOf_CcFri_Facility_Parent_Fee";
			public const string TransactionCurrency_CcOf_CcFri_Facility_Priority_ServiceExp_MTfI = "TransactionCurrency_CcOf_CcFri_Facility_Priority_ServiceExp_MTfI";
			public const string TransactionCurrency_CcOf_CcFri_Facility_PriorityServiceExpansion = "TransactionCurrency_CcOf_CcFri_Facility_PriorityServiceExpansion";
			public const string TransactionCurrency_CcOf_CcFriFacilityAllowableAmount_24Month = "TransactionCurrency_CcOf_CcFriFacilityAllowableAmount_24Month";
			public const string TransactionCurrency_CcOf_CcFriFacilityFeeIncrease24Month = "TransactionCurrency_CcOf_CcFriFacilityFeeIncrease24Month";
			public const string TransactionCurrency_CcOf_CcFriFacilityPriorityServiceExpansion24 = "TransactionCurrency_CcOf_CcFriFacilityPriorityServiceExpansion24";
			public const string TransactionCurrency_CcOf_Change_Request_MTfI = "TransactionCurrency_CcOf_Change_Request_MTfI";
			public const string TransactionCurrency_CcOf_ECE_Wage = "TransactionCurrency_CcOf_ECE_Wage";
			public const string TransactionCurrency_CcOf_Fee_Benchmark_SdA = "TransactionCurrency_CcOf_Fee_Benchmark_SdA";
			public const string TransactionCurrency_CcOf_Fee_Region = "TransactionCurrency_CcOf_Fee_Region";
			public const string TransactionCurrency_CcOf_Funding_Agreement = "TransactionCurrency_CcOf_Funding_Agreement";
			public const string TransactionCurrency_CcOf_Median_Fee_SdA = "TransactionCurrency_CcOf_Median_Fee_SdA";
			public const string TransactionCurrency_CcOf_MonthlyEnrollmentReport = "TransactionCurrency_CcOf_MonthlyEnrollmentReport";
			public const string TransactionCurrency_CcOf_Parent_Fees = "TransactionCurrency_CcOf_Parent_Fees";
			public const string TransactionCurrency_CcOf_Rate = "TransactionCurrency_CcOf_Rate";
			public const string TransactionCurrency_CcOf_RfI_PFI_DCS_Wi_Detail = "TransactionCurrency_CcOf_RfI_PFI_DCS_Wi_Detail";
			public const string TransactionCurrency_CcOf_RfI_PFI_Fee_History_Detail = "TransactionCurrency_CcOf_RfI_PFI_Fee_History_Detail";
			public const string TransactionCurrency_CcOf_RfI_PFI_Other_Funding = "TransactionCurrency_CcOf_RfI_PFI_Other_Funding";
			public const string TransactionCurrency_CcOf_RfIpFIExpenseInfo = "TransactionCurrency_CcOf_RfIpFIExpenseInfo";
			public const string TransactionCurrency_CcOf_RfIpFIServiceExpansionDetail = "TransactionCurrency_CcOf_RfIpFIServiceExpansionDetail";
			public const string TransactionCurrency_CcOf_RfIpFIServiceExpansionIndigenousCommunity = "TransactionCurrency_CcOf_RfIpFIServiceExpansionIndigenousCommunity";
			public const string TransactionCurrency_Contact = "TransactionCurrency_Contact";
			public const string TransactionCurrency_Email = "TransactionCurrency_Email";
			public const string TransactionCurrency_OfM_Payment = "TransactionCurrency_OfM_Payment";
			public const string TransactionCurrency_SystemUser = "TransactionCurrency_SystemUser";
			public const string TransactionCurrencyId = "transactioncurrencyid";
			public const string Id = "transactioncurrencyid";
			public const string VersionNumber = "versionnumber";
		}
		
		[System.Diagnostics.DebuggerNonUserCode()]
		public TransactionCurrency(System.Guid id) : 
				base(EntityLogicalName, id)
		{
		}
		
		[System.Diagnostics.DebuggerNonUserCode()]
		public TransactionCurrency(string keyName, object keyValue) : 
				base(EntityLogicalName, keyName, keyValue)
		{
		}
		
		[System.Diagnostics.DebuggerNonUserCode()]
		public TransactionCurrency(Microsoft.Xrm.Sdk.KeyAttributeCollection keyAttributes) : 
				base(EntityLogicalName, keyAttributes)
		{
		}
		
		/// <summary>
		/// Default Constructor.
		/// </summary>
		[System.Diagnostics.DebuggerNonUserCode()]
		public TransactionCurrency() : 
				base(EntityLogicalName)
		{
		}
		
		public const string PrimaryIdAttribute = "transactioncurrencyid";
		
		public const string PrimaryNameAttribute = "currencyname";
		
		public const string EntitySchemaName = "TransactionCurrency";
		
		public const string EntityLogicalName = "transactioncurrency";
		
		public const string EntityLogicalCollectionName = "transactioncurrencies";
		
		public const string EntitySetName = "transactioncurrencies";
		
		/// <summary>
		/// Unique identifier of the user who created the transaction currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedBy
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdby");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyname")]
		public string CreatedByName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("createdby"))
				{
					return this.FormattedValues["createdby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyyominame")]
		public string CreatedByYomiName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("createdby"))
				{
					return this.FormattedValues["createdby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Date and time when the transaction currency was created.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdon")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("createdon");
			}
		}
		
		/// <summary>
		/// Unique identifier of the delegate user who created the transactioncurrency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedOnBehalfBy
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdonbehalfby");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("createdonbehalfby", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyname")]
		public string CreatedOnBehalfByName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("createdonbehalfby"))
				{
					return this.FormattedValues["createdonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyyominame")]
		public string CreatedOnBehalfByYomiName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("createdonbehalfby"))
				{
					return this.FormattedValues["createdonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Name of the transaction currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("currencyname")]
		public string CurrencyName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("currencyname");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("currencyname", value);
			}
		}
		
		/// <summary>
		/// Number of decimal places that can be used for currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("currencyprecision")]
		public System.Nullable<int> CurrencyPrecision
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("currencyprecision");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("currencyprecision", value);
			}
		}
		
		/// <summary>
		/// Symbol for the transaction currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("currencysymbol")]
		public string CurrencySymbol
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("currencysymbol");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("currencysymbol", value);
			}
		}
		
		/// <summary>
		/// Currency type that can be used for new currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("currencytype")]
		public virtual TransactionCurrency_CurrencyType? CurrencyType
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((TransactionCurrency_CurrencyType?)(EntityOptionSetEnum.GetEnum(this, "currencytype")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("currencytype", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("currencytypename")]
		public string CurrencyTypeName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("currencytype"))
				{
					return this.FormattedValues["currencytype"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// The default image for the entity.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("entityimage")]
		public byte[] EntityImage
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<byte[]>("entityimage");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("entityimage", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("entityimage_timestamp")]
		public System.Nullable<long> EntityImage_Timestamp
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<long>>("entityimage_timestamp");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("entityimage_url")]
		public string EntityImage_Url
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("entityimage_url");
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("entityimageid")]
		public System.Nullable<System.Guid> EntityImageId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("entityimageid");
			}
		}
		
		/// <summary>
		/// Exchange rate between the transaction currency and the base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("exchangerate")]
		public System.Nullable<decimal> ExchangerAte
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<decimal>>("exchangerate");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("exchangerate", value);
			}
		}
		
		/// <summary>
		/// Unique identifier of the data import or data migration that created this record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("importsequencenumber")]
		public System.Nullable<int> ImportSequenceNumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("importsequencenumber");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("importsequencenumber", value);
			}
		}
		
		/// <summary>
		/// ISO currency code for the transaction currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isocurrencycode")]
		public string IsoCurrencyCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("isocurrencycode");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("isocurrencycode", value);
			}
		}
		
		/// <summary>
		/// Unique identifier of the user who last modified the transaction currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedBy
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedby");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyname")]
		public string ModifiedByName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("modifiedby"))
				{
					return this.FormattedValues["modifiedby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyyominame")]
		public string ModifiedByYomiName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("modifiedby"))
				{
					return this.FormattedValues["modifiedby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Date and time when the transaction currency was last modified.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedon")]
		public System.Nullable<System.DateTime> ModifiedOn
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("modifiedon");
			}
		}
		
		/// <summary>
		/// Unique identifier of the delegate user who last modified the transactioncurrency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedOnBehalfBy
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedonbehalfby");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("modifiedonbehalfby", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyname")]
		public string ModifiedOnBehalfByName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("modifiedonbehalfby"))
				{
					return this.FormattedValues["modifiedonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyyominame")]
		public string ModifiedOnBehalfByYomiName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("modifiedonbehalfby"))
				{
					return this.FormattedValues["modifiedonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Unique identifier of the organization associated with the transaction currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("organizationid")]
		public Microsoft.Xrm.Sdk.EntityReference OrganizationId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("organizationid");
			}
		}
		
		/// <summary>
		/// Date and time that the record was migrated.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("overriddencreatedon")]
		public System.Nullable<System.DateTime> OverriddenCreatedOn
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("overriddencreatedon");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("overriddencreatedon", value);
			}
		}
		
		/// <summary>
		/// Status of the transaction currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecode")]
		public virtual TransactionCurrency_StateCode? StateCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((TransactionCurrency_StateCode?)(EntityOptionSetEnum.GetEnum(this, "statecode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("statecode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecodename")]
		public string StateCodename
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("statecode"))
				{
					return this.FormattedValues["statecode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Reason for the status of the transaction currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscode")]
		public virtual TransactionCurrency_StatusCode? StatusCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((TransactionCurrency_StatusCode?)(EntityOptionSetEnum.GetEnum(this, "statuscode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("statuscode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscodename")]
		public string StatusCodename
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("statuscode"))
				{
					return this.FormattedValues["statuscode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Unique identifier of the transaction currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("transactioncurrencyid")]
		public System.Nullable<System.Guid> TransactionCurrencyId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("transactioncurrencyid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("transactioncurrencyid", value);
				if (value.HasValue)
				{
					base.Id = value.Value;
				}
				else
				{
					base.Id = System.Guid.Empty;
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("transactioncurrencyid")]
		public override System.Guid Id
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return base.Id;
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.TransactionCurrencyId = value;
			}
		}
		
		/// <summary>
		/// Version number of the transaction currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("versionnumber")]
		public System.Nullable<long> VersionNumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<long>>("versionnumber");
			}
		}
		
		/// <summary>
		/// 1:N transactioncurrency_account
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("transactioncurrency_account")]
		public System.Collections.Generic.IEnumerable<DataverseModel.Account> TransactionCurrency_Account
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<DataverseModel.Account>("transactioncurrency_account", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntities<DataverseModel.Account>("transactioncurrency_account", null, value);
			}
		}
		
		/// <summary>
		/// 1:N TransactionCurrency_ActivityPointer
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("TransactionCurrency_ActivityPointer")]
		public System.Collections.Generic.IEnumerable<DataverseModel.ActivityPointer> TransactionCurrency_ActivityPointer
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<DataverseModel.ActivityPointer>("TransactionCurrency_ActivityPointer", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntities<DataverseModel.ActivityPointer>("TransactionCurrency_ActivityPointer", null, value);
			}
		}
		
		/// <summary>
		/// 1:N TransactionCurrency_BusinessUnit
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("TransactionCurrency_BusinessUnit")]
		public System.Collections.Generic.IEnumerable<DataverseModel.BusinessUnit> TransactionCurrency_BusinessUnit
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<DataverseModel.BusinessUnit>("TransactionCurrency_BusinessUnit", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntities<DataverseModel.BusinessUnit>("TransactionCurrency_BusinessUnit", null, value);
			}
		}
		
		/// <summary>
		/// 1:N TransactionCurrency_ccof_Adjudication_CCFRI_Facility
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("TransactionCurrency_ccof_Adjudication_CCFRI_Facility")]
		public System.Collections.Generic.IEnumerable<DataverseModel.CcOf_Adjudication_CcFri_Facility> TransactionCurrency_CcOf_Adjudication_CcFri_Facility
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<DataverseModel.CcOf_Adjudication_CcFri_Facility>("TransactionCurrency_ccof_Adjudication_CCFRI_Facility", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntities<DataverseModel.CcOf_Adjudication_CcFri_Facility>("TransactionCurrency_ccof_Adjudication_CCFRI_Facility", null, value);
			}
		}
		
		/// <summary>
		/// 1:N TransactionCurrency_ccof_Application
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("TransactionCurrency_ccof_Application")]
		public System.Collections.Generic.IEnumerable<DataverseModel.CcOf_Application> TransactionCurrency_CcOf_Application
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<DataverseModel.CcOf_Application>("TransactionCurrency_ccof_Application", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntities<DataverseModel.CcOf_Application>("TransactionCurrency_ccof_Application", null, value);
			}
		}
		
		/// <summary>
		/// 1:N TransactionCurrency_ccof_Application_CCFRI_ChildcareCategory
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("TransactionCurrency_ccof_Application_CCFRI_ChildcareCategory")]
		public System.Collections.Generic.IEnumerable<DataverseModel.CcOf_Application_CcFri_ChildCareCategory> TransactionCurrency_CcOf_Application_CcFri_ChildCareCategory
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<DataverseModel.CcOf_Application_CcFri_ChildCareCategory>("TransactionCurrency_ccof_Application_CCFRI_ChildcareCategory", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntities<DataverseModel.CcOf_Application_CcFri_ChildCareCategory>("TransactionCurrency_ccof_Application_CCFRI_ChildcareCategory", null, value);
			}
		}
		
		/// <summary>
		/// 1:N TransactionCurrency_ccof_applicationccfri
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("TransactionCurrency_ccof_applicationccfri")]
		public System.Collections.Generic.IEnumerable<DataverseModel.CcOf_ApplicationCcFri> TransactionCurrency_CcOf_ApplicationCcFri
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<DataverseModel.CcOf_ApplicationCcFri>("TransactionCurrency_ccof_applicationccfri", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntities<DataverseModel.CcOf_ApplicationCcFri>("TransactionCurrency_ccof_applicationccfri", null, value);
			}
		}
		
		/// <summary>
		/// 1:N TransactionCurrency_ccof_approvable_fee_schedule
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("TransactionCurrency_ccof_approvable_fee_schedule")]
		public System.Collections.Generic.IEnumerable<DataverseModel.CcOf_ApProvable_Fee_Schedule> TransactionCurrency_CcOf_ApProvable_Fee_Schedule
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<DataverseModel.CcOf_ApProvable_Fee_Schedule>("TransactionCurrency_ccof_approvable_fee_schedule", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntities<DataverseModel.CcOf_ApProvable_Fee_Schedule>("TransactionCurrency_ccof_approvable_fee_schedule", null, value);
			}
		}
		
		/// <summary>
		/// 1:N TransactionCurrency_ccof_CCFRI_Facility_Allowable_Amount
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("TransactionCurrency_ccof_CCFRI_Facility_Allowable_Amount")]
		public System.Collections.Generic.IEnumerable<DataverseModel.CcOf_CcFri_Facility_Allowable_Amount> TransactionCurrency_CcOf_CcFri_Facility_Allowable_Amount
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<DataverseModel.CcOf_CcFri_Facility_Allowable_Amount>("TransactionCurrency_ccof_CCFRI_Facility_Allowable_Amount", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntities<DataverseModel.CcOf_CcFri_Facility_Allowable_Amount>("TransactionCurrency_ccof_CCFRI_Facility_Allowable_Amount", null, value);
			}
		}
		
		/// <summary>
		/// 1:N TransactionCurrency_ccof_CCFRI_Facility_Allowable_Amount_MTFI
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("TransactionCurrency_ccof_CCFRI_Facility_Allowable_Amount_MTFI")]
		public System.Collections.Generic.IEnumerable<DataverseModel.CcOf_CcFri_Facility_Allowable_Amount_MTfI> TransactionCurrency_CcOf_CcFri_Facility_Allowable_Amount_MTfI
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<DataverseModel.CcOf_CcFri_Facility_Allowable_Amount_MTfI>("TransactionCurrency_ccof_CCFRI_Facility_Allowable_Amount_MTFI", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntities<DataverseModel.CcOf_CcFri_Facility_Allowable_Amount_MTfI>("TransactionCurrency_ccof_CCFRI_Facility_Allowable_Amount_MTFI", null, value);
			}
		}
		
		/// <summary>
		/// 1:N TransactionCurrency_ccof_CCFRI_Facility_DCSW
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("TransactionCurrency_ccof_CCFRI_Facility_DCSW")]
		public System.Collections.Generic.IEnumerable<DataverseModel.CcOf_CcFri_Facility_DCSw> TransactionCurrency_CcOf_CcFri_Facility_DCSw
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<DataverseModel.CcOf_CcFri_Facility_DCSw>("TransactionCurrency_ccof_CCFRI_Facility_DCSW", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntities<DataverseModel.CcOf_CcFri_Facility_DCSw>("TransactionCurrency_ccof_CCFRI_Facility_DCSW", null, value);
			}
		}
		
		/// <summary>
		/// 1:N TransactionCurrency_ccof_CCFRI_Facility_DCSW_24_Month
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("TransactionCurrency_ccof_CCFRI_Facility_DCSW_24_Month")]
		public System.Collections.Generic.IEnumerable<DataverseModel.CcOf_CcFri_Facility_DCSw_24_Month> TransactionCurrency_CcOf_CcFri_Facility_DCSw_24_Month
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<DataverseModel.CcOf_CcFri_Facility_DCSw_24_Month>("TransactionCurrency_ccof_CCFRI_Facility_DCSW_24_Month", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntities<DataverseModel.CcOf_CcFri_Facility_DCSw_24_Month>("TransactionCurrency_ccof_CCFRI_Facility_DCSW_24_Month", null, value);
			}
		}
		
		/// <summary>
		/// 1:N TransactionCurrency_ccof_CCFRI_Facility_DCSW_MTFI
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("TransactionCurrency_ccof_CCFRI_Facility_DCSW_MTFI")]
		public System.Collections.Generic.IEnumerable<DataverseModel.CcOf_CcFri_Facility_DCSw_MTfI> TransactionCurrency_CcOf_CcFri_Facility_DCSw_MTfI
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<DataverseModel.CcOf_CcFri_Facility_DCSw_MTfI>("TransactionCurrency_ccof_CCFRI_Facility_DCSW_MTFI", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntities<DataverseModel.CcOf_CcFri_Facility_DCSw_MTfI>("TransactionCurrency_ccof_CCFRI_Facility_DCSW_MTFI", null, value);
			}
		}
		
		/// <summary>
		/// 1:N TransactionCurrency_ccof_CCFRI_Facility_EC_24Month
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("TransactionCurrency_ccof_CCFRI_Facility_EC_24Month")]
		public System.Collections.Generic.IEnumerable<DataverseModel.CcOf_CcFri_Facility_EC_24Month> TransactionCurrency_CcOf_CcFri_Facility_EC_24Month
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<DataverseModel.CcOf_CcFri_Facility_EC_24Month>("TransactionCurrency_ccof_CCFRI_Facility_EC_24Month", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntities<DataverseModel.CcOf_CcFri_Facility_EC_24Month>("TransactionCurrency_ccof_CCFRI_Facility_EC_24Month", null, value);
			}
		}
		
		/// <summary>
		/// 1:N TransactionCurrency_ccof_CCFRI_Facility_Ex_Circumstance_MTFI
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("TransactionCurrency_ccof_CCFRI_Facility_Ex_Circumstance_MTFI")]
		public System.Collections.Generic.IEnumerable<DataverseModel.CcOf_CcFri_Facility_EX_Circumstance_MTfI> TransactionCurrency_CcOf_CcFri_Facility_EX_Circumstance_MTfI
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<DataverseModel.CcOf_CcFri_Facility_EX_Circumstance_MTfI>("TransactionCurrency_ccof_CCFRI_Facility_Ex_Circumstance_MTFI", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntities<DataverseModel.CcOf_CcFri_Facility_EX_Circumstance_MTfI>("TransactionCurrency_ccof_CCFRI_Facility_Ex_Circumstance_MTFI", null, value);
			}
		}
		
		/// <summary>
		/// 1:N TransactionCurrency_ccof_CCFRI_Facility_Exceptional_Circumstance
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("TransactionCurrency_ccof_CCFRI_Facility_Exceptional_Circumstance")]
		public System.Collections.Generic.IEnumerable<DataverseModel.CcOf_CcFri_Facility_Exceptional_Circumstance> TransactionCurrency_CcOf_CcFri_Facility_Exceptional_Circumstance
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<DataverseModel.CcOf_CcFri_Facility_Exceptional_Circumstance>("TransactionCurrency_ccof_CCFRI_Facility_Exceptional_Circumstance", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntities<DataverseModel.CcOf_CcFri_Facility_Exceptional_Circumstance>("TransactionCurrency_ccof_CCFRI_Facility_Exceptional_Circumstance", null, value);
			}
		}
		
		/// <summary>
		/// 1:N TransactionCurrency_ccof_CCFRI_Facility_Fee_Increase_MTFI
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("TransactionCurrency_ccof_CCFRI_Facility_Fee_Increase_MTFI")]
		public System.Collections.Generic.IEnumerable<DataverseModel.CcOf_CcFri_Facility_Fee_Increase_MTfI> TransactionCurrency_CcOf_CcFri_Facility_Fee_Increase_MTfI
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<DataverseModel.CcOf_CcFri_Facility_Fee_Increase_MTfI>("TransactionCurrency_ccof_CCFRI_Facility_Fee_Increase_MTFI", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntities<DataverseModel.CcOf_CcFri_Facility_Fee_Increase_MTfI>("TransactionCurrency_ccof_CCFRI_Facility_Fee_Increase_MTFI", null, value);
			}
		}
		
		/// <summary>
		/// 1:N TransactionCurrency_ccof_CCFRI_Facility_Parent_Fee
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("TransactionCurrency_ccof_CCFRI_Facility_Parent_Fee")]
		public System.Collections.Generic.IEnumerable<DataverseModel.CcOf_CcFri_Facility_Parent_Fee> TransactionCurrency_CcOf_CcFri_Facility_Parent_Fee
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<DataverseModel.CcOf_CcFri_Facility_Parent_Fee>("TransactionCurrency_ccof_CCFRI_Facility_Parent_Fee", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntities<DataverseModel.CcOf_CcFri_Facility_Parent_Fee>("TransactionCurrency_ccof_CCFRI_Facility_Parent_Fee", null, value);
			}
		}
		
		/// <summary>
		/// 1:N TransactionCurrency_ccof_CCFRI_Facility_Priority_ServiceExp_MTFI
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("TransactionCurrency_ccof_CCFRI_Facility_Priority_ServiceExp_MTFI")]
		public System.Collections.Generic.IEnumerable<DataverseModel.CcOf_CcFri_Facility_Priority_ServiceExp_MTfI> TransactionCurrency_CcOf_CcFri_Facility_Priority_ServiceExp_MTfI
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<DataverseModel.CcOf_CcFri_Facility_Priority_ServiceExp_MTfI>("TransactionCurrency_ccof_CCFRI_Facility_Priority_ServiceExp_MTFI", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntities<DataverseModel.CcOf_CcFri_Facility_Priority_ServiceExp_MTfI>("TransactionCurrency_ccof_CCFRI_Facility_Priority_ServiceExp_MTFI", null, value);
			}
		}
		
		/// <summary>
		/// 1:N TransactionCurrency_ccof_CCFRI_Facility_PriorityServiceExpansion
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("TransactionCurrency_ccof_CCFRI_Facility_PriorityServiceExpansion")]
		public System.Collections.Generic.IEnumerable<DataverseModel.CcOf_CcFri_Facility_PriorityServiceExpansion> TransactionCurrency_CcOf_CcFri_Facility_PriorityServiceExpansion
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<DataverseModel.CcOf_CcFri_Facility_PriorityServiceExpansion>("TransactionCurrency_ccof_CCFRI_Facility_PriorityServiceExpansion", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntities<DataverseModel.CcOf_CcFri_Facility_PriorityServiceExpansion>("TransactionCurrency_ccof_CCFRI_Facility_PriorityServiceExpansion", null, value);
			}
		}
		
		/// <summary>
		/// 1:N TransactionCurrency_ccof_CCFRIFacilityAllowableAmount_24Month
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("TransactionCurrency_ccof_CCFRIFacilityAllowableAmount_24Month")]
		public System.Collections.Generic.IEnumerable<DataverseModel.CcOf_CcFriFacilityAllowableAmount_24Month> TransactionCurrency_CcOf_CcFriFacilityAllowableAmount_24Month
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<DataverseModel.CcOf_CcFriFacilityAllowableAmount_24Month>("TransactionCurrency_ccof_CCFRIFacilityAllowableAmount_24Month", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntities<DataverseModel.CcOf_CcFriFacilityAllowableAmount_24Month>("TransactionCurrency_ccof_CCFRIFacilityAllowableAmount_24Month", null, value);
			}
		}
		
		/// <summary>
		/// 1:N TransactionCurrency_ccof_CCFRIFacilityFeeIncrease24Month
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("TransactionCurrency_ccof_CCFRIFacilityFeeIncrease24Month")]
		public System.Collections.Generic.IEnumerable<DataverseModel.CcOf_CcFriFacilityFeeIncrease24Month> TransactionCurrency_CcOf_CcFriFacilityFeeIncrease24Month
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<DataverseModel.CcOf_CcFriFacilityFeeIncrease24Month>("TransactionCurrency_ccof_CCFRIFacilityFeeIncrease24Month", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntities<DataverseModel.CcOf_CcFriFacilityFeeIncrease24Month>("TransactionCurrency_ccof_CCFRIFacilityFeeIncrease24Month", null, value);
			}
		}
		
		/// <summary>
		/// 1:N TransactionCurrency_ccof_CCFRIFacilityPriorityServiceExpansion24
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("TransactionCurrency_ccof_CCFRIFacilityPriorityServiceExpansion24")]
		public System.Collections.Generic.IEnumerable<DataverseModel.CcOf_CcFriFacilityPriorityServiceExpansion24> TransactionCurrency_CcOf_CcFriFacilityPriorityServiceExpansion24
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<DataverseModel.CcOf_CcFriFacilityPriorityServiceExpansion24>("TransactionCurrency_ccof_CCFRIFacilityPriorityServiceExpansion24", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntities<DataverseModel.CcOf_CcFriFacilityPriorityServiceExpansion24>("TransactionCurrency_ccof_CCFRIFacilityPriorityServiceExpansion24", null, value);
			}
		}
		
		/// <summary>
		/// 1:N TransactionCurrency_ccof_Change_Request_MTFI
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("TransactionCurrency_ccof_Change_Request_MTFI")]
		public System.Collections.Generic.IEnumerable<DataverseModel.CcOf_Change_Request_MTfI> TransactionCurrency_CcOf_Change_Request_MTfI
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<DataverseModel.CcOf_Change_Request_MTfI>("TransactionCurrency_ccof_Change_Request_MTFI", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntities<DataverseModel.CcOf_Change_Request_MTfI>("TransactionCurrency_ccof_Change_Request_MTFI", null, value);
			}
		}
		
		/// <summary>
		/// 1:N TransactionCurrency_ccof_ece_wage
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("TransactionCurrency_ccof_ece_wage")]
		public System.Collections.Generic.IEnumerable<DataverseModel.CcOf_ECE_Wage> TransactionCurrency_CcOf_ECE_Wage
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<DataverseModel.CcOf_ECE_Wage>("TransactionCurrency_ccof_ece_wage", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntities<DataverseModel.CcOf_ECE_Wage>("TransactionCurrency_ccof_ece_wage", null, value);
			}
		}
		
		/// <summary>
		/// 1:N TransactionCurrency_ccof_Fee_Benchmark_SDA
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("TransactionCurrency_ccof_Fee_Benchmark_SDA")]
		public System.Collections.Generic.IEnumerable<DataverseModel.CcOf_Fee_Benchmark_SdA> TransactionCurrency_CcOf_Fee_Benchmark_SdA
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<DataverseModel.CcOf_Fee_Benchmark_SdA>("TransactionCurrency_ccof_Fee_Benchmark_SDA", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntities<DataverseModel.CcOf_Fee_Benchmark_SdA>("TransactionCurrency_ccof_Fee_Benchmark_SDA", null, value);
			}
		}
		
		/// <summary>
		/// 1:N TransactionCurrency_ccof_Fee_Region
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("TransactionCurrency_ccof_Fee_Region")]
		public System.Collections.Generic.IEnumerable<DataverseModel.CcOf_Fee_Region> TransactionCurrency_CcOf_Fee_Region
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<DataverseModel.CcOf_Fee_Region>("TransactionCurrency_ccof_Fee_Region", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntities<DataverseModel.CcOf_Fee_Region>("TransactionCurrency_ccof_Fee_Region", null, value);
			}
		}
		
		/// <summary>
		/// 1:N TransactionCurrency_ccof_Funding_Agreement
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("TransactionCurrency_ccof_Funding_Agreement")]
		public System.Collections.Generic.IEnumerable<DataverseModel.CcOf_Funding_Agreement> TransactionCurrency_CcOf_Funding_Agreement
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<DataverseModel.CcOf_Funding_Agreement>("TransactionCurrency_ccof_Funding_Agreement", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntities<DataverseModel.CcOf_Funding_Agreement>("TransactionCurrency_ccof_Funding_Agreement", null, value);
			}
		}
		
		/// <summary>
		/// 1:N TransactionCurrency_ccof_Median_Fee_SDA
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("TransactionCurrency_ccof_Median_Fee_SDA")]
		public System.Collections.Generic.IEnumerable<DataverseModel.CcOf_Median_Fee_SdA> TransactionCurrency_CcOf_Median_Fee_SdA
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<DataverseModel.CcOf_Median_Fee_SdA>("TransactionCurrency_ccof_Median_Fee_SDA", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntities<DataverseModel.CcOf_Median_Fee_SdA>("TransactionCurrency_ccof_Median_Fee_SDA", null, value);
			}
		}
		
		/// <summary>
		/// 1:N TransactionCurrency_ccof_monthlyenrollmentreport
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("TransactionCurrency_ccof_monthlyenrollmentreport")]
		public System.Collections.Generic.IEnumerable<DataverseModel.CcOf_MonthlyEnrollmentReport> TransactionCurrency_CcOf_MonthlyEnrollmentReport
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<DataverseModel.CcOf_MonthlyEnrollmentReport>("TransactionCurrency_ccof_monthlyenrollmentreport", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntities<DataverseModel.CcOf_MonthlyEnrollmentReport>("TransactionCurrency_ccof_monthlyenrollmentreport", null, value);
			}
		}
		
		/// <summary>
		/// 1:N TransactionCurrency_ccof_parent_fees
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("TransactionCurrency_ccof_parent_fees")]
		public System.Collections.Generic.IEnumerable<DataverseModel.CcOf_Parent_Fees> TransactionCurrency_CcOf_Parent_Fees
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<DataverseModel.CcOf_Parent_Fees>("TransactionCurrency_ccof_parent_fees", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntities<DataverseModel.CcOf_Parent_Fees>("TransactionCurrency_ccof_parent_fees", null, value);
			}
		}
		
		/// <summary>
		/// 1:N TransactionCurrency_ccof_rate
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("TransactionCurrency_ccof_rate")]
		public System.Collections.Generic.IEnumerable<DataverseModel.CcOf_Rate> TransactionCurrency_CcOf_Rate
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<DataverseModel.CcOf_Rate>("TransactionCurrency_ccof_rate", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntities<DataverseModel.CcOf_Rate>("TransactionCurrency_ccof_rate", null, value);
			}
		}
		
		/// <summary>
		/// 1:N TransactionCurrency_ccof_RFI_PFI_DCS_WI_Detail
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("TransactionCurrency_ccof_RFI_PFI_DCS_WI_Detail")]
		public System.Collections.Generic.IEnumerable<DataverseModel.CcOf_RfI_PFI_DCS_Wi_Detail> TransactionCurrency_CcOf_RfI_PFI_DCS_Wi_Detail
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<DataverseModel.CcOf_RfI_PFI_DCS_Wi_Detail>("TransactionCurrency_ccof_RFI_PFI_DCS_WI_Detail", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntities<DataverseModel.CcOf_RfI_PFI_DCS_Wi_Detail>("TransactionCurrency_ccof_RFI_PFI_DCS_WI_Detail", null, value);
			}
		}
		
		/// <summary>
		/// 1:N TransactionCurrency_ccof_rfi_pfi_fee_history_detail
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("TransactionCurrency_ccof_rfi_pfi_fee_history_detail")]
		public System.Collections.Generic.IEnumerable<DataverseModel.CcOf_RfI_PFI_Fee_History_Detail> TransactionCurrency_CcOf_RfI_PFI_Fee_History_Detail
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<DataverseModel.CcOf_RfI_PFI_Fee_History_Detail>("TransactionCurrency_ccof_rfi_pfi_fee_history_detail", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntities<DataverseModel.CcOf_RfI_PFI_Fee_History_Detail>("TransactionCurrency_ccof_rfi_pfi_fee_history_detail", null, value);
			}
		}
		
		/// <summary>
		/// 1:N TransactionCurrency_ccof_RFI_PFI_Other_Funding
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("TransactionCurrency_ccof_RFI_PFI_Other_Funding")]
		public System.Collections.Generic.IEnumerable<DataverseModel.CcOf_RfI_PFI_Other_Funding> TransactionCurrency_CcOf_RfI_PFI_Other_Funding
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<DataverseModel.CcOf_RfI_PFI_Other_Funding>("TransactionCurrency_ccof_RFI_PFI_Other_Funding", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntities<DataverseModel.CcOf_RfI_PFI_Other_Funding>("TransactionCurrency_ccof_RFI_PFI_Other_Funding", null, value);
			}
		}
		
		/// <summary>
		/// 1:N TransactionCurrency_ccof_rfipfiexpenseinfo
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("TransactionCurrency_ccof_rfipfiexpenseinfo")]
		public System.Collections.Generic.IEnumerable<DataverseModel.CcOf_RfIpFIExpenseInfo> TransactionCurrency_CcOf_RfIpFIExpenseInfo
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<DataverseModel.CcOf_RfIpFIExpenseInfo>("TransactionCurrency_ccof_rfipfiexpenseinfo", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntities<DataverseModel.CcOf_RfIpFIExpenseInfo>("TransactionCurrency_ccof_rfipfiexpenseinfo", null, value);
			}
		}
		
		/// <summary>
		/// 1:N TransactionCurrency_ccof_rfipfiserviceexpansiondetail
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("TransactionCurrency_ccof_rfipfiserviceexpansiondetail")]
		public System.Collections.Generic.IEnumerable<DataverseModel.CcOf_RfIpFIServiceExpansionDetail> TransactionCurrency_CcOf_RfIpFIServiceExpansionDetail
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<DataverseModel.CcOf_RfIpFIServiceExpansionDetail>("TransactionCurrency_ccof_rfipfiserviceexpansiondetail", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntities<DataverseModel.CcOf_RfIpFIServiceExpansionDetail>("TransactionCurrency_ccof_rfipfiserviceexpansiondetail", null, value);
			}
		}
		
		/// <summary>
		/// 1:N TransactionCurrency_ccof_RFIPFIServiceExpansionIndigenousCommunity
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("TransactionCurrency_ccof_RFIPFIServiceExpansionIndigenousCommunity")]
		public System.Collections.Generic.IEnumerable<DataverseModel.CcOf_RfIpFIServiceExpansionIndigenousCommunity> TransactionCurrency_CcOf_RfIpFIServiceExpansionIndigenousCommunity
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<DataverseModel.CcOf_RfIpFIServiceExpansionIndigenousCommunity>("TransactionCurrency_ccof_RFIPFIServiceExpansionIndigenousCommunity", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntities<DataverseModel.CcOf_RfIpFIServiceExpansionIndigenousCommunity>("TransactionCurrency_ccof_RFIPFIServiceExpansionIndigenousCommunity", null, value);
			}
		}
		
		/// <summary>
		/// 1:N transactioncurrency_contact
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("transactioncurrency_contact")]
		public System.Collections.Generic.IEnumerable<DataverseModel.Contact> TransactionCurrency_Contact
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<DataverseModel.Contact>("transactioncurrency_contact", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntities<DataverseModel.Contact>("transactioncurrency_contact", null, value);
			}
		}
		
		/// <summary>
		/// 1:N TransactionCurrency_Email
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("TransactionCurrency_Email")]
		public System.Collections.Generic.IEnumerable<DataverseModel.Email> TransactionCurrency_Email
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<DataverseModel.Email>("TransactionCurrency_Email", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntities<DataverseModel.Email>("TransactionCurrency_Email", null, value);
			}
		}
		
		/// <summary>
		/// 1:N TransactionCurrency_ofm_payment
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("TransactionCurrency_ofm_payment")]
		public System.Collections.Generic.IEnumerable<DataverseModel.OfM_Payment> TransactionCurrency_OfM_Payment
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<DataverseModel.OfM_Payment>("TransactionCurrency_ofm_payment", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntities<DataverseModel.OfM_Payment>("TransactionCurrency_ofm_payment", null, value);
			}
		}
		
		/// <summary>
		/// 1:N TransactionCurrency_SystemUser
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("TransactionCurrency_SystemUser")]
		public System.Collections.Generic.IEnumerable<DataverseModel.SystemUser> TransactionCurrency_SystemUser
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<DataverseModel.SystemUser>("TransactionCurrency_SystemUser", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntities<DataverseModel.SystemUser>("TransactionCurrency_SystemUser", null, value);
			}
		}
		
		/// <summary>
		/// N:1 lk_transactioncurrency_createdonbehalfby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_transactioncurrency_createdonbehalfby")]
		public DataverseModel.SystemUser Lk_TransactionCurrency_CreatedOnBehalfBy
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<DataverseModel.SystemUser>("lk_transactioncurrency_createdonbehalfby", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntity<DataverseModel.SystemUser>("lk_transactioncurrency_createdonbehalfby", null, value);
			}
		}
		
		/// <summary>
		/// N:1 lk_transactioncurrency_modifiedonbehalfby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_transactioncurrency_modifiedonbehalfby")]
		public DataverseModel.SystemUser Lk_TransactionCurrency_ModifiedOnBehalfBy
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<DataverseModel.SystemUser>("lk_transactioncurrency_modifiedonbehalfby", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntity<DataverseModel.SystemUser>("lk_transactioncurrency_modifiedonbehalfby", null, value);
			}
		}
		
		/// <summary>
		/// N:1 lk_transactioncurrencybase_createdby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_transactioncurrencybase_createdby")]
		public DataverseModel.SystemUser Lk_TransactionCurrencyBase_CreatedBy
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<DataverseModel.SystemUser>("lk_transactioncurrencybase_createdby", null);
			}
		}
		
		/// <summary>
		/// N:1 lk_transactioncurrencybase_modifiedby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_transactioncurrencybase_modifiedby")]
		public DataverseModel.SystemUser Lk_TransactionCurrencyBase_ModifiedBy
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<DataverseModel.SystemUser>("lk_transactioncurrencybase_modifiedby", null);
			}
		}
		
		/// <summary>
		/// Constructor for populating via LINQ queries given a LINQ anonymous type
		/// <param name="anonymousType">LINQ anonymous type.</param>
		/// </summary>
		[System.Diagnostics.DebuggerNonUserCode()]
		public TransactionCurrency(object anonymousType) : 
				this()
		{
            foreach (var p in anonymousType.GetType().GetProperties())
            {
                var value = p.GetValue(anonymousType, null);
                var name = p.Name.ToLower();
            
                if (value != null && name.EndsWith("enum") && value.GetType().BaseType == typeof(System.Enum))
                {
                    value = new Microsoft.Xrm.Sdk.OptionSetValue((int) value);
                    name = name.Remove(name.Length - "enum".Length);
                }
            
                switch (name)
                {
                    case "id":
                        base.Id = (System.Guid)value;
                        Attributes["transactioncurrencyid"] = base.Id;
                        break;
                    case "transactioncurrencyid":
                        var id = (System.Nullable<System.Guid>) value;
                        if(id == null){ continue; }
                        base.Id = id.Value;
                        Attributes[name] = base.Id;
                        break;
                    case "formattedvalues":
                        // Add Support for FormattedValues
                        FormattedValues.AddRange((Microsoft.Xrm.Sdk.FormattedValueCollection)value);
                        break;
                    default:
                        Attributes[name] = value;
                        break;
                }
            }
		}
	}
}
#pragma warning restore CS1591
